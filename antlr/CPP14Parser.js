// Generated from CPP14.g4 by ANTLR 4.6
// jshint ignore: start
var antlr4 = require('antlr4/index');
var CPP14Listener = require('./CPP14Listener').CPP14Listener;
var grammarFileName = "CPP14.g4";

var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0003\u0090\u1534\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004",
    "\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007",
    "\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f",
    "\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010",
    "\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014",
    "\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017",
    "\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b",
    "\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e",
    "\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#\t#\u0004",
    "$\t$\u0004%\t%\u0004&\t&\u0004\'\t\'\u0004(\t(\u0004)\t)\u0004*\t*\u0004",
    "+\t+\u0004,\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u0004",
    "2\t2\u00043\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u0004",
    "9\t9\u0004:\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004",
    "@\t@\u0004A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004",
    "G\tG\u0004H\tH\u0004I\tI\u0004J\tJ\u0004K\tK\u0004L\tL\u0004M\tM\u0004",
    "N\tN\u0004O\tO\u0004P\tP\u0004Q\tQ\u0004R\tR\u0004S\tS\u0004T\tT\u0004",
    "U\tU\u0004V\tV\u0004W\tW\u0004X\tX\u0004Y\tY\u0004Z\tZ\u0004[\t[\u0004",
    "\\\t\\\u0004]\t]\u0004^\t^\u0004_\t_\u0004`\t`\u0004a\ta\u0004b\tb\u0004",
    "c\tc\u0004d\td\u0004e\te\u0004f\tf\u0004g\tg\u0004h\th\u0004i\ti\u0004",
    "j\tj\u0004k\tk\u0004l\tl\u0004m\tm\u0004n\tn\u0004o\to\u0004p\tp\u0004",
    "q\tq\u0004r\tr\u0004s\ts\u0004t\tt\u0004u\tu\u0004v\tv\u0004w\tw\u0004",
    "x\tx\u0004y\ty\u0004z\tz\u0004{\t{\u0004|\t|\u0004}\t}\u0004~\t~\u0004",
    "\u007f\t\u007f\u0004\u0080\t\u0080\u0004\u0081\t\u0081\u0004\u0082\t",
    "\u0082\u0004\u0083\t\u0083\u0004\u0084\t\u0084\u0004\u0085\t\u0085\u0004",
    "\u0086\t\u0086\u0004\u0087\t\u0087\u0004\u0088\t\u0088\u0004\u0089\t",
    "\u0089\u0004\u008a\t\u008a\u0004\u008b\t\u008b\u0004\u008c\t\u008c\u0004",
    "\u008d\t\u008d\u0004\u008e\t\u008e\u0004\u008f\t\u008f\u0004\u0090\t",
    "\u0090\u0004\u0091\t\u0091\u0004\u0092\t\u0092\u0004\u0093\t\u0093\u0004",
    "\u0094\t\u0094\u0004\u0095\t\u0095\u0004\u0096\t\u0096\u0004\u0097\t",
    "\u0097\u0004\u0098\t\u0098\u0004\u0099\t\u0099\u0004\u009a\t\u009a\u0004",
    "\u009b\t\u009b\u0004\u009c\t\u009c\u0004\u009d\t\u009d\u0004\u009e\t",
    "\u009e\u0004\u009f\t\u009f\u0004\u00a0\t\u00a0\u0004\u00a1\t\u00a1\u0004",
    "\u00a2\t\u00a2\u0004\u00a3\t\u00a3\u0004\u00a4\t\u00a4\u0004\u00a5\t",
    "\u00a5\u0004\u00a6\t\u00a6\u0004\u00a7\t\u00a7\u0004\u00a8\t\u00a8\u0004",
    "\u00a9\t\u00a9\u0004\u00aa\t\u00aa\u0004\u00ab\t\u00ab\u0004\u00ac\t",
    "\u00ac\u0004\u00ad\t\u00ad\u0004\u00ae\t\u00ae\u0004\u00af\t\u00af\u0004",
    "\u00b0\t\u00b0\u0004\u00b1\t\u00b1\u0004\u00b2\t\u00b2\u0004\u00b3\t",
    "\u00b3\u0004\u00b4\t\u00b4\u0004\u00b5\t\u00b5\u0004\u00b6\t\u00b6\u0004",
    "\u00b7\t\u00b7\u0004\u00b8\t\u00b8\u0004\u00b9\t\u00b9\u0004\u00ba\t",
    "\u00ba\u0004\u00bb\t\u00bb\u0004\u00bc\t\u00bc\u0004\u00bd\t\u00bd\u0004",
    "\u00be\t\u00be\u0004\u00bf\t\u00bf\u0004\u00c0\t\u00c0\u0004\u00c1\t",
    "\u00c1\u0004\u00c2\t\u00c2\u0004\u00c3\t\u00c3\u0004\u00c4\t\u00c4\u0004",
    "\u00c5\t\u00c5\u0004\u00c6\t\u00c6\u0004\u00c7\t\u00c7\u0004\u00c8\t",
    "\u00c8\u0004\u00c9\t\u00c9\u0004\u00ca\t\u00ca\u0004\u00cb\t\u00cb\u0004",
    "\u00cc\t\u00cc\u0004\u00cd\t\u00cd\u0004\u00ce\t\u00ce\u0004\u00cf\t",
    "\u00cf\u0004\u00d0\t\u00d0\u0004\u00d1\t\u00d1\u0004\u00d2\t\u00d2\u0004",
    "\u00d3\t\u00d3\u0004\u00d4\t\u00d4\u0004\u00d5\t\u00d5\u0004\u00d6\t",
    "\u00d6\u0004\u00d7\t\u00d7\u0004\u00d8\t\u00d8\u0004\u00d9\t\u00d9\u0004",
    "\u00da\t\u00da\u0004\u00db\t\u00db\u0004\u00dc\t\u00dc\u0004\u00dd\t",
    "\u00dd\u0004\u00de\t\u00de\u0004\u00df\t\u00df\u0004\u00e0\t\u00e0\u0004",
    "\u00e1\t\u00e1\u0004\u00e2\t\u00e2\u0004\u00e3\t\u00e3\u0004\u00e4\t",
    "\u00e4\u0004\u00e5\t\u00e5\u0004\u00e6\t\u00e6\u0004\u00e7\t\u00e7\u0004",
    "\u00e8\t\u00e8\u0004\u00e9\t\u00e9\u0004\u00ea\t\u00ea\u0004\u00eb\t",
    "\u00eb\u0004\u00ec\t\u00ec\u0004\u00ed\t\u00ed\u0004\u00ee\t\u00ee\u0004",
    "\u00ef\t\u00ef\u0004\u00f0\t\u00f0\u0004\u00f1\t\u00f1\u0004\u00f2\t",
    "\u00f2\u0004\u00f3\t\u00f3\u0004\u00f4\t\u00f4\u0004\u00f5\t\u00f5\u0004",
    "\u00f6\t\u00f6\u0004\u00f7\t\u00f7\u0004\u00f8\t\u00f8\u0004\u00f9\t",
    "\u00f9\u0004\u00fa\t\u00fa\u0004\u00fb\t\u00fb\u0004\u00fc\t\u00fc\u0004",
    "\u00fd\t\u00fd\u0004\u00fe\t\u00fe\u0004\u00ff\t\u00ff\u0004\u0100\t",
    "\u0100\u0004\u0101\t\u0101\u0004\u0102\t\u0102\u0004\u0103\t\u0103\u0004",
    "\u0104\t\u0104\u0004\u0105\t\u0105\u0004\u0106\t\u0106\u0004\u0107\t",
    "\u0107\u0004\u0108\t\u0108\u0004\u0109\t\u0109\u0004\u010a\t\u010a\u0004",
    "\u010b\t\u010b\u0004\u010c\t\u010c\u0004\u010d\t\u010d\u0004\u010e\t",
    "\u010e\u0004\u010f\t\u010f\u0004\u0110\t\u0110\u0004\u0111\t\u0111\u0004",
    "\u0112\t\u0112\u0004\u0113\t\u0113\u0004\u0114\t\u0114\u0004\u0115\t",
    "\u0115\u0004\u0116\t\u0116\u0004\u0117\t\u0117\u0004\u0118\t\u0118\u0004",
    "\u0119\t\u0119\u0004\u011a\t\u011a\u0004\u011b\t\u011b\u0004\u011c\t",
    "\u011c\u0004\u011d\t\u011d\u0004\u011e\t\u011e\u0004\u011f\t\u011f\u0004",
    "\u0120\t\u0120\u0004\u0121\t\u0121\u0004\u0122\t\u0122\u0004\u0123\t",
    "\u0123\u0004\u0124\t\u0124\u0004\u0125\t\u0125\u0004\u0126\t\u0126\u0004",
    "\u0127\t\u0127\u0004\u0128\t\u0128\u0004\u0129\t\u0129\u0004\u012a\t",
    "\u012a\u0004\u012b\t\u012b\u0004\u012c\t\u012c\u0004\u012d\t\u012d\u0004",
    "\u012e\t\u012e\u0004\u012f\t\u012f\u0004\u0130\t\u0130\u0004\u0131\t",
    "\u0131\u0004\u0132\t\u0132\u0004\u0133\t\u0133\u0004\u0134\t\u0134\u0004",
    "\u0135\t\u0135\u0004\u0136\t\u0136\u0004\u0137\t\u0137\u0004\u0138\t",
    "\u0138\u0004\u0139\t\u0139\u0004\u013a\t\u013a\u0004\u013b\t\u013b\u0004",
    "\u013c\t\u013c\u0004\u013d\t\u013d\u0004\u013e\t\u013e\u0004\u013f\t",
    "\u013f\u0004\u0140\t\u0140\u0004\u0141\t\u0141\u0004\u0142\t\u0142\u0004",
    "\u0143\t\u0143\u0004\u0144\t\u0144\u0004\u0145\t\u0145\u0004\u0146\t",
    "\u0146\u0004\u0147\t\u0147\u0004\u0148\t\u0148\u0004\u0149\t\u0149\u0004",
    "\u014a\t\u014a\u0004\u014b\t\u014b\u0004\u014c\t\u014c\u0004\u014d\t",
    "\u014d\u0004\u014e\t\u014e\u0004\u014f\t\u014f\u0004\u0150\t\u0150\u0004",
    "\u0151\t\u0151\u0004\u0152\t\u0152\u0004\u0153\t\u0153\u0004\u0154\t",
    "\u0154\u0004\u0155\t\u0155\u0004\u0156\t\u0156\u0004\u0157\t\u0157\u0004",
    "\u0158\t\u0158\u0004\u0159\t\u0159\u0004\u015a\t\u015a\u0004\u015b\t",
    "\u015b\u0004\u015c\t\u015c\u0004\u015d\t\u015d\u0004\u015e\t\u015e\u0004",
    "\u015f\t\u015f\u0004\u0160\t\u0160\u0004\u0161\t\u0161\u0004\u0162\t",
    "\u0162\u0004\u0163\t\u0163\u0004\u0164\t\u0164\u0004\u0165\t\u0165\u0004",
    "\u0166\t\u0166\u0004\u0167\t\u0167\u0004\u0168\t\u0168\u0004\u0169\t",
    "\u0169\u0004\u016a\t\u016a\u0004\u016b\t\u016b\u0004\u016c\t\u016c\u0004",
    "\u016d\t\u016d\u0004\u016e\t\u016e\u0004\u016f\t\u016f\u0004\u0170\t",
    "\u0170\u0004\u0171\t\u0171\u0004\u0172\t\u0172\u0004\u0173\t\u0173\u0004",
    "\u0174\t\u0174\u0004\u0175\t\u0175\u0004\u0176\t\u0176\u0004\u0177\t",
    "\u0177\u0004\u0178\t\u0178\u0004\u0179\t\u0179\u0004\u017a\t\u017a\u0004",
    "\u017b\t\u017b\u0004\u017c\t\u017c\u0004\u017d\t\u017d\u0004\u017e\t",
    "\u017e\u0004\u017f\t\u017f\u0004\u0180\t\u0180\u0004\u0181\t\u0181\u0004",
    "\u0182\t\u0182\u0004\u0183\t\u0183\u0004\u0184\t\u0184\u0004\u0185\t",
    "\u0185\u0004\u0186\t\u0186\u0004\u0187\t\u0187\u0003\u0002\u0005\u0002",
    "\u0310\n\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0005",
    "\u0003\u031c\n\u0003\u0003\u0004\u0003\u0004\u0005\u0004\u0320\n\u0004",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005",
    "\u0003\u0005\u0003\u0005\u0003\u0005\u0005\u0005\u032b\n\u0005\u0003",
    "\u0006\u0003\u0006\u0005\u0006\u032f\n\u0006\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0005\u0007",
    "\u033e\n\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0003",
    "\u0007\u0005\u0007\u0345\n\u0007\u0003\u0007\u0003\u0007\u0003\u0007",
    "\u0007\u0007\u034a\n\u0007\f\u0007\u000e\u0007\u034d\u000b\u0007\u0003",
    "\b\u0003\b\u0005\b\u0351\n\b\u0003\b\u0003\b\u0003\t\u0003\t\u0005\t",
    "\u0357\n\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003",
    "\n\u0005\n\u0361\n\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f",
    "\u0005\f\u0368\n\f\u0003\f\u0003\f\u0003\f\u0003\f\u0005\f\u036e\n\f",
    "\u0007\f\u0370\n\f\f\f\u000e\f\u0373\u000b\f\u0003\r\u0003\r\u0005\r",
    "\u0377\n\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0005\u000e",
    "\u037d\n\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0005\u000f\u0384\n\u000f\u0003\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0010\u0005\u0010\u038a\n\u0010\u0003\u0010\u0005\u0010\u038d",
    "\n\u0010\u0003\u0010\u0005\u0010\u0390\n\u0010\u0003\u0010\u0005\u0010",
    "\u0393\n\u0010\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0005\u0011\u039a\n\u0011\u0003\u0011\u0003\u0011\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0005\u0011\u03a1\n\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0005\u0011\u03d5\n\u0011\u0003\u0011\u0003\u0011\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011",
    "\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011\u03e4\n",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011\u03ea",
    "\n\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0005\u0011",
    "\u03f0\n\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003\u0011\u0003",
    "\u0011\u0007\u0011\u03fd\n\u0011\f\u0011\u000e\u0011\u0400\u000b\u0011",
    "\u0003\u0012\u0003\u0012\u0003\u0013\u0005\u0013\u0405\n\u0013\u0003",
    "\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003",
    "\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003",
    "\u0013\u0005\u0013\u0414\n\u0013\u0003\u0013\u0003\u0013\u0003\u0013",
    "\u0003\u0013\u0005\u0013\u041a\n\u0013\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0005\u0014\u0438\n\u0014\u0003\u0015\u0003\u0015",
    "\u0003\u0016\u0005\u0016\u043d\n\u0016\u0003\u0016\u0003\u0016\u0005",
    "\u0016\u0441\n\u0016\u0003\u0016\u0003\u0016\u0005\u0016\u0445\n\u0016",
    "\u0003\u0016\u0005\u0016\u0448\n\u0016\u0003\u0016\u0003\u0016\u0005",
    "\u0016\u044c\n\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016",
    "\u0005\u0016\u0452\n\u0016\u0005\u0016\u0454\n\u0016\u0003\u0017\u0003",
    "\u0017\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0005\u0018\u045c",
    "\n\u0018\u0003\u0019\u0003\u0019\u0005\u0019\u0460\n\u0019\u0003\u0019",
    "\u0005\u0019\u0463\n\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0003",
    "\u001a\u0003\u001a\u0005\u001a\u046a\n\u001a\u0003\u001a\u0003\u001a",
    "\u0003\u001a\u0003\u001a\u0003\u001a\u0005\u001a\u0471\n\u001a\u0007",
    "\u001a\u0473\n\u001a\f\u001a\u000e\u001a\u0476\u000b\u001a\u0003\u001b",
    "\u0003\u001b\u0005\u001b\u047a\n\u001b\u0003\u001b\u0003\u001b\u0005",
    "\u001b\u047e\n\u001b\u0003\u001c\u0005\u001c\u0481\n\u001c\u0003\u001c",
    "\u0003\u001c\u0003\u001c\u0005\u001c\u0486\n\u001c\u0003\u001c\u0003",
    "\u001c\u0003\u001c\u0003\u001c\u0005\u001c\u048c\n\u001c\u0003\u001d",
    "\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001e\u0003\u001e",
    "\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0005\u001e\u0499\n",
    "\u001e\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003",
    "\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0007\u001f\u04a4\n\u001f",
    "\f\u001f\u000e\u001f\u04a7\u000b\u001f\u0003 \u0003 \u0003 \u0003 \u0003",
    " \u0003 \u0003 \u0003 \u0003 \u0003 \u0003 \u0003 \u0007 \u04b5\n \f",
    " \u000e \u04b8\u000b \u0003!\u0003!\u0003!\u0003!\u0003!\u0003!\u0003",
    "!\u0003!\u0003!\u0007!\u04c3\n!\f!\u000e!\u04c6\u000b!\u0003\"\u0003",
    "\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0007",
    "\"\u04d2\n\"\f\"\u000e\"\u04d5\u000b\"\u0003#\u0003#\u0003#\u0003#\u0003",
    "#\u0003#\u0003#\u0003#\u0003#\u0003#\u0003#\u0003#\u0003#\u0003#\u0003",
    "#\u0007#\u04e6\n#\f#\u000e#\u04e9\u000b#\u0003$\u0003$\u0003$\u0003",
    "$\u0003$\u0003$\u0003$\u0003$\u0003$\u0007$\u04f4\n$\f$\u000e$\u04f7",
    "\u000b$\u0003%\u0003%\u0003%\u0003%\u0003%\u0003%\u0007%\u04ff\n%\f",
    "%\u000e%\u0502\u000b%\u0003&\u0003&\u0003&\u0003&\u0003&\u0003&\u0007",
    "&\u050a\n&\f&\u000e&\u050d\u000b&\u0003\'\u0003\'\u0003\'\u0003\'\u0003",
    "\'\u0003\'\u0007\'\u0515\n\'\f\'\u000e\'\u0518\u000b\'\u0003(\u0003",
    "(\u0003(\u0003(\u0003(\u0003(\u0007(\u0520\n(\f(\u000e(\u0523\u000b",
    "(\u0003)\u0003)\u0003)\u0003)\u0003)\u0003)\u0007)\u052b\n)\f)\u000e",
    ")\u052e\u000b)\u0003*\u0003*\u0003*\u0003*\u0003*\u0003*\u0003*\u0005",
    "*\u0537\n*\u0003+\u0003+\u0003+\u0003+\u0003+\u0003+\u0005+\u053f\n",
    "+\u0003,\u0003,\u0003,\u0003,\u0003,\u0003,\u0003,\u0003,\u0003,\u0003",
    ",\u0003,\u0005,\u054c\n,\u0003-\u0003-\u0003-\u0003-\u0003-\u0003-\u0007",
    "-\u0554\n-\f-\u000e-\u0557\u000b-\u0003.\u0003.\u0003/\u0003/\u0005",
    "/\u055d\n/\u0003/\u0003/\u0005/\u0561\n/\u0003/\u0003/\u0005/\u0565",
    "\n/\u0003/\u0003/\u0005/\u0569\n/\u0003/\u0003/\u0005/\u056d\n/\u0003",
    "/\u0003/\u0003/\u0005/\u0572\n/\u0003/\u0005/\u0575\n/\u00030\u0005",
    "0\u0578\n0\u00030\u00030\u00030\u00030\u00050\u057e\n0\u00030\u0003",
    "0\u00030\u00030\u00030\u00030\u00050\u0586\n0\u00030\u00030\u00030\u0005",
    "0\u058b\n0\u00031\u00051\u058e\n1\u00031\u00031\u00032\u00032\u0005",
    "2\u0594\n2\u00032\u00032\u00033\u00033\u00033\u00033\u00033\u00073\u059d",
    "\n3\f3\u000e3\u05a0\u000b3\u00034\u00034\u00034\u00034\u00034\u0003",
    "4\u00034\u00034\u00034\u00034\u00034\u00034\u00034\u00034\u00034\u0003",
    "4\u00034\u00034\u00034\u00034\u00054\u05b6\n4\u00035\u00035\u00055\u05ba",
    "\n5\u00035\u00035\u00035\u00035\u00035\u00035\u00055\u05c2\n5\u0003",
    "5\u00035\u00035\u00035\u00055\u05c8\n5\u00036\u00036\u00036\u00036\u0003",
    "6\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u0003",
    "6\u00036\u00036\u00036\u00056\u05dc\n6\u00036\u00036\u00056\u05e0\n",
    "6\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u00036\u0003",
    "6\u00036\u00056\u05ed\n6\u00037\u00037\u00057\u05f1\n7\u00038\u0005",
    "8\u05f4\n8\u00038\u00038\u00038\u00039\u00039\u00059\u05fb\n9\u0003",
    ":\u0003:\u0003:\u0003:\u0003:\u0003:\u0005:\u0603\n:\u0003:\u0003:\u0003",
    ":\u0003:\u0003:\u0003:\u0003:\u0003:\u0005:\u060d\n:\u0003;\u0003;\u0003",
    "<\u0003<\u0003<\u0003<\u0003<\u0007<\u0616\n<\f<\u000e<\u0619\u000b",
    "<\u0003=\u0003=\u0003=\u0003=\u0003=\u0003=\u0003=\u0003=\u0003=\u0005",
    "=\u0624\n=\u0003>\u0003>\u0003>\u0003>\u0003>\u0003>\u0003>\u0003>\u0005",
    ">\u062e\n>\u0003?\u0003?\u0003?\u0005?\u0633\n?\u0003?\u0003?\u0003",
    "?\u0003?\u0003@\u0005@\u063a\n@\u0003@\u0005@\u063d\n@\u0003@\u0003",
    "@\u0003@\u0005@\u0642\n@\u0003@\u0003@\u0003@\u0005@\u0647\n@\u0003",
    "A\u0003A\u0003A\u0003A\u0003A\u0003A\u0003A\u0003A\u0003B\u0003B\u0003",
    "C\u0003C\u0003C\u0003D\u0003D\u0003D\u0003D\u0003D\u0003D\u0005D\u065c",
    "\nD\u0003E\u0003E\u0005E\u0660\nE\u0003E\u0003E\u0003E\u0005E\u0665",
    "\nE\u0003F\u0003F\u0003G\u0003G\u0003H\u0003H\u0003I\u0003I\u0003I\u0005",
    "I\u0670\nI\u0003J\u0003J\u0003J\u0003J\u0005J\u0676\nJ\u0003K\u0003",
    "K\u0005K\u067a\nK\u0003K\u0003K\u0003K\u0005K\u067f\nK\u0003L\u0003",
    "L\u0005L\u0683\nL\u0003L\u0003L\u0003L\u0005L\u0688\nL\u0003M\u0005",
    "M\u068b\nM\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003",
    "M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003M\u0003",
    "M\u0003M\u0005M\u06a1\nM\u0003N\u0003N\u0003N\u0003N\u0005N\u06a7\n",
    "N\u0003O\u0003O\u0003O\u0003O\u0003O\u0003O\u0003O\u0003O\u0003O\u0005",
    "O\u06b2\nO\u0003P\u0003P\u0005P\u06b6\nP\u0003P\u0005P\u06b9\nP\u0003",
    "P\u0003P\u0003P\u0003P\u0003P\u0003P\u0003P\u0003P\u0005P\u06c3\nP\u0003",
    "P\u0003P\u0003P\u0003P\u0005P\u06c9\nP\u0003P\u0005P\u06cc\nP\u0003",
    "Q\u0003Q\u0003R\u0003R\u0003R\u0005R\u06d3\nR\u0003R\u0003R\u0003R\u0003",
    "R\u0003R\u0003R\u0003R\u0003R\u0005R\u06dd\nR\u0003S\u0003S\u0005S\u06e1",
    "\nS\u0003S\u0005S\u06e4\nS\u0003S\u0005S\u06e7\nS\u0003S\u0003S\u0005",
    "S\u06eb\nS\u0003S\u0003S\u0003S\u0005S\u06f0\nS\u0005S\u06f2\nS\u0003",
    "T\u0003T\u0005T\u06f6\nT\u0003T\u0003T\u0005T\u06fa\nT\u0003T\u0003",
    "T\u0003U\u0003U\u0003U\u0003U\u0003U\u0005U\u0703\nU\u0003V\u0003V\u0003",
    "V\u0003W\u0003W\u0003W\u0003W\u0003W\u0003W\u0007W\u070e\nW\fW\u000e",
    "W\u0711\u000bW\u0003X\u0003X\u0003X\u0003X\u0003X\u0005X\u0718\nX\u0003",
    "Y\u0003Y\u0003Z\u0003Z\u0005Z\u071e\nZ\u0003[\u0003[\u0003\\\u0003\\",
    "\u0005\\\u0724\n\\\u0003]\u0003]\u0005]\u0728\n]\u0003^\u0005^\u072b",
    "\n^\u0003^\u0003^\u0003^\u0003^\u0003^\u0003^\u0003_\u0005_\u0734\n",
    "_\u0003_\u0003_\u0003_\u0003_\u0003_\u0003_\u0003`\u0005`\u073d\n`\u0003",
    "`\u0003`\u0003`\u0003`\u0003`\u0003a\u0005a\u0745\na\u0003b\u0003b\u0003",
    "c\u0003c\u0003c\u0003c\u0003c\u0003c\u0003d\u0005d\u0750\nd\u0003d\u0003",
    "d\u0003e\u0003e\u0005e\u0756\ne\u0003e\u0003e\u0003e\u0003e\u0003e\u0003",
    "e\u0003e\u0003e\u0003e\u0005e\u0761\ne\u0003f\u0005f\u0764\nf\u0003",
    "f\u0003f\u0003f\u0005f\u0769\nf\u0003f\u0003f\u0003f\u0003g\u0003g\u0003",
    "g\u0003g\u0003g\u0003g\u0003h\u0003h\u0003h\u0003h\u0005h\u0778\nh\u0003",
    "h\u0003h\u0003h\u0003h\u0005h\u077e\nh\u0003i\u0003i\u0003i\u0003i\u0003",
    "i\u0007i\u0785\ni\fi\u000ei\u0788\u000bi\u0003j\u0003j\u0003j\u0003",
    "j\u0003j\u0003j\u0003j\u0005j\u0791\nj\u0003k\u0003k\u0003k\u0003k\u0005",
    "k\u0797\nk\u0003k\u0003k\u0003k\u0003k\u0003k\u0003k\u0005k\u079f\n",
    "k\u0003k\u0003k\u0005k\u07a3\nk\u0003l\u0003l\u0005l\u07a7\nl\u0003",
    "l\u0003l\u0003l\u0005l\u07ac\nl\u0003l\u0003l\u0003l\u0005l\u07b1\n",
    "l\u0003l\u0003l\u0003l\u0003l\u0003l\u0007l\u07b8\nl\fl\u000el\u07bb",
    "\u000bl\u0003m\u0003m\u0005m\u07bf\nm\u0003n\u0003n\u0005n\u07c3\nn",
    "\u0003o\u0003o\u0003o\u0003o\u0003p\u0003p\u0003q\u0003q\u0003q\u0003",
    "q\u0003r\u0003r\u0005r\u07d1\nr\u0003r\u0003r\u0007r\u07d5\nr\fr\u000e",
    "r\u07d8\u000br\u0003s\u0003s\u0003s\u0003s\u0003s\u0003s\u0003s\u0003",
    "s\u0003s\u0003s\u0003s\u0003s\u0005s\u07e6\ns\u0003t\u0003t\u0003t\u0003",
    "t\u0003t\u0003t\u0007t\u07ee\nt\ft\u000et\u07f1\u000bt\u0003u\u0003",
    "u\u0005u\u07f5\nu\u0003v\u0003v\u0003v\u0003v\u0003v\u0005v\u07fc\n",
    "v\u0003w\u0003w\u0003w\u0003w\u0005w\u0802\nw\u0003x\u0003x\u0003x\u0005",
    "x\u0807\nx\u0003x\u0003x\u0003x\u0003x\u0005x\u080d\nx\u0003x\u0003",
    "x\u0003x\u0003x\u0003x\u0005x\u0814\nx\u0003x\u0003x\u0005x\u0818\n",
    "x\u0007x\u081a\nx\fx\u000ex\u081d\u000bx\u0003y\u0003y\u0003y\u0003",
    "y\u0005y\u0823\ny\u0003y\u0005y\u0826\ny\u0003y\u0005y\u0829\ny\u0003",
    "y\u0005y\u082c\ny\u0003z\u0003z\u0003z\u0005z\u0831\nz\u0003{\u0003",
    "{\u0005{\u0835\n{\u0003{\u0005{\u0838\n{\u0003{\u0003{\u0005{\u083c",
    "\n{\u0003{\u0003{\u0005{\u0840\n{\u0003{\u0003{\u0003{\u0005{\u0845",
    "\n{\u0003{\u0005{\u0848\n{\u0005{\u084a\n{\u0003|\u0003|\u0005|\u084e",
    "\n|\u0003}\u0003}\u0003~\u0003~\u0003\u007f\u0005\u007f\u0855\n\u007f",
    "\u0003\u007f\u0003\u007f\u0003\u0080\u0003\u0080\u0005\u0080\u085b\n",
    "\u0080\u0003\u0081\u0003\u0081\u0005\u0081\u085f\n\u0081\u0003\u0081",
    "\u0003\u0081\u0003\u0081\u0003\u0081\u0005\u0081\u0865\n\u0081\u0003",
    "\u0082\u0003\u0082\u0003\u0082\u0005\u0082\u086a\n\u0082\u0005\u0082",
    "\u086c\n\u0082\u0003\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0005",
    "\u0083\u0872\n\u0083\u0003\u0083\u0003\u0083\u0005\u0083\u0876\n\u0083",
    "\u0003\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0005\u0083\u087c\n",
    "\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0003\u0083\u0005",
    "\u0083\u0883\n\u0083\u0003\u0083\u0003\u0083\u0005\u0083\u0887\n\u0083",
    "\u0007\u0083\u0889\n\u0083\f\u0083\u000e\u0083\u088c\u000b\u0083\u0003",
    "\u0084\u0003\u0084\u0003\u0084\u0003\u0084\u0005\u0084\u0892\n\u0084",
    "\u0003\u0085\u0003\u0085\u0003\u0085\u0003\u0085\u0003\u0085\u0003\u0085",
    "\u0003\u0085\u0003\u0085\u0005\u0085\u089c\n\u0085\u0003\u0085\u0003",
    "\u0085\u0005\u0085\u08a0\n\u0085\u0007\u0085\u08a2\n\u0085\f\u0085\u000e",
    "\u0085\u08a5\u000b\u0085\u0003\u0086\u0005\u0086\u08a8\n\u0086\u0003",
    "\u0086\u0005\u0086\u08ab\n\u0086\u0003\u0086\u0003\u0086\u0003\u0086",
    "\u0003\u0086\u0005\u0086\u08b1\n\u0086\u0003\u0087\u0003\u0087\u0003",
    "\u0087\u0003\u0087\u0003\u0087\u0003\u0087\u0007\u0087\u08b9\n\u0087",
    "\f\u0087\u000e\u0087\u08bc\u000b\u0087\u0003\u0088\u0005\u0088\u08bf",
    "\n\u0088\u0003\u0088\u0003\u0088\u0003\u0088\u0003\u0088\u0005\u0088",
    "\u08c5\n\u0088\u0003\u0088\u0003\u0088\u0003\u0088\u0003\u0088\u0003",
    "\u0088\u0003\u0088\u0005\u0088\u08cd\n\u0088\u0003\u0088\u0003\u0088",
    "\u0005\u0088\u08d1\n\u0088\u0003\u0088\u0005\u0088\u08d4\n\u0088\u0003",
    "\u0088\u0003\u0088\u0005\u0088\u08d8\n\u0088\u0003\u0088\u0003\u0088",
    "\u0003\u0088\u0005\u0088\u08dd\n\u0088\u0003\u0089\u0005\u0089\u08e0",
    "\n\u0089\u0003\u0089\u0005\u0089\u08e3\n\u0089\u0003\u0089\u0003\u0089",
    "\u0005\u0089\u08e7\n\u0089\u0003\u0089\u0003\u0089\u0003\u008a\u0005",
    "\u008a\u08ec\n\u008a\u0003\u008a\u0003\u008a\u0003\u008a\u0003\u008a",
    "\u0003\u008a\u0003\u008a\u0003\u008a\u0003\u008a\u0005\u008a\u08f6\n",
    "\u008a\u0003\u008b\u0003\u008b\u0003\u008b\u0003\u008b\u0003\u008b\u0005",
    "\u008b\u08fd\n\u008b\u0003\u008c\u0003\u008c\u0003\u008c\u0005\u008c",
    "\u0902\n\u008c\u0003\u008d\u0003\u008d\u0005\u008d\u0906\n\u008d\u0003",
    "\u008e\u0003\u008e\u0003\u008e\u0005\u008e\u090b\n\u008e\u0003\u008e",
    "\u0003\u008e\u0003\u008e\u0003\u008e\u0005\u008e\u0911\n\u008e\u0007",
    "\u008e\u0913\n\u008e\f\u008e\u000e\u008e\u0916\u000b\u008e\u0003\u008f",
    "\u0003\u008f\u0003\u008f\u0005\u008f\u091b\n\u008f\u0003\u008f\u0003",
    "\u008f\u0003\u008f\u0003\u008f\u0005\u008f\u0921\n\u008f\u0003\u0090",
    "\u0003\u0090\u0005\u0090\u0925\n\u0090\u0003\u0091\u0003\u0091\u0003",
    "\u0091\u0005\u0091\u092a\n\u0091\u0003\u0091\u0003\u0091\u0003\u0092",
    "\u0003\u0092\u0005\u0092\u0930\n\u0092\u0003\u0092\u0003\u0092\u0005",
    "\u0092\u0934\n\u0092\u0003\u0092\u0005\u0092\u0937\n\u0092\u0003\u0092",
    "\u0003\u0092\u0005\u0092\u093b\n\u0092\u0003\u0092\u0005\u0092\u093e",
    "\n\u0092\u0005\u0092\u0940\n\u0092\u0003\u0093\u0005\u0093\u0943\n\u0093",
    "\u0003\u0093\u0003\u0093\u0003\u0094\u0003\u0094\u0003\u0095\u0003\u0095",
    "\u0003\u0096\u0003\u0096\u0005\u0096\u094d\n\u0096\u0003\u0096\u0003",
    "\u0096\u0003\u0096\u0005\u0096\u0952\n\u0096\u0005\u0096\u0954\n\u0096",
    "\u0003\u0097\u0005\u0097\u0957\n\u0097\u0003\u0097\u0005\u0097\u095a",
    "\n\u0097\u0003\u0097\u0005\u0097\u095d\n\u0097\u0003\u0097\u0003\u0097",
    "\u0003\u0097\u0003\u0097\u0003\u0097\u0003\u0097\u0003\u0097\u0005\u0097",
    "\u0966\n\u0097\u0003\u0098\u0003\u0098\u0003\u0098\u0003\u0098\u0003",
    "\u0098\u0003\u0098\u0007\u0098\u096e\n\u0098\f\u0098\u000e\u0098\u0971",
    "\u000b\u0098\u0003\u0099\u0003\u0099\u0005\u0099\u0975\n\u0099\u0003",
    "\u0099\u0005\u0099\u0978\n\u0099\u0003\u0099\u0003\u0099\u0005\u0099",
    "\u097c\n\u0099\u0003\u0099\u0005\u0099\u097f\n\u0099\u0003\u0099\u0005",
    "\u0099\u0982\n\u0099\u0003\u0099\u0003\u0099\u0005\u0099\u0986\n\u0099",
    "\u0003\u009a\u0003\u009a\u0003\u009a\u0003\u009a\u0003\u009a\u0007\u009a",
    "\u098d\n\u009a\f\u009a\u000e\u009a\u0990\u000b\u009a\u0003\u009b\u0003",
    "\u009b\u0003\u009c\u0003\u009c\u0003\u009c\u0003\u009c\u0003\u009d\u0003",
    "\u009d\u0003\u009d\u0003\u009e\u0003\u009e\u0003\u009e\u0005\u009e\u099e",
    "\n\u009e\u0003\u009e\u0003\u009e\u0003\u009e\u0003\u009e\u0005\u009e",
    "\u09a4\n\u009e\u0007\u009e\u09a6\n\u009e\f\u009e\u000e\u009e\u09a9\u000b",
    "\u009e\u0003\u009f\u0005\u009f\u09ac\n\u009f\u0003\u009f\u0003\u009f",
    "\u0005\u009f\u09b0\n\u009f\u0003\u009f\u0003\u009f\u0005\u009f\u09b4",
    "\n\u009f\u0003\u009f\u0003\u009f\u0005\u009f\u09b8\n\u009f\u0003\u009f",
    "\u0003\u009f\u0005\u009f\u09bc\n\u009f\u0003\u009f\u0003\u009f\u0005",
    "\u009f\u09c0\n\u009f\u0003\u00a0\u0005\u00a0\u09c3\n\u00a0\u0003\u00a0",
    "\u0003\u00a0\u0005\u00a0\u09c7\n\u00a0\u0003\u00a1\u0003\u00a1\u0003",
    "\u00a2\u0003\u00a2\u0003\u00a3\u0003\u00a3\u0003\u00a3\u0003\u00a4\u0003",
    "\u00a4\u0005\u00a4\u09d2\n\u00a4\u0003\u00a5\u0003\u00a5\u0005\u00a5",
    "\u09d6\n\u00a5\u0003\u00a6\u0003\u00a6\u0003\u00a6\u0003\u00a7\u0003",
    "\u00a7\u0005\u00a7\u09dd\n\u00a7\u0003\u00a7\u0003\u00a7\u0005\u00a7",
    "\u09e1\n\u00a7\u0003\u00a7\u0003\u00a7\u0003\u00a7\u0005\u00a7\u09e6",
    "\n\u00a7\u0003\u00a8\u0003\u00a8\u0003\u00a8\u0005\u00a8\u09eb\n\u00a8",
    "\u0003\u00a8\u0003\u00a8\u0003\u00a8\u0003\u00a8\u0003\u00a8\u0005\u00a8",
    "\u09f2\n\u00a8\u0003\u00a9\u0003\u00a9\u0005\u00a9\u09f6\n\u00a9\u0003",
    "\u00aa\u0003\u00aa\u0003\u00aa\u0003\u00ab\u0003\u00ab\u0003\u00ab\u0003",
    "\u00ab\u0003\u00ab\u0005\u00ab\u0a00\n\u00ab\u0003\u00ac\u0003\u00ac",
    "\u0003\u00ac\u0003\u00ac\u0003\u00ac\u0003\u00ac\u0003\u00ad\u0003\u00ad",
    "\u0003\u00ad\u0003\u00ad\u0003\u00ad\u0003\u00ad\u0007\u00ad\u0a0e\n",
    "\u00ad\f\u00ad\u000e\u00ad\u0a11\u000b\u00ad\u0003\u00ae\u0003\u00ae",
    "\u0005\u00ae\u0a15\n\u00ae\u0003\u00af\u0003\u00af\u0005\u00af\u0a19",
    "\n\u00af\u0003\u00af\u0005\u00af\u0a1c\n\u00af\u0003\u00af\u0003\u00af",
    "\u0005\u00af\u0a20\n\u00af\u0003\u00af\u0003\u00af\u0003\u00af\u0003",
    "\u00af\u0005\u00af\u0a26\n\u00af\u0003\u00af\u0005\u00af\u0a29\n\u00af",
    "\u0003\u00af\u0003\u00af\u0005\u00af\u0a2d\n\u00af\u0003\u00af\u0003",
    "\u00af\u0003\u00af\u0003\u00af\u0003\u00af\u0003\u00af\u0003\u00af\u0003",
    "\u00af\u0005\u00af\u0a37\n\u00af\u0003\u00af\u0005\u00af\u0a3a\n\u00af",
    "\u0003\u00af\u0003\u00af\u0003\u00af\u0003\u00af\u0003\u00af\u0003\u00af",
    "\u0005\u00af\u0a42\n\u00af\u0003\u00af\u0003\u00af\u0003\u00af\u0005",
    "\u00af\u0a47\n\u00af\u0003\u00b0\u0003\u00b0\u0003\u00b0\u0005\u00b0",
    "\u0a4c\n\u00b0\u0003\u00b0\u0003\u00b0\u0003\u00b1\u0003\u00b1\u0003",
    "\u00b1\u0003\u00b1\u0005\u00b1\u0a54\n\u00b1\u0003\u00b1\u0003\u00b1",
    "\u0003\u00b1\u0003\u00b1\u0003\u00b1\u0005\u00b1\u0a5b\n\u00b1\u0003",
    "\u00b1\u0003\u00b1\u0005\u00b1\u0a5f\n\u00b1\u0003\u00b2\u0003\u00b2",
    "\u0003\u00b3\u0003\u00b3\u0003\u00b3\u0005\u00b3\u0a66\n\u00b3\u0003",
    "\u00b3\u0003\u00b3\u0003\u00b3\u0003\u00b3\u0005\u00b3\u0a6c\n\u00b3",
    "\u0007\u00b3\u0a6e\n\u00b3\f\u00b3\u000e\u00b3\u0a71\u000b\u00b3\u0003",
    "\u00b4\u0003\u00b4\u0003\u00b4\u0005\u00b4\u0a76\n\u00b4\u0003\u00b5",
    "\u0003\u00b5\u0003\u00b5\u0003\u00b5\u0003\u00b5\u0003\u00b5\u0003\u00b5",
    "\u0005\u00b5\u0a7f\n\u00b5\u0003\u00b5\u0003\u00b5\u0005\u00b5\u0a83",
    "\n\u00b5\u0003\u00b6\u0005\u00b6\u0a86\n\u00b6\u0003\u00b6\u0003\u00b6",
    "\u0003\u00b6\u0003\u00b7\u0003\u00b7\u0003\u00b7\u0003\u00b7\u0003\u00b7",
    "\u0003\u00b8\u0003\u00b8\u0003\u00b8\u0003\u00b8\u0003\u00b9\u0003\u00b9",
    "\u0005\u00b9\u0a96\n\u00b9\u0003\u00b9\u0003\u00b9\u0003\u00b9\u0003",
    "\u00ba\u0003\u00ba\u0005\u00ba\u0a9d\n\u00ba\u0003\u00bb\u0003\u00bb",
    "\u0003\u00bb\u0003\u00bb\u0003\u00bb\u0003\u00bb\u0003\u00bc\u0005\u00bc",
    "\u0aa6\n\u00bc\u0003\u00bc\u0003\u00bc\u0003\u00bc\u0003\u00bc\u0005",
    "\u00bc\u0aac\n\u00bc\u0003\u00bc\u0003\u00bc\u0005\u00bc\u0ab0\n\u00bc",
    "\u0003\u00bc\u0005\u00bc\u0ab3\n\u00bc\u0003\u00bd\u0003\u00bd\u0005",
    "\u00bd\u0ab7\n\u00bd\u0003\u00be\u0003\u00be\u0005\u00be\u0abb\n\u00be",
    "\u0003\u00bf\u0003\u00bf\u0003\u00bf\u0005\u00bf\u0ac0\n\u00bf\u0003",
    "\u00bf\u0003\u00bf\u0003\u00c0\u0003\u00c0\u0003\u00c0\u0005\u00c0\u0ac7",
    "\n\u00c0\u0003\u00c0\u0003\u00c0\u0003\u00c0\u0003\u00c0\u0005\u00c0",
    "\u0acd\n\u00c0\u0007\u00c0\u0acf\n\u00c0\f\u00c0\u000e\u00c0\u0ad2\u000b",
    "\u00c0\u0003\u00c1\u0003\u00c1\u0003\u00c1\u0003\u00c1\u0003\u00c1\u0003",
    "\u00c1\u0005\u00c1\u0ada\n\u00c1\u0003\u00c2\u0003\u00c2\u0003\u00c2",
    "\u0003\u00c2\u0003\u00c2\u0003\u00c2\u0003\u00c2\u0003\u00c2\u0003\u00c2",
    "\u0003\u00c2\u0003\u00c2\u0003\u00c2\u0003\u00c2\u0003\u00c2\u0003\u00c2",
    "\u0003\u00c2\u0005\u00c2\u0aec\n\u00c2\u0003\u00c3\u0003\u00c3\u0003",
    "\u00c3\u0003\u00c3\u0003\u00c3\u0003\u00c3\u0005\u00c3\u0af4\n\u00c3",
    "\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4",
    "\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4",
    "\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4",
    "\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0003\u00c4\u0005\u00c4\u0b0c\n",
    "\u00c4\u0003\u00c5\u0003\u00c5\u0005\u00c5\u0b10\n\u00c5\u0003\u00c5",
    "\u0003\u00c5\u0003\u00c5\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6",
    "\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6",
    "\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6",
    "\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0005\u00c6",
    "\u0b2a\n\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0003\u00c6\u0005",
    "\u00c6\u0b30\n\u00c6\u0003\u00c7\u0003\u00c7\u0005\u00c7\u0b34\n\u00c7",
    "\u0003\u00c7\u0003\u00c7\u0003\u00c7\u0003\u00c8\u0003\u00c8\u0005\u00c8",
    "\u0b3b\n\u00c8\u0003\u00c8\u0003\u00c8\u0003\u00c8\u0003\u00c9\u0003",
    "\u00c9\u0003\u00c9\u0003\u00c9\u0003\u00c9\u0003\u00c9\u0003\u00c9\u0003",
    "\u00c9\u0003\u00c9\u0003\u00c9\u0003\u00c9\u0005\u00c9\u0b4b\n\u00c9",
    "\u0003\u00ca\u0003\u00ca\u0003\u00ca\u0003\u00ca\u0005\u00ca\u0b51\n",
    "\u00ca\u0003\u00cb\u0003\u00cb\u0005\u00cb\u0b55\n\u00cb\u0003\u00cb",
    "\u0003\u00cb\u0003\u00cb\u0003\u00cb\u0003\u00cb\u0003\u00cb\u0005\u00cb",
    "\u0b5d\n\u00cb\u0003\u00cb\u0003\u00cb\u0005\u00cb\u0b61\n\u00cb\u0003",
    "\u00cc\u0003\u00cc\u0003\u00cc\u0003\u00cc\u0003\u00cc\u0003\u00cc\u0005",
    "\u00cc\u0b69\n\u00cc\u0003\u00cd\u0003\u00cd\u0003\u00cd\u0003\u00cd",
    "\u0003\u00cd\u0003\u00cd\u0003\u00cd\u0005\u00cd\u0b72\n\u00cd\u0003",
    "\u00ce\u0003\u00ce\u0003\u00ce\u0003\u00ce\u0003\u00ce\u0003\u00ce\u0003",
    "\u00ce\u0003\u00ce\u0003\u00ce\u0005\u00ce\u0b7d\n\u00ce\u0003\u00cf",
    "\u0003\u00cf\u0003\u00cf\u0003\u00cf\u0005\u00cf\u0b83\n\u00cf\u0003",
    "\u00cf\u0005\u00cf\u0b86\n\u00cf\u0003\u00cf\u0003\u00cf\u0005\u00cf",
    "\u0b8a\n\u00cf\u0003\u00cf\u0005\u00cf\u0b8d\n\u00cf\u0003\u00cf\u0003",
    "\u00cf\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003",
    "\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003",
    "\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003",
    "\u00d0\u0005\u00d0\u0ba3\n\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0005\u00d0\u0bab\n\u00d0\u0003",
    "\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0005",
    "\u00d0\u0bb3\n\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0005\u00d0\u0bc3\n",
    "\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003",
    "\u00d0\u0005\u00d0\u0bcb\n\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0\u0003\u00d0",
    "\u0005\u00d0\u0c12\n\u00d0\u0003\u00d1\u0003\u00d1\u0003\u00d1\u0003",
    "\u00d2\u0005\u00d2\u0c18\n\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2",
    "\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2",
    "\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2",
    "\u0005\u00d2\u0c29\n\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003",
    "\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0003\u00d2\u0005\u00d2\u0c33",
    "\n\u00d2\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3",
    "\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3",
    "\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3",
    "\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3",
    "\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3",
    "\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3",
    "\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3",
    "\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0003\u00d3\u0005\u00d3",
    "\u0c63\n\u00d3\u0003\u00d4\u0003\u00d4\u0003\u00d4\u0003\u00d4\u0003",
    "\u00d4\u0003\u00d4\u0003\u00d4\u0003\u00d4\u0003\u00d4\u0003\u00d4\u0003",
    "\u00d4\u0003\u00d4\u0003\u00d4\u0003\u00d4\u0005\u00d4\u0c73\n\u00d4",
    "\u0003\u00d5\u0005\u00d5\u0c76\n\u00d5\u0003\u00d5\u0003\u00d5\u0005",
    "\u00d5\u0c7a\n\u00d5\u0003\u00d5\u0003\u00d5\u0005\u00d5\u0c7e\n\u00d5",
    "\u0003\u00d5\u0003\u00d5\u0003\u00d5\u0005\u00d5\u0c83\n\u00d5\u0003",
    "\u00d5\u0003\u00d5\u0005\u00d5\u0c87\n\u00d5\u0003\u00d5\u0003\u00d5",
    "\u0003\u00d5\u0003\u00d5\u0005\u00d5\u0c8d\n\u00d5\u0003\u00d5\u0003",
    "\u00d5\u0005\u00d5\u0c91\n\u00d5\u0003\u00d6\u0003\u00d6\u0003\u00d6",
    "\u0003\u00d6\u0003\u00d6\u0003\u00d7\u0003\u00d7\u0005\u00d7\u0c9a\n",
    "\u00d7\u0003\u00d7\u0003\u00d7\u0003\u00d8\u0003\u00d8\u0005\u00d8\u0ca0",
    "\n\u00d8\u0003\u00d8\u0003\u00d8\u0003\u00d8\u0003\u00d8\u0003\u00d8",
    "\u0005\u00d8\u0ca7\n\u00d8\u0003\u00d9\u0003\u00d9\u0003\u00d9\u0003",
    "\u00d9\u0005\u00d9\u0cad\n\u00d9\u0003\u00d9\u0003\u00d9\u0003\u00d9",
    "\u0003\u00d9\u0003\u00d9\u0003\u00d9\u0003\u00d9\u0005\u00d9\u0cb6\n",
    "\u00d9\u0003\u00d9\u0003\u00d9\u0005\u00d9\u0cba\n\u00d9\u0003\u00da",
    "\u0003\u00da\u0005\u00da\u0cbe\n\u00da\u0003\u00da\u0003\u00da\u0003",
    "\u00da\u0003\u00da\u0003\u00da\u0005\u00da\u0cc5\n\u00da\u0003\u00db",
    "\u0005\u00db\u0cc8\n\u00db\u0003\u00db\u0003\u00db\u0003\u00db\u0003",
    "\u00db\u0003\u00db\u0005\u00db\u0ccf\n\u00db\u0003\u00db\u0003\u00db",
    "\u0003\u00db\u0003\u00db\u0003\u00db\u0003\u00db\u0005\u00db\u0cd7\n",
    "\u00db\u0003\u00dc\u0003\u00dc\u0003\u00dc\u0003\u00dc\u0003\u00dc\u0003",
    "\u00dc\u0003\u00dd\u0003\u00dd\u0003\u00dd\u0003\u00dd\u0003\u00dd\u0003",
    "\u00dd\u0003\u00dd\u0003\u00dd\u0003\u00dd\u0005\u00dd\u0ce8\n\u00dd",
    "\u0003\u00de\u0003\u00de\u0003\u00de\u0003\u00de\u0003\u00de\u0003\u00de",
    "\u0003\u00de\u0003\u00de\u0003\u00de\u0003\u00de\u0003\u00de\u0003\u00de",
    "\u0003\u00de\u0005\u00de\u0cf7\n\u00de\u0003\u00df\u0003\u00df\u0003",
    "\u00df\u0003\u00df\u0003\u00df\u0003\u00df\u0003\u00df\u0003\u00df\u0003",
    "\u00df\u0003\u00df\u0003\u00df\u0003\u00df\u0003\u00df\u0003\u00df\u0003",
    "\u00df\u0003\u00df\u0003\u00df\u0003\u00df\u0005\u00df\u0d0b\n\u00df",
    "\u0003\u00e0\u0003\u00e0\u0003\u00e0\u0003\u00e0\u0003\u00e0\u0003\u00e0",
    "\u0003\u00e0\u0003\u00e0\u0003\u00e0\u0003\u00e0\u0003\u00e0\u0003\u00e0",
    "\u0003\u00e0\u0005\u00e0\u0d1a\n\u00e0\u0003\u00e1\u0003\u00e1\u0003",
    "\u00e1\u0003\u00e1\u0003\u00e1\u0003\u00e1\u0003\u00e1\u0003\u00e1\u0003",
    "\u00e1\u0003\u00e1\u0003\u00e1\u0003\u00e1\u0003\u00e1\u0005\u00e1\u0d29",
    "\n\u00e1\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2",
    "\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2",
    "\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2",
    "\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2\u0003\u00e2",
    "\u0005\u00e2\u0d42\n\u00e2\u0003\u00e3\u0003\u00e3\u0003\u00e3\u0003",
    "\u00e3\u0003\u00e3\u0003\u00e3\u0003\u00e3\u0003\u00e3\u0003\u00e3\u0003",
    "\u00e3\u0003\u00e3\u0003\u00e3\u0003\u00e3\u0005\u00e3\u0d51\n\u00e3",
    "\u0003\u00e4\u0003\u00e4\u0003\u00e4\u0003\u00e4\u0003\u00e4\u0003\u00e4",
    "\u0003\u00e4\u0003\u00e4\u0005\u00e4\u0d5b\n\u00e4\u0003\u00e5\u0003",
    "\u00e5\u0003\u00e5\u0003\u00e5\u0003\u00e5\u0003\u00e5\u0003\u00e5\u0003",
    "\u00e5\u0005\u00e5\u0d65\n\u00e5\u0003\u00e6\u0003\u00e6\u0003\u00e6",
    "\u0003\u00e6\u0003\u00e6\u0003\u00e6\u0003\u00e6\u0003\u00e6\u0005\u00e6",
    "\u0d6f\n\u00e6\u0003\u00e7\u0003\u00e7\u0003\u00e7\u0003\u00e7\u0003",
    "\u00e7\u0003\u00e7\u0003\u00e7\u0003\u00e7\u0005\u00e7\u0d79\n\u00e7",
    "\u0003\u00e8\u0003\u00e8\u0003\u00e8\u0003\u00e8\u0003\u00e8\u0003\u00e8",
    "\u0003\u00e8\u0003\u00e8\u0005\u00e8\u0d83\n\u00e8\u0003\u00e9\u0003",
    "\u00e9\u0003\u00e9\u0003\u00e9\u0003\u00e9\u0003\u00e9\u0003\u00e9\u0003",
    "\u00e9\u0003\u00e9\u0003\u00e9\u0005\u00e9\u0d8f\n\u00e9\u0003\u00ea",
    "\u0003\u00ea\u0003\u00ea\u0003\u00ea\u0003\u00ea\u0003\u00ea\u0003\u00ea",
    "\u0003\u00ea\u0003\u00ea\u0003\u00ea\u0003\u00ea\u0005\u00ea\u0d9c\n",
    "\u00ea\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003",
    "\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003",
    "\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003",
    "\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0003\u00eb\u0005",
    "\u00eb\u0db5\n\u00eb\u0003\u00ec\u0003\u00ec\u0003\u00ec\u0003\u00ec",
    "\u0003\u00ec\u0003\u00ec\u0003\u00ec\u0003\u00ec\u0005\u00ec\u0dbf\n",
    "\u00ec\u0003\u00ed\u0003\u00ed\u0003\u00ed\u0003\u00ee\u0003\u00ee\u0003",
    "\u00ee\u0003\u00ee\u0005\u00ee\u0dc8\n\u00ee\u0003\u00ee\u0003\u00ee",
    "\u0003\u00ee\u0003\u00ee\u0005\u00ee\u0dce\n\u00ee\u0003\u00ee\u0003",
    "\u00ee\u0003\u00ee\u0003\u00ee\u0005\u00ee\u0dd4\n\u00ee\u0003\u00ee",
    "\u0003\u00ee\u0003\u00ee\u0003\u00ee\u0005\u00ee\u0dda\n\u00ee\u0003",
    "\u00ee\u0003\u00ee\u0003\u00ee\u0003\u00ee\u0005\u00ee\u0de0\n\u00ee",
    "\u0003\u00ee\u0003\u00ee\u0003\u00ee\u0003\u00ee\u0003\u00ee\u0003\u00ee",
    "\u0003\u00ee\u0005\u00ee\u0de9\n\u00ee\u0003\u00ee\u0003\u00ee\u0003",
    "\u00ee\u0005\u00ee\u0dee\n\u00ee\u0003\u00ef\u0005\u00ef\u0df1\n\u00ef",
    "\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0003\u00ef",
    "\u0005\u00ef\u0df9\n\u00ef\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0003",
    "\u00ef\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0005\u00ef\u0e02\n\u00ef",
    "\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0003\u00ef\u0005\u00ef",
    "\u0e09\n\u00ef\u0003\u00f0\u0005\u00f0\u0e0c\n\u00f0\u0003\u00f0\u0003",
    "\u00f0\u0003\u00f0\u0003\u00f1\u0003\u00f1\u0005\u00f1\u0e13\n\u00f1",
    "\u0003\u00f1\u0003\u00f1\u0003\u00f1\u0003\u00f2\u0003\u00f2\u0003\u00f2",
    "\u0003\u00f2\u0003\u00f2\u0003\u00f2\u0003\u00f2\u0005\u00f2\u0e1f\n",
    "\u00f2\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003",
    "\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003",
    "\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003",
    "\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0003\u00f3\u0005",
    "\u00f3\u0e38\n\u00f3\u0003\u00f4\u0003\u00f4\u0003\u00f4\u0003\u00f4",
    "\u0005\u00f4\u0e3e\n\u00f4\u0003\u00f4\u0003\u00f4\u0003\u00f4\u0003",
    "\u00f4\u0003\u00f4\u0003\u00f4\u0003\u00f4\u0005\u00f4\u0e47\n\u00f4",
    "\u0003\u00f4\u0003\u00f4\u0003\u00f4\u0003\u00f4\u0003\u00f4\u0005\u00f4",
    "\u0e4e\n\u00f4\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003",
    "\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003",
    "\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003",
    "\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0005\u00f5\u0e64\n\u00f5",
    "\u0003\u00f5\u0003\u00f5\u0005\u00f5\u0e68\n\u00f5\u0003\u00f5\u0003",
    "\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003",
    "\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0003\u00f5\u0005",
    "\u00f5\u0e77\n\u00f5\u0003\u00f6\u0003\u00f6\u0003\u00f6\u0003\u00f6",
    "\u0003\u00f6\u0003\u00f6\u0005\u00f6\u0e7f\n\u00f6\u0003\u00f7\u0005",
    "\u00f7\u0e82\n\u00f7\u0003\u00f7\u0003\u00f7\u0003\u00f7\u0003\u00f7",
    "\u0003\u00f8\u0003\u00f8\u0003\u00f8\u0003\u00f8\u0003\u00f8\u0003\u00f8",
    "\u0005\u00f8\u0e8e\n\u00f8\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0003",
    "\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0005\u00f9\u0e98",
    "\n\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9",
    "\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9\u0003\u00f9",
    "\u0005\u00f9\u0ea5\n\u00f9\u0003\u00fa\u0003\u00fa\u0003\u00fa\u0003",
    "\u00fb\u0003\u00fb\u0003\u00fb\u0003\u00fb\u0003\u00fb\u0003\u00fb\u0003",
    "\u00fb\u0005\u00fb\u0eb1\n\u00fb\u0003\u00fc\u0003\u00fc\u0003\u00fc",
    "\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc",
    "\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc",
    "\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc",
    "\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc\u0003\u00fc",
    "\u0005\u00fc\u0ece\n\u00fc\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003",
    "\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003",
    "\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003",
    "\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003\u00fd\u0003",
    "\u00fd\u0003\u00fd\u0003\u00fd\u0005\u00fd\u0ee8\n\u00fd\u0003\u00fe",
    "\u0003\u00fe\u0003\u00fe\u0005\u00fe\u0eed\n\u00fe\u0003\u00fe\u0003",
    "\u00fe\u0003\u00fe\u0003\u00fe\u0003\u00fe\u0003\u00ff\u0005\u00ff\u0ef5",
    "\n\u00ff\u0003\u00ff\u0005\u00ff\u0ef8\n\u00ff\u0003\u00ff\u0003\u00ff",
    "\u0003\u00ff\u0003\u00ff\u0005\u00ff\u0efe\n\u00ff\u0003\u00ff\u0003",
    "\u00ff\u0003\u00ff\u0003\u00ff\u0005\u00ff\u0f04\n\u00ff\u0003\u0100",
    "\u0003\u0100\u0003\u0100\u0003\u0100\u0003\u0100\u0003\u0100\u0003\u0100",
    "\u0003\u0100\u0003\u0100\u0003\u0101\u0003\u0101\u0003\u0101\u0003\u0102",
    "\u0003\u0102\u0003\u0102\u0003\u0102\u0003\u0103\u0003\u0103\u0003\u0103",
    "\u0003\u0103\u0003\u0103\u0003\u0103\u0003\u0103\u0003\u0103\u0003\u0103",
    "\u0003\u0103\u0003\u0103\u0003\u0103\u0003\u0103\u0003\u0103\u0003\u0103",
    "\u0005\u0103\u0f25\n\u0103\u0003\u0104\u0003\u0104\u0005\u0104\u0f29",
    "\n\u0104\u0003\u0104\u0003\u0104\u0003\u0104\u0003\u0104\u0003\u0104",
    "\u0003\u0104\u0005\u0104\u0f31\n\u0104\u0003\u0105\u0003\u0105\u0003",
    "\u0105\u0003\u0105\u0003\u0105\u0003\u0105\u0003\u0105\u0003\u0105\u0003",
    "\u0105\u0003\u0105\u0005\u0105\u0f3d\n\u0105\u0003\u0106\u0003\u0106",
    "\u0003\u0106\u0003\u0106\u0003\u0106\u0003\u0106\u0005\u0106\u0f45\n",
    "\u0106\u0003\u0107\u0003\u0107\u0003\u0107\u0003\u0108\u0003\u0108\u0003",
    "\u0108\u0003\u0108\u0003\u0108\u0003\u0108\u0003\u0108\u0003\u0108\u0003",
    "\u0108\u0005\u0108\u0f53\n\u0108\u0003\u0109\u0003\u0109\u0003\u0109",
    "\u0003\u0109\u0003\u0109\u0003\u0109\u0003\u0109\u0003\u0109\u0003\u0109",
    "\u0003\u0109\u0003\u0109\u0003\u0109\u0005\u0109\u0f61\n\u0109\u0003",
    "\u010a\u0003\u010a\u0005\u010a\u0f65\n\u010a\u0003\u010a\u0003\u010a",
    "\u0003\u010a\u0003\u010a\u0003\u010a\u0003\u010a\u0005\u010a\u0f6d\n",
    "\u010a\u0003\u010b\u0003\u010b\u0005\u010b\u0f71\n\u010b\u0003\u010b",
    "\u0003\u010b\u0003\u010b\u0003\u010b\u0003\u010b\u0003\u010b\u0005\u010b",
    "\u0f79\n\u010b\u0003\u010c\u0005\u010c\u0f7c\n\u010c\u0003\u010c\u0003",
    "\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003",
    "\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003",
    "\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003",
    "\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003",
    "\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003",
    "\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003\u010c\u0003",
    "\u010c\u0003\u010c\u0005\u010c\u0fa5\n\u010c\u0003\u010d\u0003\u010d",
    "\u0003\u010d\u0003\u010d\u0003\u010d\u0003\u010d\u0003\u010d\u0003\u010d",
    "\u0003\u010d\u0003\u010d\u0003\u010d\u0003\u010d\u0005\u010d\u0fb3\n",
    "\u010d\u0003\u010e\u0003\u010e\u0003\u010e\u0003\u010e\u0003\u010e\u0003",
    "\u010e\u0003\u010e\u0003\u010e\u0003\u010e\u0003\u010e\u0003\u010e\u0005",
    "\u010e\u0fc0\n\u010e\u0003\u010f\u0003\u010f\u0005\u010f\u0fc4\n\u010f",
    "\u0003\u010f\u0005\u010f\u0fc7\n\u010f\u0003\u010f\u0003\u010f\u0003",
    "\u010f\u0003\u010f\u0003\u010f\u0003\u010f\u0003\u010f\u0003\u010f\u0003",
    "\u010f\u0003\u010f\u0005\u010f\u0fd3\n\u010f\u0003\u010f\u0003\u010f",
    "\u0003\u010f\u0003\u010f\u0003\u010f\u0005\u010f\u0fda\n\u010f\u0003",
    "\u010f\u0003\u010f\u0005\u010f\u0fde\n\u010f\u0003\u0110\u0003\u0110",
    "\u0003\u0110\u0003\u0111\u0003\u0111\u0003\u0111\u0005\u0111\u0fe6\n",
    "\u0111\u0003\u0111\u0003\u0111\u0003\u0111\u0003\u0111\u0003\u0111\u0003",
    "\u0111\u0003\u0111\u0003\u0111\u0003\u0111\u0003\u0111\u0005\u0111\u0ff2",
    "\n\u0111\u0003\u0112\u0003\u0112\u0005\u0112\u0ff6\n\u0112\u0003\u0112",
    "\u0005\u0112\u0ff9\n\u0112\u0003\u0112\u0005\u0112\u0ffc\n\u0112\u0003",
    "\u0112\u0003\u0112\u0003\u0112\u0003\u0112\u0005\u0112\u1002\n\u0112",
    "\u0003\u0112\u0003\u0112\u0003\u0112\u0005\u0112\u1007\n\u0112\u0003",
    "\u0112\u0003\u0112\u0005\u0112\u100b\n\u0112\u0003\u0113\u0003\u0113",
    "\u0005\u0113\u100f\n\u0113\u0003\u0113\u0003\u0113\u0005\u0113\u1013",
    "\n\u0113\u0003\u0113\u0003\u0113\u0003\u0113\u0003\u0114\u0003\u0114",
    "\u0003\u0114\u0003\u0114\u0003\u0114\u0003\u0114\u0003\u0114\u0003\u0114",
    "\u0005\u0114\u1020\n\u0114\u0003\u0115\u0003\u0115\u0003\u0115\u0003",
    "\u0115\u0003\u0116\u0003\u0116\u0003\u0116\u0003\u0116\u0003\u0116\u0003",
    "\u0116\u0003\u0116\u0003\u0116\u0005\u0116\u102e\n\u0116\u0003\u0117",
    "\u0003\u0117\u0003\u0117\u0003\u0117\u0003\u0117\u0003\u0117\u0003\u0117",
    "\u0003\u0117\u0005\u0117\u1038\n\u0117\u0003\u0118\u0003\u0118\u0003",
    "\u0118\u0003\u0119\u0003\u0119\u0003\u0119\u0003\u0119\u0003\u0119\u0003",
    "\u0119\u0005\u0119\u1043\n\u0119\u0003\u011a\u0003\u011a\u0003\u011a",
    "\u0003\u011b\u0003\u011b\u0003\u011b\u0003\u011b\u0003\u011b\u0003\u011b",
    "\u0005\u011b\u104e\n\u011b\u0003\u011c\u0003\u011c\u0003\u011c\u0003",
    "\u011c\u0003\u011c\u0003\u011c\u0005\u011c\u1056\n\u011c\u0003\u011d",
    "\u0005\u011d\u1059\n\u011d\u0003\u011d\u0003\u011d\u0003\u011d\u0003",
    "\u011d\u0003\u011d\u0003\u011d\u0003\u011d\u0003\u011e\u0005\u011e\u1063",
    "\n\u011e\u0003\u011e\u0003\u011e\u0003\u011e\u0003\u011e\u0003\u011e",
    "\u0003\u011e\u0003\u011e\u0003\u011f\u0005\u011f\u106d\n\u011f\u0003",
    "\u011f\u0003\u011f\u0003\u011f\u0003\u011f\u0003\u011f\u0003\u011f\u0003",
    "\u0120\u0005\u0120\u1076\n\u0120\u0003\u0120\u0003\u0120\u0003\u0121",
    "\u0003\u0121\u0003\u0121\u0003\u0122\u0003\u0122\u0003\u0122\u0003\u0122",
    "\u0003\u0122\u0003\u0122\u0003\u0122\u0003\u0123\u0005\u0123\u1085\n",
    "\u0123\u0003\u0123\u0003\u0123\u0003\u0123\u0003\u0124\u0003\u0124\u0005",
    "\u0124\u108c\n\u0124\u0003\u0124\u0003\u0124\u0003\u0124\u0003\u0124",
    "\u0003\u0124\u0003\u0124\u0003\u0124\u0003\u0124\u0003\u0124\u0003\u0124",
    "\u0003\u0124\u0005\u0124\u1099\n\u0124\u0003\u0125\u0005\u0125\u109c",
    "\n\u0125\u0003\u0125\u0003\u0125\u0003\u0125\u0005\u0125\u10a1\n\u0125",
    "\u0003\u0125\u0003\u0125\u0003\u0125\u0003\u0125\u0003\u0126\u0003\u0126",
    "\u0003\u0126\u0003\u0126\u0003\u0126\u0003\u0126\u0003\u0126\u0003\u0127",
    "\u0003\u0127\u0003\u0127\u0003\u0127\u0005\u0127\u10b2\n\u0127\u0003",
    "\u0127\u0003\u0127\u0003\u0127\u0003\u0127\u0003\u0127\u0003\u0127\u0003",
    "\u0127\u0005\u0127\u10bb\n\u0127\u0003\u0128\u0003\u0128\u0003\u0128",
    "\u0003\u0128\u0003\u0128\u0003\u0128\u0003\u0128\u0005\u0128\u10c4\n",
    "\u0128\u0003\u0129\u0003\u0129\u0003\u0129\u0003\u0129\u0003\u0129\u0003",
    "\u0129\u0003\u0129\u0003\u0129\u0003\u0129\u0003\u0129\u0005\u0129\u10d0",
    "\n\u0129\u0003\u012a\u0003\u012a\u0003\u012a\u0003\u012a\u0005\u012a",
    "\u10d6\n\u012a\u0003\u012a\u0003\u012a\u0003\u012a\u0003\u012a\u0003",
    "\u012a\u0003\u012a\u0003\u012a\u0005\u012a\u10df\n\u012a\u0003\u012a",
    "\u0003\u012a\u0003\u012a\u0005\u012a\u10e4\n\u012a\u0003\u012b\u0005",
    "\u012b\u10e7\n\u012b\u0003\u012b\u0003\u012b\u0003\u012b\u0003\u012b",
    "\u0005\u012b\u10ed\n\u012b\u0003\u012b\u0003\u012b\u0003\u012b\u0003",
    "\u012b\u0003\u012b\u0003\u012b\u0003\u012b\u0003\u012b\u0003\u012b\u0003",
    "\u012b\u0003\u012b\u0003\u012b\u0005\u012b\u10fb\n\u012b\u0003\u012c",
    "\u0003\u012c\u0005\u012c\u10ff\n\u012c\u0003\u012c\u0003\u012c\u0003",
    "\u012d\u0003\u012d\u0003\u012d\u0003\u012d\u0003\u012d\u0005\u012d\u1108",
    "\n\u012d\u0003\u012e\u0003\u012e\u0003\u012e\u0003\u012e\u0003\u012e",
    "\u0003\u012f\u0003\u012f\u0003\u012f\u0003\u0130\u0003\u0130\u0003\u0130",
    "\u0003\u0130\u0003\u0130\u0003\u0131\u0005\u0131\u1118\n\u0131\u0003",
    "\u0131\u0003\u0131\u0003\u0131\u0003\u0131\u0003\u0131\u0005\u0131\u111f",
    "\n\u0131\u0003\u0132\u0003\u0132\u0003\u0132\u0003\u0132\u0003\u0132",
    "\u0003\u0132\u0003\u0132\u0003\u0132\u0003\u0132\u0003\u0132\u0003\u0132",
    "\u0003\u0132\u0003\u0132\u0003\u0132\u0003\u0132\u0005\u0132\u1130\n",
    "\u0132\u0003\u0133\u0003\u0133\u0003\u0133\u0003\u0133\u0003\u0133\u0003",
    "\u0133\u0003\u0133\u0003\u0133\u0005\u0133\u113a\n\u0133\u0003\u0134",
    "\u0003\u0134\u0005\u0134\u113e\n\u0134\u0003\u0134\u0003\u0134\u0003",
    "\u0135\u0003\u0135\u0003\u0135\u0003\u0135\u0003\u0135\u0003\u0135\u0003",
    "\u0135\u0003\u0135\u0005\u0135\u114a\n\u0135\u0003\u0136\u0003\u0136",
    "\u0003\u0136\u0003\u0136\u0003\u0136\u0003\u0136\u0003\u0136\u0005\u0136",
    "\u1153\n\u0136\u0003\u0137\u0003\u0137\u0005\u0137\u1157\n\u0137\u0003",
    "\u0137\u0003\u0137\u0003\u0137\u0003\u0137\u0003\u0137\u0003\u0137\u0003",
    "\u0137\u0003\u0137\u0003\u0137\u0005\u0137\u1162\n\u0137\u0003\u0137",
    "\u0003\u0137\u0005\u0137\u1166\n\u0137\u0003\u0137\u0003\u0137\u0003",
    "\u0137\u0003\u0137\u0003\u0137\u0003\u0137\u0003\u0137\u0005\u0137\u116f",
    "\n\u0137\u0003\u0138\u0003\u0138\u0003\u0138\u0003\u0138\u0005\u0138",
    "\u1175\n\u0138\u0003\u0138\u0005\u0138\u1178\n\u0138\u0003\u0138\u0003",
    "\u0138\u0005\u0138\u117c\n\u0138\u0003\u0138\u0005\u0138\u117f\n\u0138",
    "\u0003\u0138\u0003\u0138\u0003\u0139\u0003\u0139\u0003\u0139\u0005\u0139",
    "\u1186\n\u0139\u0003\u0139\u0003\u0139\u0003\u013a\u0003\u013a\u0005",
    "\u013a\u118c\n\u013a\u0003\u013a\u0005\u013a\u118f\n\u013a\u0003\u013a",
    "\u0003\u013a\u0003\u013a\u0005\u013a\u1194\n\u013a\u0003\u013a\u0003",
    "\u013a\u0003\u013a\u0005\u013a\u1199\n\u013a\u0003\u013a\u0003\u013a",
    "\u0003\u013a\u0003\u013a\u0005\u013a\u119f\n\u013a\u0003\u013a\u0005",
    "\u013a\u11a2\n\u013a\u0003\u013a\u0003\u013a\u0005\u013a\u11a6\n\u013a",
    "\u0003\u013b\u0003\u013b\u0005\u013b\u11aa\n\u013b\u0003\u013b\u0003",
    "\u013b\u0003\u013c\u0003\u013c\u0003\u013c\u0003\u013c\u0005\u013c\u11b2",
    "\n\u013c\u0003\u013d\u0003\u013d\u0003\u013d\u0003\u013d\u0005\u013d",
    "\u11b8\n\u013d\u0003\u013e\u0005\u013e\u11bb\n\u013e\u0003\u013e\u0003",
    "\u013e\u0003\u013e\u0003\u013f\u0003\u013f\u0005\u013f\u11c2\n\u013f",
    "\u0003\u013f\u0003\u013f\u0003\u0140\u0003\u0140\u0003\u0140\u0003\u0140",
    "\u0005\u0140\u11ca\n\u0140\u0003\u0140\u0003\u0140\u0003\u0140\u0003",
    "\u0140\u0003\u0140\u0003\u0140\u0003\u0140\u0005\u0140\u11d3\n\u0140",
    "\u0003\u0141\u0003\u0141\u0003\u0141\u0003\u0141\u0003\u0141\u0005\u0141",
    "\u11da\n\u0141\u0003\u0141\u0003\u0141\u0005\u0141\u11de\n\u0141\u0003",
    "\u0142\u0003\u0142\u0003\u0142\u0003\u0142\u0003\u0142\u0003\u0142\u0003",
    "\u0142\u0003\u0142\u0003\u0142\u0003\u0142\u0005\u0142\u11ea\n\u0142",
    "\u0003\u0142\u0003\u0142\u0005\u0142\u11ee\n\u0142\u0003\u0142\u0003",
    "\u0142\u0003\u0142\u0003\u0142\u0005\u0142\u11f4\n\u0142\u0003\u0142",
    "\u0003\u0142\u0005\u0142\u11f8\n\u0142\u0003\u0142\u0003\u0142\u0003",
    "\u0142\u0003\u0142\u0003\u0142\u0003\u0142\u0005\u0142\u1200\n\u0142",
    "\u0003\u0143\u0003\u0143\u0003\u0143\u0003\u0143\u0003\u0143\u0003\u0143",
    "\u0003\u0143\u0005\u0143\u1209\n\u0143\u0003\u0144\u0003\u0144\u0003",
    "\u0144\u0003\u0144\u0003\u0144\u0003\u0144\u0003\u0144\u0005\u0144\u1212",
    "\n\u0144\u0003\u0144\u0003\u0144\u0003\u0144\u0005\u0144\u1217\n\u0144",
    "\u0003\u0144\u0003\u0144\u0003\u0144\u0003\u0144\u0005\u0144\u121d\n",
    "\u0144\u0003\u0145\u0005\u0145\u1220\n\u0145\u0003\u0145\u0005\u0145",
    "\u1223\n\u0145\u0003\u0145\u0003\u0145\u0003\u0145\u0003\u0145\u0003",
    "\u0145\u0003\u0145\u0005\u0145\u122b\n\u0145\u0003\u0146\u0003\u0146",
    "\u0003\u0146\u0003\u0146\u0003\u0146\u0003\u0146\u0003\u0146\u0003\u0146",
    "\u0005\u0146\u1235\n\u0146\u0003\u0147\u0005\u0147\u1238\n\u0147\u0003",
    "\u0147\u0003\u0147\u0003\u0147\u0003\u0147\u0003\u0147\u0005\u0147\u123f",
    "\n\u0147\u0003\u0147\u0003\u0147\u0003\u0147\u0003\u0147\u0003\u0147",
    "\u0003\u0147\u0003\u0147\u0005\u0147\u1248\n\u0147\u0003\u0147\u0003",
    "\u0147\u0005\u0147\u124c\n\u0147\u0003\u0147\u0003\u0147\u0003\u0147",
    "\u0005\u0147\u1251\n\u0147\u0003\u0147\u0003\u0147\u0005\u0147\u1255",
    "\n\u0147\u0003\u0147\u0003\u0147\u0003\u0147\u0003\u0147\u0003\u0147",
    "\u0005\u0147\u125c\n\u0147\u0003\u0148\u0005\u0148\u125f\n\u0148\u0003",
    "\u0148\u0005\u0148\u1262\n\u0148\u0003\u0148\u0003\u0148\u0005\u0148",
    "\u1266\n\u0148\u0003\u0148\u0003\u0148\u0003\u0148\u0003\u0148\u0003",
    "\u0149\u0005\u0149\u126d\n\u0149\u0003\u0149\u0003\u0149\u0003\u0149",
    "\u0003\u0149\u0003\u0149\u0003\u0149\u0003\u0149\u0003\u0149\u0003\u0149",
    "\u0003\u0149\u0003\u0149\u0003\u0149\u0003\u0149\u0003\u0149\u0005\u0149",
    "\u127d\n\u0149\u0003\u014a\u0003\u014a\u0003\u014a\u0003\u014a\u0003",
    "\u014a\u0003\u014a\u0003\u014a\u0003\u014a\u0005\u014a\u1287\n\u014a",
    "\u0003\u014b\u0003\u014b\u0003\u014b\u0003\u014b\u0003\u014b\u0003\u014b",
    "\u0003\u014b\u0005\u014b\u1290\n\u014b\u0003\u014c\u0003\u014c\u0003",
    "\u014c\u0003\u014c\u0003\u014c\u0003\u014c\u0005\u014c\u1298\n\u014c",
    "\u0003\u014d\u0003\u014d\u0005\u014d\u129c\n\u014d\u0003\u014d\u0003",
    "\u014d\u0003\u014d\u0003\u014d\u0003\u014d\u0003\u014d\u0005\u014d\u12a4",
    "\n\u014d\u0003\u014d\u0003\u014d\u0005\u014d\u12a8\n\u014d\u0003\u014e",
    "\u0003\u014e\u0003\u014e\u0005\u014e\u12ad\n\u014e\u0003\u014e\u0003",
    "\u014e\u0003\u014e\u0003\u014e\u0003\u014e\u0003\u014e\u0005\u014e\u12b5",
    "\n\u014e\u0003\u014f\u0003\u014f\u0003\u014f\u0003\u014f\u0003\u014f",
    "\u0005\u014f\u12bc\n\u014f\u0003\u0150\u0003\u0150\u0003\u0150\u0005",
    "\u0150\u12c1\n\u0150\u0003\u0150\u0003\u0150\u0003\u0150\u0003\u0151",
    "\u0003\u0151\u0005\u0151\u12c8\n\u0151\u0003\u0151\u0003\u0151\u0005",
    "\u0151\u12cc\n\u0151\u0003\u0151\u0005\u0151\u12cf\n\u0151\u0003\u0151",
    "\u0003\u0151\u0003\u0151\u0003\u0151\u0005\u0151\u12d5\n\u0151\u0003",
    "\u0151\u0005\u0151\u12d8\n\u0151\u0003\u0151\u0003\u0151\u0005\u0151",
    "\u12dc\n\u0151\u0003\u0152\u0005\u0152\u12df\n\u0152\u0003\u0152\u0003",
    "\u0152\u0003\u0152\u0003\u0153\u0003\u0153\u0003\u0153\u0003\u0154\u0003",
    "\u0154\u0003\u0154\u0003\u0154\u0003\u0154\u0003\u0154\u0005\u0154\u12ed",
    "\n\u0154\u0003\u0155\u0003\u0155\u0005\u0155\u12f1\n\u0155\u0003\u0155",
    "\u0003\u0155\u0003\u0155\u0003\u0155\u0003\u0155\u0005\u0155\u12f8\n",
    "\u0155\u0003\u0155\u0003\u0155\u0005\u0155\u12fc\n\u0155\u0003\u0156",
    "\u0005\u0156\u12ff\n\u0156\u0003\u0156\u0005\u0156\u1302\n\u0156\u0003",
    "\u0156\u0005\u0156\u1305\n\u0156\u0003\u0156\u0003\u0156\u0003\u0156",
    "\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156",
    "\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156",
    "\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156\u0003\u0156\u0005\u0156",
    "\u131b\n\u0156\u0003\u0157\u0003\u0157\u0003\u0157\u0003\u0157\u0003",
    "\u0157\u0003\u0157\u0003\u0157\u0003\u0157\u0005\u0157\u1325\n\u0157",
    "\u0003\u0158\u0003\u0158\u0005\u0158\u1329\n\u0158\u0003\u0158\u0005",
    "\u0158\u132c\n\u0158\u0003\u0158\u0003\u0158\u0003\u0158\u0003\u0158",
    "\u0005\u0158\u1332\n\u0158\u0003\u0158\u0003\u0158\u0003\u0158\u0005",
    "\u0158\u1337\n\u0158\u0003\u0158\u0005\u0158\u133a\n\u0158\u0003\u0158",
    "\u0003\u0158\u0003\u0158\u0003\u0158\u0005\u0158\u1340\n\u0158\u0003",
    "\u0159\u0003\u0159\u0003\u0159\u0003\u0159\u0003\u0159\u0003\u0159\u0003",
    "\u0159\u0005\u0159\u1349\n\u0159\u0003\u015a\u0003\u015a\u0003\u015a",
    "\u0003\u015a\u0005\u015a\u134f\n\u015a\u0003\u015b\u0003\u015b\u0003",
    "\u015b\u0003\u015b\u0003\u015b\u0003\u015b\u0003\u015c\u0003\u015c\u0003",
    "\u015c\u0003\u015c\u0003\u015d\u0003\u015d\u0005\u015d\u135d\n\u015d",
    "\u0003\u015d\u0003\u015d\u0003\u015d\u0003\u015d\u0003\u015d\u0003\u015d",
    "\u0005\u015d\u1365\n\u015d\u0003\u015d\u0003\u015d\u0005\u015d\u1369",
    "\n\u015d\u0003\u015e\u0005\u015e\u136c\n\u015e\u0003\u015e\u0003\u015e",
    "\u0003\u015e\u0003\u015e\u0005\u015e\u1372\n\u015e\u0003\u015e\u0003",
    "\u015e\u0005\u015e\u1376\n\u015e\u0003\u015e\u0003\u015e\u0003\u015e",
    "\u0003\u015e\u0005\u015e\u137c\n\u015e\u0003\u015e\u0003\u015e\u0005",
    "\u015e\u1380\n\u015e\u0003\u015e\u0003\u015e\u0003\u015e\u0005\u015e",
    "\u1385\n\u015e\u0003\u015f\u0005\u015f\u1388\n\u015f\u0003\u015f\u0003",
    "\u015f\u0003\u015f\u0003\u015f\u0003\u015f\u0003\u015f\u0005\u015f\u1390",
    "\n\u015f\u0003\u0160\u0003\u0160\u0003\u0160\u0003\u0161\u0003\u0161",
    "\u0003\u0161\u0003\u0161\u0003\u0161\u0003\u0161\u0005\u0161\u139b\n",
    "\u0161\u0003\u0162\u0003\u0162\u0003\u0162\u0003\u0162\u0003\u0163\u0003",
    "\u0163\u0005\u0163\u13a3\n\u0163\u0003\u0163\u0003\u0163\u0003\u0164",
    "\u0003\u0164\u0005\u0164\u13a9\n\u0164\u0003\u0164\u0003\u0164\u0003",
    "\u0165\u0003\u0165\u0003\u0165\u0003\u0165\u0003\u0166\u0003\u0166\u0005",
    "\u0166\u13b3\n\u0166\u0003\u0166\u0003\u0166\u0003\u0166\u0003\u0166",
    "\u0005\u0166\u13b9\n\u0166\u0003\u0166\u0003\u0166\u0003\u0166\u0003",
    "\u0166\u0005\u0166\u13bf\n\u0166\u0003\u0167\u0003\u0167\u0003\u0167",
    "\u0005\u0167\u13c4\n\u0167\u0003\u0167\u0003\u0167\u0003\u0167\u0003",
    "\u0167\u0003\u0167\u0003\u0167\u0003\u0167\u0005\u0167\u13cd\n\u0167",
    "\u0003\u0168\u0003\u0168\u0003\u0168\u0003\u0168\u0003\u0168\u0005\u0168",
    "\u13d4\n\u0168\u0003\u0169\u0003\u0169\u0003\u0169\u0003\u0169\u0003",
    "\u016a\u0003\u016a\u0003\u016a\u0003\u016a\u0003\u016a\u0003\u016a\u0003",
    "\u016a\u0005\u016a\u13e1\n\u016a\u0003\u016b\u0003\u016b\u0003\u016b",
    "\u0003\u016b\u0003\u016b\u0003\u016b\u0003\u016b\u0003\u016c\u0003\u016c",
    "\u0003\u016c\u0003\u016c\u0003\u016c\u0003\u016c\u0003\u016c\u0003\u016c",
    "\u0005\u016c\u13f2\n\u016c\u0003\u016d\u0003\u016d\u0003\u016d\u0003",
    "\u016d\u0003\u016d\u0003\u016d\u0005\u016d\u13fa\n\u016d\u0003\u016e",
    "\u0003\u016e\u0005\u016e\u13fe\n\u016e\u0003\u016e\u0005\u016e\u1401",
    "\n\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0005\u016e\u1406\n\u016e",
    "\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e",
    "\u0005\u016e\u140e\n\u016e\u0003\u016e\u0005\u016e\u1411\n\u016e\u0003",
    "\u016e\u0003\u016e\u0003\u016e\u0005\u016e\u1416\n\u016e\u0003\u016e",
    "\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e",
    "\u0003\u016e\u0003\u016e\u0003\u016e\u0005\u016e\u1422\n\u016e\u0003",
    "\u016e\u0005\u016e\u1425\n\u016e\u0003\u016e\u0003\u016e\u0003\u016e",
    "\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0005\u016e",
    "\u142f\n\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0003\u016e\u0005",
    "\u016e\u1435\n\u016e\u0003\u016f\u0003\u016f\u0003\u016f\u0005\u016f",
    "\u143a\n\u016f\u0003\u016f\u0003\u016f\u0003\u016f\u0003\u0170\u0003",
    "\u0170\u0003\u0170\u0003\u0170\u0003\u0170\u0003\u0170\u0005\u0170\u1445",
    "\n\u0170\u0003\u0170\u0003\u0170\u0003\u0170\u0003\u0170\u0003\u0170",
    "\u0003\u0170\u0005\u0170\u144d\n\u0170\u0003\u0170\u0003\u0170\u0003",
    "\u0170\u0005\u0170\u1452\n\u0170\u0003\u0171\u0003\u0171\u0003\u0171",
    "\u0003\u0172\u0003\u0172\u0005\u0172\u1459\n\u0172\u0003\u0172\u0003",
    "\u0172\u0003\u0172\u0003\u0172\u0003\u0172\u0003\u0172\u0005\u0172\u1461",
    "\n\u0172\u0003\u0172\u0003\u0172\u0005\u0172\u1465\n\u0172\u0003\u0173",
    "\u0003\u0173\u0003\u0173\u0003\u0173\u0003\u0173\u0003\u0173\u0003\u0173",
    "\u0003\u0173\u0003\u0173\u0005\u0173\u1470\n\u0173\u0003\u0174\u0003",
    "\u0174\u0003\u0174\u0003\u0174\u0003\u0174\u0003\u0174\u0003\u0174\u0003",
    "\u0174\u0005\u0174\u147a\n\u0174\u0003\u0174\u0003\u0174\u0003\u0174",
    "\u0005\u0174\u147f\n\u0174\u0003\u0175\u0005\u0175\u1482\n\u0175\u0003",
    "\u0175\u0003\u0175\u0003\u0175\u0003\u0175\u0003\u0176\u0003\u0176\u0003",
    "\u0176\u0003\u0176\u0003\u0176\u0003\u0176\u0003\u0177\u0003\u0177\u0003",
    "\u0177\u0003\u0177\u0003\u0177\u0003\u0178\u0003\u0178\u0005\u0178\u1495",
    "\n\u0178\u0003\u0178\u0003\u0178\u0003\u0178\u0003\u0178\u0003\u0179",
    "\u0003\u0179\u0005\u0179\u149d\n\u0179\u0003\u0179\u0003\u0179\u0003",
    "\u017a\u0003\u017a\u0003\u017a\u0003\u017a\u0003\u017a\u0003\u017a\u0003",
    "\u017a\u0003\u017b\u0005\u017b\u14a9\n\u017b\u0003\u017b\u0003\u017b",
    "\u0003\u017b\u0003\u017b\u0003\u017b\u0005\u017b\u14b0\n\u017b\u0003",
    "\u017b\u0003\u017b\u0005\u017b\u14b4\n\u017b\u0003\u017b\u0003\u017b",
    "\u0003\u017b\u0003\u017b\u0005\u017b\u14ba\n\u017b\u0003\u017c\u0003",
    "\u017c\u0005\u017c\u14be\n\u017c\u0003\u017c\u0003\u017c\u0003\u017d",
    "\u0003\u017d\u0003\u017d\u0003\u017d\u0003\u017d\u0003\u017d\u0005\u017d",
    "\u14c8\n\u017d\u0003\u017e\u0003\u017e\u0003\u017e\u0005\u017e\u14cd",
    "\n\u017e\u0003\u017e\u0003\u017e\u0003\u017e\u0003\u017f\u0003\u017f",
    "\u0005\u017f\u14d4\n\u017f\u0003\u017f\u0003\u017f\u0003\u017f\u0003",
    "\u017f\u0003\u017f\u0003\u017f\u0005\u017f\u14dc\n\u017f\u0003\u017f",
    "\u0003\u017f\u0005\u017f\u14e0\n\u017f\u0003\u0180\u0003\u0180\u0003",
    "\u0180\u0003\u0180\u0003\u0180\u0003\u0180\u0003\u0180\u0003\u0180\u0005",
    "\u0180\u14ea\n\u0180\u0003\u0181\u0003\u0181\u0003\u0181\u0003\u0182",
    "\u0003\u0182\u0003\u0182\u0003\u0182\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183\u0003\u0183",
    "\u0003\u0183\u0003\u0183\u0003\u0183\u0005\u0183\u1523\n\u0183\u0003",
    "\u0184\u0003\u0184\u0003\u0184\u0003\u0184\u0003\u0184\u0003\u0184\u0003",
    "\u0184\u0005\u0184\u152c\n\u0184\u0003\u0185\u0003\u0185\u0003\u0186",
    "\u0003\u0186\u0003\u0187\u0003\u0187\u0003\u0187\u0002$\f\u0016 2<>",
    "@BDFHJLNPXdv\u00ac\u00d0\u00d6\u00e2\u00e6\u00ee\u0104\u0108\u010c\u011a",
    "\u012e\u0132\u013a\u0158\u0164\u017e\u0188\u0002\u0004\u0006\b\n\f\u000e",
    "\u0010\u0012\u0014\u0016\u0018\u001a\u001c\u001e \"$&(*,.02468:<>@B",
    "DFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080\u0082\u0084\u0086\u0088\u008a",
    "\u008c\u008e\u0090\u0092\u0094\u0096\u0098\u009a\u009c\u009e\u00a0\u00a2",
    "\u00a4\u00a6\u00a8\u00aa\u00ac\u00ae\u00b0\u00b2\u00b4\u00b6\u00b8\u00ba",
    "\u00bc\u00be\u00c0\u00c2\u00c4\u00c6\u00c8\u00ca\u00cc\u00ce\u00d0\u00d2",
    "\u00d4\u00d6\u00d8\u00da\u00dc\u00de\u00e0\u00e2\u00e4\u00e6\u00e8\u00ea",
    "\u00ec\u00ee\u00f0\u00f2\u00f4\u00f6\u00f8\u00fa\u00fc\u00fe\u0100\u0102",
    "\u0104\u0106\u0108\u010a\u010c\u010e\u0110\u0112\u0114\u0116\u0118\u011a",
    "\u011c\u011e\u0120\u0122\u0124\u0126\u0128\u012a\u012c\u012e\u0130\u0132",
    "\u0134\u0136\u0138\u013a\u013c\u013e\u0140\u0142\u0144\u0146\u0148\u014a",
    "\u014c\u014e\u0150\u0152\u0154\u0156\u0158\u015a\u015c\u015e\u0160\u0162",
    "\u0164\u0166\u0168\u016a\u016c\u016e\u0170\u0172\u0174\u0176\u0178\u017a",
    "\u017c\u017e\u0180\u0182\u0184\u0186\u0188\u018a\u018c\u018e\u0190\u0192",
    "\u0194\u0196\u0198\u019a\u019c\u019e\u01a0\u01a2\u01a4\u01a6\u01a8\u01aa",
    "\u01ac\u01ae\u01b0\u01b2\u01b4\u01b6\u01b8\u01ba\u01bc\u01be\u01c0\u01c2",
    "\u01c4\u01c6\u01c8\u01ca\u01cc\u01ce\u01d0\u01d2\u01d4\u01d6\u01d8\u01da",
    "\u01dc\u01de\u01e0\u01e2\u01e4\u01e6\u01e8\u01ea\u01ec\u01ee\u01f0\u01f2",
    "\u01f4\u01f6\u01f8\u01fa\u01fc\u01fe\u0200\u0202\u0204\u0206\u0208\u020a",
    "\u020c\u020e\u0210\u0212\u0214\u0216\u0218\u021a\u021c\u021e\u0220\u0222",
    "\u0224\u0226\u0228\u022a\u022c\u022e\u0230\u0232\u0234\u0236\u0238\u023a",
    "\u023c\u023e\u0240\u0242\u0244\u0246\u0248\u024a\u024c\u024e\u0250\u0252",
    "\u0254\u0256\u0258\u025a\u025c\u025e\u0260\u0262\u0264\u0266\u0268\u026a",
    "\u026c\u026e\u0270\u0272\u0274\u0276\u0278\u027a\u027c\u027e\u0280\u0282",
    "\u0284\u0286\u0288\u028a\u028c\u028e\u0290\u0292\u0294\u0296\u0298\u029a",
    "\u029c\u029e\u02a0\u02a2\u02a4\u02a6\u02a8\u02aa\u02ac\u02ae\u02b0\u02b2",
    "\u02b4\u02b6\u02b8\u02ba\u02bc\u02be\u02c0\u02c2\u02c4\u02c6\u02c8\u02ca",
    "\u02cc\u02ce\u02d0\u02d2\u02d4\u02d6\u02d8\u02da\u02dc\u02de\u02e0\u02e2",
    "\u02e4\u02e6\u02e8\u02ea\u02ec\u02ee\u02f0\u02f2\u02f4\u02f6\u02f8\u02fa",
    "\u02fc\u02fe\u0300\u0302\u0304\u0306\u0308\u030a\u030c\u0002\r\u0004",
    "\u0002\\\\``\u0004\u0002VX\\_\u0007\u0002\u001f\u001f**44::AA\u0005",
    "\u0002\u001d\u001d\'\'KK\u0004\u0002\u0011\u0011MM\u0004\u0002\\\\q",
    "q\u0005\u0002\u0010\u0010==HH\u0004\u0002!!00\u0003\u000213\u0004\u0002",
    "  CC\u0003\u0002\u0089\u008c\u1763\u0002\u030f\u0003\u0002\u0002\u0002",
    "\u0004\u031b\u0003\u0002\u0002\u0002\u0006\u031f\u0003\u0002\u0002\u0002",
    "\b\u032a\u0003\u0002\u0002\u0002\n\u032c\u0003\u0002\u0002\u0002\f\u033d",
    "\u0003\u0002\u0002\u0002\u000e\u034e\u0003\u0002\u0002\u0002\u0010\u0354",
    "\u0003\u0002\u0002\u0002\u0012\u0360\u0003\u0002\u0002\u0002\u0014\u0362",
    "\u0003\u0002\u0002\u0002\u0016\u0364\u0003\u0002\u0002\u0002\u0018\u0376",
    "\u0003\u0002\u0002\u0002\u001a\u037c\u0003\u0002\u0002\u0002\u001c\u0383",
    "\u0003\u0002\u0002\u0002\u001e\u0385\u0003\u0002\u0002\u0002 \u03d4",
    "\u0003\u0002\u0002\u0002\"\u0401\u0003\u0002\u0002\u0002$\u0419\u0003",
    "\u0002\u0002\u0002&\u0437\u0003\u0002\u0002\u0002(\u0439\u0003\u0002",
    "\u0002\u0002*\u0453\u0003\u0002\u0002\u0002,\u0455\u0003\u0002\u0002",
    "\u0002.\u0459\u0003\u0002\u0002\u00020\u0462\u0003\u0002\u0002\u0002",
    "2\u0464\u0003\u0002\u0002\u00024\u047d\u0003\u0002\u0002\u00026\u048b",
    "\u0003\u0002\u0002\u00028\u048d\u0003\u0002\u0002\u0002:\u0498\u0003",
    "\u0002\u0002\u0002<\u049a\u0003\u0002\u0002\u0002>\u04a8\u0003\u0002",
    "\u0002\u0002@\u04b9\u0003\u0002\u0002\u0002B\u04c7\u0003\u0002\u0002",
    "\u0002D\u04d6\u0003\u0002\u0002\u0002F\u04ea\u0003\u0002\u0002\u0002",
    "H\u04f8\u0003\u0002\u0002\u0002J\u0503\u0003\u0002\u0002\u0002L\u050e",
    "\u0003\u0002\u0002\u0002N\u0519\u0003\u0002\u0002\u0002P\u0524\u0003",
    "\u0002\u0002\u0002R\u0536\u0003\u0002\u0002\u0002T\u053e\u0003\u0002",
    "\u0002\u0002V\u054b\u0003\u0002\u0002\u0002X\u054d\u0003\u0002\u0002",
    "\u0002Z\u0558\u0003\u0002\u0002\u0002\\\u0574\u0003\u0002\u0002\u0002",
    "^\u058a\u0003\u0002\u0002\u0002`\u058d\u0003\u0002\u0002\u0002b\u0591",
    "\u0003\u0002\u0002\u0002d\u0597\u0003\u0002\u0002\u0002f\u05b5\u0003",
    "\u0002\u0002\u0002h\u05c7\u0003\u0002\u0002\u0002j\u05ec\u0003\u0002",
    "\u0002\u0002l\u05f0\u0003\u0002\u0002\u0002n\u05f3\u0003\u0002\u0002",
    "\u0002p\u05fa\u0003\u0002\u0002\u0002r\u060c\u0003\u0002\u0002\u0002",
    "t\u060e\u0003\u0002\u0002\u0002v\u0610\u0003\u0002\u0002\u0002x\u0623",
    "\u0003\u0002\u0002\u0002z\u062d\u0003\u0002\u0002\u0002|\u062f\u0003",
    "\u0002\u0002\u0002~\u0646\u0003\u0002\u0002\u0002\u0080\u0648\u0003",
    "\u0002\u0002\u0002\u0082\u0650\u0003\u0002\u0002\u0002\u0084\u0652\u0003",
    "\u0002\u0002\u0002\u0086\u065b\u0003\u0002\u0002\u0002\u0088\u0664\u0003",
    "\u0002\u0002\u0002\u008a\u0666\u0003\u0002\u0002\u0002\u008c\u0668\u0003",
    "\u0002\u0002\u0002\u008e\u066a\u0003\u0002\u0002\u0002\u0090\u066f\u0003",
    "\u0002\u0002\u0002\u0092\u0675\u0003\u0002\u0002\u0002\u0094\u067e\u0003",
    "\u0002\u0002\u0002\u0096\u0687\u0003\u0002\u0002\u0002\u0098\u06a0\u0003",
    "\u0002\u0002\u0002\u009a\u06a6\u0003\u0002\u0002\u0002\u009c\u06b1\u0003",
    "\u0002\u0002\u0002\u009e\u06cb\u0003\u0002\u0002\u0002\u00a0\u06cd\u0003",
    "\u0002\u0002\u0002\u00a2\u06dc\u0003\u0002\u0002\u0002\u00a4\u06f1\u0003",
    "\u0002\u0002\u0002\u00a6\u06f3\u0003\u0002\u0002\u0002\u00a8\u0702\u0003",
    "\u0002\u0002\u0002\u00aa\u0704\u0003\u0002\u0002\u0002\u00ac\u0707\u0003",
    "\u0002\u0002\u0002\u00ae\u0717\u0003\u0002\u0002\u0002\u00b0\u0719\u0003",
    "\u0002\u0002\u0002\u00b2\u071d\u0003\u0002\u0002\u0002\u00b4\u071f\u0003",
    "\u0002\u0002\u0002\u00b6\u0723\u0003\u0002\u0002\u0002\u00b8\u0727\u0003",
    "\u0002\u0002\u0002\u00ba\u072a\u0003\u0002\u0002\u0002\u00bc\u0733\u0003",
    "\u0002\u0002\u0002\u00be\u073c\u0003\u0002\u0002\u0002\u00c0\u0744\u0003",
    "\u0002\u0002\u0002\u00c2\u0746\u0003\u0002\u0002\u0002\u00c4\u0748\u0003",
    "\u0002\u0002\u0002\u00c6\u074f\u0003\u0002\u0002\u0002\u00c8\u0760\u0003",
    "\u0002\u0002\u0002\u00ca\u0763\u0003\u0002\u0002\u0002\u00cc\u076d\u0003",
    "\u0002\u0002\u0002\u00ce\u077d\u0003\u0002\u0002\u0002\u00d0\u077f\u0003",
    "\u0002\u0002\u0002\u00d2\u0790\u0003\u0002\u0002\u0002\u00d4\u07a2\u0003",
    "\u0002\u0002\u0002\u00d6\u07ab\u0003\u0002\u0002\u0002\u00d8\u07bc\u0003",
    "\u0002\u0002\u0002\u00da\u07c2\u0003\u0002\u0002\u0002\u00dc\u07c4\u0003",
    "\u0002\u0002\u0002\u00de\u07c8\u0003\u0002\u0002\u0002\u00e0\u07ca\u0003",
    "\u0002\u0002\u0002\u00e2\u07ce\u0003\u0002\u0002\u0002\u00e4\u07e5\u0003",
    "\u0002\u0002\u0002\u00e6\u07e7\u0003\u0002\u0002\u0002\u00e8\u07f2\u0003",
    "\u0002\u0002\u0002\u00ea\u07fb\u0003\u0002\u0002\u0002\u00ec\u0801\u0003",
    "\u0002\u0002\u0002\u00ee\u080c\u0003\u0002\u0002\u0002\u00f0\u081e\u0003",
    "\u0002\u0002\u0002\u00f2\u082d\u0003\u0002\u0002\u0002\u00f4\u0849\u0003",
    "\u0002\u0002\u0002\u00f6\u084b\u0003\u0002\u0002\u0002\u00f8\u084f\u0003",
    "\u0002\u0002\u0002\u00fa\u0851\u0003\u0002\u0002\u0002\u00fc\u0854\u0003",
    "\u0002\u0002\u0002\u00fe\u0858\u0003\u0002\u0002\u0002\u0100\u0864\u0003",
    "\u0002\u0002\u0002\u0102\u086b\u0003\u0002\u0002\u0002\u0104\u087b\u0003",
    "\u0002\u0002\u0002\u0106\u0891\u0003\u0002\u0002\u0002\u0108\u0893\u0003",
    "\u0002\u0002\u0002\u010a\u08b0\u0003\u0002\u0002\u0002\u010c\u08b2\u0003",
    "\u0002\u0002\u0002\u010e\u08dc\u0003\u0002\u0002\u0002\u0110\u08df\u0003",
    "\u0002\u0002\u0002\u0112\u08f5\u0003\u0002\u0002\u0002\u0114\u08fc\u0003",
    "\u0002\u0002\u0002\u0116\u0901\u0003\u0002\u0002\u0002\u0118\u0905\u0003",
    "\u0002\u0002\u0002\u011a\u0907\u0003\u0002\u0002\u0002\u011c\u0920\u0003",
    "\u0002\u0002\u0002\u011e\u0924\u0003\u0002\u0002\u0002\u0120\u0926\u0003",
    "\u0002\u0002\u0002\u0122\u093f\u0003\u0002\u0002\u0002\u0124\u0942\u0003",
    "\u0002\u0002\u0002\u0126\u0946\u0003\u0002\u0002\u0002\u0128\u0948\u0003",
    "\u0002\u0002\u0002\u012a\u0953\u0003\u0002\u0002\u0002\u012c\u0965\u0003",
    "\u0002\u0002\u0002\u012e\u0967\u0003\u0002\u0002\u0002\u0130\u0985\u0003",
    "\u0002\u0002\u0002\u0132\u0987\u0003\u0002\u0002\u0002\u0134\u0991\u0003",
    "\u0002\u0002\u0002\u0136\u0993\u0003\u0002\u0002\u0002\u0138\u0997\u0003",
    "\u0002\u0002\u0002\u013a\u099a\u0003\u0002\u0002\u0002\u013c\u09bf\u0003",
    "\u0002\u0002\u0002\u013e\u09c6\u0003\u0002\u0002\u0002\u0140\u09c8\u0003",
    "\u0002\u0002\u0002\u0142\u09ca\u0003\u0002\u0002\u0002\u0144\u09cc\u0003",
    "\u0002\u0002\u0002\u0146\u09cf\u0003\u0002\u0002\u0002\u0148\u09d3\u0003",
    "\u0002\u0002\u0002\u014a\u09d7\u0003\u0002\u0002\u0002\u014c\u09e5\u0003",
    "\u0002\u0002\u0002\u014e\u09f1\u0003\u0002\u0002\u0002\u0150\u09f5\u0003",
    "\u0002\u0002\u0002\u0152\u09f7\u0003\u0002\u0002\u0002\u0154\u09ff\u0003",
    "\u0002\u0002\u0002\u0156\u0a01\u0003\u0002\u0002\u0002\u0158\u0a07\u0003",
    "\u0002\u0002\u0002\u015a\u0a14\u0003\u0002\u0002\u0002\u015c\u0a46\u0003",
    "\u0002\u0002\u0002\u015e\u0a48\u0003\u0002\u0002\u0002\u0160\u0a5e\u0003",
    "\u0002\u0002\u0002\u0162\u0a60\u0003\u0002\u0002\u0002\u0164\u0a62\u0003",
    "\u0002\u0002\u0002\u0166\u0a75\u0003\u0002\u0002\u0002\u0168\u0a82\u0003",
    "\u0002\u0002\u0002\u016a\u0a85\u0003\u0002\u0002\u0002\u016c\u0a8a\u0003",
    "\u0002\u0002\u0002\u016e\u0a8f\u0003\u0002\u0002\u0002\u0170\u0a93\u0003",
    "\u0002\u0002\u0002\u0172\u0a9a\u0003\u0002\u0002\u0002\u0174\u0a9e\u0003",
    "\u0002\u0002\u0002\u0176\u0ab2\u0003\u0002\u0002\u0002\u0178\u0ab4\u0003",
    "\u0002\u0002\u0002\u017a\u0aba\u0003\u0002\u0002\u0002\u017c\u0abc\u0003",
    "\u0002\u0002\u0002\u017e\u0ac3\u0003\u0002\u0002\u0002\u0180\u0ad9\u0003",
    "\u0002\u0002\u0002\u0182\u0aeb\u0003\u0002\u0002\u0002\u0184\u0af3\u0003",
    "\u0002\u0002\u0002\u0186\u0b0b\u0003\u0002\u0002\u0002\u0188\u0b0d\u0003",
    "\u0002\u0002\u0002\u018a\u0b2f\u0003\u0002\u0002\u0002\u018c\u0b31\u0003",
    "\u0002\u0002\u0002\u018e\u0b38\u0003\u0002\u0002\u0002\u0190\u0b4a\u0003",
    "\u0002\u0002\u0002\u0192\u0b50\u0003\u0002\u0002\u0002\u0194\u0b60\u0003",
    "\u0002\u0002\u0002\u0196\u0b68\u0003\u0002\u0002\u0002\u0198\u0b71\u0003",
    "\u0002\u0002\u0002\u019a\u0b7c\u0003\u0002\u0002\u0002\u019c\u0b7e\u0003",
    "\u0002\u0002\u0002\u019e\u0c11\u0003\u0002\u0002\u0002\u01a0\u0c13\u0003",
    "\u0002\u0002\u0002\u01a2\u0c32\u0003\u0002\u0002\u0002\u01a4\u0c62\u0003",
    "\u0002\u0002\u0002\u01a6\u0c72\u0003\u0002\u0002\u0002\u01a8\u0c90\u0003",
    "\u0002\u0002\u0002\u01aa\u0c92\u0003\u0002\u0002\u0002\u01ac\u0c97\u0003",
    "\u0002\u0002\u0002\u01ae\u0ca6\u0003\u0002\u0002\u0002\u01b0\u0cb9\u0003",
    "\u0002\u0002\u0002\u01b2\u0cc4\u0003\u0002\u0002\u0002\u01b4\u0cd6\u0003",
    "\u0002\u0002\u0002\u01b6\u0cd8\u0003\u0002\u0002\u0002\u01b8\u0ce7\u0003",
    "\u0002\u0002\u0002\u01ba\u0cf6\u0003\u0002\u0002\u0002\u01bc\u0d0a\u0003",
    "\u0002\u0002\u0002\u01be\u0d19\u0003\u0002\u0002\u0002\u01c0\u0d28\u0003",
    "\u0002\u0002\u0002\u01c2\u0d41\u0003\u0002\u0002\u0002\u01c4\u0d50\u0003",
    "\u0002\u0002\u0002\u01c6\u0d5a\u0003\u0002\u0002\u0002\u01c8\u0d64\u0003",
    "\u0002\u0002\u0002\u01ca\u0d6e\u0003\u0002\u0002\u0002\u01cc\u0d78\u0003",
    "\u0002\u0002\u0002\u01ce\u0d82\u0003\u0002\u0002\u0002\u01d0\u0d8e\u0003",
    "\u0002\u0002\u0002\u01d2\u0d9b\u0003\u0002\u0002\u0002\u01d4\u0db4\u0003",
    "\u0002\u0002\u0002\u01d6\u0dbe\u0003\u0002\u0002\u0002\u01d8\u0dc0\u0003",
    "\u0002\u0002\u0002\u01da\u0ded\u0003\u0002\u0002\u0002\u01dc\u0e08\u0003",
    "\u0002\u0002\u0002\u01de\u0e0b\u0003\u0002\u0002\u0002\u01e0\u0e10\u0003",
    "\u0002\u0002\u0002\u01e2\u0e1e\u0003\u0002\u0002\u0002\u01e4\u0e37\u0003",
    "\u0002\u0002\u0002\u01e6\u0e4d\u0003\u0002\u0002\u0002\u01e8\u0e76\u0003",
    "\u0002\u0002\u0002\u01ea\u0e7e\u0003\u0002\u0002\u0002\u01ec\u0e81\u0003",
    "\u0002\u0002\u0002\u01ee\u0e8d\u0003\u0002\u0002\u0002\u01f0\u0ea4\u0003",
    "\u0002\u0002\u0002\u01f2\u0ea6\u0003\u0002\u0002\u0002\u01f4\u0eb0\u0003",
    "\u0002\u0002\u0002\u01f6\u0ecd\u0003\u0002\u0002\u0002\u01f8\u0ee7\u0003",
    "\u0002\u0002\u0002\u01fa\u0ee9\u0003\u0002\u0002\u0002\u01fc\u0f03\u0003",
    "\u0002\u0002\u0002\u01fe\u0f05\u0003\u0002\u0002\u0002\u0200\u0f0e\u0003",
    "\u0002\u0002\u0002\u0202\u0f11\u0003\u0002\u0002\u0002\u0204\u0f24\u0003",
    "\u0002\u0002\u0002\u0206\u0f30\u0003\u0002\u0002\u0002\u0208\u0f3c\u0003",
    "\u0002\u0002\u0002\u020a\u0f44\u0003\u0002\u0002\u0002\u020c\u0f46\u0003",
    "\u0002\u0002\u0002\u020e\u0f52\u0003\u0002\u0002\u0002\u0210\u0f60\u0003",
    "\u0002\u0002\u0002\u0212\u0f6c\u0003\u0002\u0002\u0002\u0214\u0f78\u0003",
    "\u0002\u0002\u0002\u0216\u0fa4\u0003\u0002\u0002\u0002\u0218\u0fb2\u0003",
    "\u0002\u0002\u0002\u021a\u0fbf\u0003\u0002\u0002\u0002\u021c\u0fdd\u0003",
    "\u0002\u0002\u0002\u021e\u0fdf\u0003\u0002\u0002\u0002\u0220\u0ff1\u0003",
    "\u0002\u0002\u0002\u0222\u100a\u0003\u0002\u0002\u0002\u0224\u100c\u0003",
    "\u0002\u0002\u0002\u0226\u101f\u0003\u0002\u0002\u0002\u0228\u1021\u0003",
    "\u0002\u0002\u0002\u022a\u102d\u0003\u0002\u0002\u0002\u022c\u1037\u0003",
    "\u0002\u0002\u0002\u022e\u1039\u0003\u0002\u0002\u0002\u0230\u1042\u0003",
    "\u0002\u0002\u0002\u0232\u1044\u0003\u0002\u0002\u0002\u0234\u104d\u0003",
    "\u0002\u0002\u0002\u0236\u1055\u0003\u0002\u0002\u0002\u0238\u1058\u0003",
    "\u0002\u0002\u0002\u023a\u1062\u0003\u0002\u0002\u0002\u023c\u106c\u0003",
    "\u0002\u0002\u0002\u023e\u1075\u0003\u0002\u0002\u0002\u0240\u1079\u0003",
    "\u0002\u0002\u0002\u0242\u107c\u0003\u0002\u0002\u0002\u0244\u1084\u0003",
    "\u0002\u0002\u0002\u0246\u1098\u0003\u0002\u0002\u0002\u0248\u109b\u0003",
    "\u0002\u0002\u0002\u024a\u10a6\u0003\u0002\u0002\u0002\u024c\u10ba\u0003",
    "\u0002\u0002\u0002\u024e\u10c3\u0003\u0002\u0002\u0002\u0250\u10cf\u0003",
    "\u0002\u0002\u0002\u0252\u10e3\u0003\u0002\u0002\u0002\u0254\u10fa\u0003",
    "\u0002\u0002\u0002\u0256\u10fc\u0003\u0002\u0002\u0002\u0258\u1107\u0003",
    "\u0002\u0002\u0002\u025a\u1109\u0003\u0002\u0002\u0002\u025c\u110e\u0003",
    "\u0002\u0002\u0002\u025e\u1111\u0003\u0002\u0002\u0002\u0260\u111e\u0003",
    "\u0002\u0002\u0002\u0262\u112f\u0003\u0002\u0002\u0002\u0264\u1139\u0003",
    "\u0002\u0002\u0002\u0266\u113b\u0003\u0002\u0002\u0002\u0268\u1149\u0003",
    "\u0002\u0002\u0002\u026a\u1152\u0003\u0002\u0002\u0002\u026c\u116e\u0003",
    "\u0002\u0002\u0002\u026e\u1170\u0003\u0002\u0002\u0002\u0270\u1182\u0003",
    "\u0002\u0002\u0002\u0272\u11a5\u0003\u0002\u0002\u0002\u0274\u11a7\u0003",
    "\u0002\u0002\u0002\u0276\u11b1\u0003\u0002\u0002\u0002\u0278\u11b7\u0003",
    "\u0002\u0002\u0002\u027a\u11ba\u0003\u0002\u0002\u0002\u027c\u11bf\u0003",
    "\u0002\u0002\u0002\u027e\u11d2\u0003\u0002\u0002\u0002\u0280\u11dd\u0003",
    "\u0002\u0002\u0002\u0282\u11ff\u0003\u0002\u0002\u0002\u0284\u1208\u0003",
    "\u0002\u0002\u0002\u0286\u121c\u0003\u0002\u0002\u0002\u0288\u122a\u0003",
    "\u0002\u0002\u0002\u028a\u1234\u0003\u0002\u0002\u0002\u028c\u125b\u0003",
    "\u0002\u0002\u0002\u028e\u125e\u0003\u0002\u0002\u0002\u0290\u127c\u0003",
    "\u0002\u0002\u0002\u0292\u1286\u0003\u0002\u0002\u0002\u0294\u128f\u0003",
    "\u0002\u0002\u0002\u0296\u1297\u0003\u0002\u0002\u0002\u0298\u12a7\u0003",
    "\u0002\u0002\u0002\u029a\u12b4\u0003\u0002\u0002\u0002\u029c\u12bb\u0003",
    "\u0002\u0002\u0002\u029e\u12bd\u0003\u0002\u0002\u0002\u02a0\u12db\u0003",
    "\u0002\u0002\u0002\u02a2\u12de\u0003\u0002\u0002\u0002\u02a4\u12e3\u0003",
    "\u0002\u0002\u0002\u02a6\u12ec\u0003\u0002\u0002\u0002\u02a8\u12fb\u0003",
    "\u0002\u0002\u0002\u02aa\u131a\u0003\u0002\u0002\u0002\u02ac\u1324\u0003",
    "\u0002\u0002\u0002\u02ae\u133f\u0003\u0002\u0002\u0002\u02b0\u1348\u0003",
    "\u0002\u0002\u0002\u02b2\u134e\u0003\u0002\u0002\u0002\u02b4\u1350\u0003",
    "\u0002\u0002\u0002\u02b6\u1356\u0003\u0002\u0002\u0002\u02b8\u1368\u0003",
    "\u0002\u0002\u0002\u02ba\u1384\u0003\u0002\u0002\u0002\u02bc\u138f\u0003",
    "\u0002\u0002\u0002\u02be\u1391\u0003\u0002\u0002\u0002\u02c0\u139a\u0003",
    "\u0002\u0002\u0002\u02c2\u139c\u0003\u0002\u0002\u0002\u02c4\u13a0\u0003",
    "\u0002\u0002\u0002\u02c6\u13a6\u0003\u0002\u0002\u0002\u02c8\u13ac\u0003",
    "\u0002\u0002\u0002\u02ca\u13be\u0003\u0002\u0002\u0002\u02cc\u13cc\u0003",
    "\u0002\u0002\u0002\u02ce\u13d3\u0003\u0002\u0002\u0002\u02d0\u13d5\u0003",
    "\u0002\u0002\u0002\u02d2\u13e0\u0003\u0002\u0002\u0002\u02d4\u13e2\u0003",
    "\u0002\u0002\u0002\u02d6\u13f1\u0003\u0002\u0002\u0002\u02d8\u13f9\u0003",
    "\u0002\u0002\u0002\u02da\u1434\u0003\u0002\u0002\u0002\u02dc\u1436\u0003",
    "\u0002\u0002\u0002\u02de\u1451\u0003\u0002\u0002\u0002\u02e0\u1453\u0003",
    "\u0002\u0002\u0002\u02e2\u1464\u0003\u0002\u0002\u0002\u02e4\u146f\u0003",
    "\u0002\u0002\u0002\u02e6\u147e\u0003\u0002\u0002\u0002\u02e8\u1481\u0003",
    "\u0002\u0002\u0002\u02ea\u1487\u0003\u0002\u0002\u0002\u02ec\u148d\u0003",
    "\u0002\u0002\u0002\u02ee\u1492\u0003\u0002\u0002\u0002\u02f0\u149a\u0003",
    "\u0002\u0002\u0002\u02f2\u14a0\u0003\u0002\u0002\u0002\u02f4\u14b9\u0003",
    "\u0002\u0002\u0002\u02f6\u14bb\u0003\u0002\u0002\u0002\u02f8\u14c7\u0003",
    "\u0002\u0002\u0002\u02fa\u14c9\u0003\u0002\u0002\u0002\u02fc\u14df\u0003",
    "\u0002\u0002\u0002\u02fe\u14e9\u0003\u0002\u0002\u0002\u0300\u14eb\u0003",
    "\u0002\u0002\u0002\u0302\u14ee\u0003\u0002\u0002\u0002\u0304\u1522\u0003",
    "\u0002\u0002\u0002\u0306\u152b\u0003\u0002\u0002\u0002\u0308\u152d\u0003",
    "\u0002\u0002\u0002\u030a\u152f\u0003\u0002\u0002\u0002\u030c\u1531\u0003",
    "\u0002\u0002\u0002\u030e\u0310\u0005v<\u0002\u030f\u030e\u0003\u0002",
    "\u0002\u0002\u030f\u0310\u0003\u0002\u0002\u0002\u0310\u0311\u0003\u0002",
    "\u0002\u0002\u0311\u0312\u0007\u0002\u0002\u0003\u0312\u0003\u0003\u0002",
    "\u0002\u0002\u0313\u031c\u0005\u0306\u0184\u0002\u0314\u031c\u0007@",
    "\u0002\u0002\u0315\u0316\u0007P\u0002\u0002\u0316\u0317\u0005X-\u0002",
    "\u0317\u0318\u0007Q\u0002\u0002\u0318\u031c\u0003\u0002\u0002\u0002",
    "\u0319\u031c\u0005\u0006\u0004\u0002\u031a\u031c\u0005\u000e\b\u0002",
    "\u031b\u0313\u0003\u0002\u0002\u0002\u031b\u0314\u0003\u0002\u0002\u0002",
    "\u031b\u0315\u0003\u0002\u0002\u0002\u031b\u0319\u0003\u0002\u0002\u0002",
    "\u031b\u031a\u0003\u0002\u0002\u0002\u031c\u0005\u0003\u0002\u0002\u0002",
    "\u031d\u0320\u0005\b\u0005\u0002\u031e\u0320\u0005\n\u0006\u0002\u031f",
    "\u031d\u0003\u0002\u0002\u0002\u031f\u031e\u0003\u0002\u0002\u0002\u0320",
    "\u0007\u0003\u0002\u0002\u0002\u0321\u032b\u0007\u007f\u0002\u0002\u0322",
    "\u032b\u0005\u0152\u00aa\u0002\u0323\u032b\u0005\u0144\u00a3\u0002\u0324",
    "\u032b\u0005\u0154\u00ab\u0002\u0325\u0326\u0007^\u0002\u0002\u0326",
    "\u032b\u0005\u011e\u0090\u0002\u0327\u0328\u0007^\u0002\u0002\u0328",
    "\u032b\u0005\u009cO\u0002\u0329\u032b\u0005\u0160\u00b1\u0002\u032a",
    "\u0321\u0003\u0002\u0002\u0002\u032a\u0322\u0003\u0002\u0002\u0002\u032a",
    "\u0323\u0003\u0002\u0002\u0002\u032a\u0324\u0003\u0002\u0002\u0002\u032a",
    "\u0325\u0003\u0002\u0002\u0002\u032a\u0327\u0003\u0002\u0002\u0002\u032a",
    "\u0329\u0003\u0002\u0002\u0002\u032b\t\u0003\u0002\u0002\u0002\u032c",
    "\u032e\u0005\f\u0007\u0002\u032d\u032f\u0007?\u0002\u0002\u032e\u032d",
    "\u0003\u0002\u0002\u0002\u032e\u032f\u0003\u0002\u0002\u0002\u032f\u0330",
    "\u0003\u0002\u0002\u0002\u0330\u0331\u0005\b\u0005\u0002\u0331\u000b",
    "\u0003\u0002\u0002\u0002\u0332\u0333\b\u0007\u0001\u0002\u0333\u033e",
    "\u0007z\u0002\u0002\u0334\u0335\u0005\u009aN\u0002\u0335\u0336\u0007",
    "z\u0002\u0002\u0336\u033e\u0003\u0002\u0002\u0002\u0337\u0338\u0005",
    "\u00b2Z\u0002\u0338\u0339\u0007z\u0002\u0002\u0339\u033e\u0003\u0002",
    "\u0002\u0002\u033a\u033b\u0005\u009cO\u0002\u033b\u033c\u0007z\u0002",
    "\u0002\u033c\u033e\u0003\u0002\u0002\u0002\u033d\u0332\u0003\u0002\u0002",
    "\u0002\u033d\u0334\u0003\u0002\u0002\u0002\u033d\u0337\u0003\u0002\u0002",
    "\u0002\u033d\u033a\u0003\u0002\u0002\u0002\u033e\u034b\u0003\u0002\u0002",
    "\u0002\u033f\u0340\f\u0004\u0002\u0002\u0340\u0341\u0007\u007f\u0002",
    "\u0002\u0341\u034a\u0007z\u0002\u0002\u0342\u0344\f\u0003\u0002\u0002",
    "\u0343\u0345\u0007?\u0002\u0002\u0344\u0343\u0003\u0002\u0002\u0002",
    "\u0344\u0345\u0003\u0002\u0002\u0002\u0345\u0346\u0003\u0002\u0002\u0002",
    "\u0346\u0347\u0005\u015e\u00b0\u0002\u0347\u0348\u0007z\u0002\u0002",
    "\u0348\u034a\u0003\u0002\u0002\u0002\u0349\u033f\u0003\u0002\u0002\u0002",
    "\u0349\u0342\u0003\u0002\u0002\u0002\u034a\u034d\u0003\u0002\u0002\u0002",
    "\u034b\u0349\u0003\u0002\u0002\u0002\u034b\u034c\u0003\u0002\u0002\u0002",
    "\u034c\r\u0003\u0002\u0002\u0002\u034d\u034b\u0003\u0002\u0002\u0002",
    "\u034e\u0350\u0005\u0010\t\u0002\u034f\u0351\u0005\u001e\u0010\u0002",
    "\u0350\u034f\u0003\u0002\u0002\u0002\u0350\u0351\u0003\u0002\u0002\u0002",
    "\u0351\u0352\u0003\u0002\u0002\u0002\u0352\u0353\u0005b2\u0002\u0353",
    "\u000f\u0003\u0002\u0002\u0002\u0354\u0356\u0007R\u0002\u0002\u0355",
    "\u0357\u0005\u0012\n\u0002\u0356\u0355\u0003\u0002\u0002\u0002\u0356",
    "\u0357\u0003\u0002\u0002\u0002\u0357\u0358\u0003\u0002\u0002\u0002\u0358",
    "\u0359\u0007S\u0002\u0002\u0359\u0011\u0003\u0002\u0002\u0002\u035a",
    "\u0361\u0005\u0014\u000b\u0002\u035b\u0361\u0005\u0016\f\u0002\u035c",
    "\u035d\u0005\u0014\u000b\u0002\u035d\u035e\u0007u\u0002\u0002\u035e",
    "\u035f\u0005\u0016\f\u0002\u035f\u0361\u0003\u0002\u0002\u0002\u0360",
    "\u035a\u0003\u0002\u0002\u0002\u0360\u035b\u0003\u0002\u0002\u0002\u0360",
    "\u035c\u0003\u0002\u0002\u0002\u0361\u0013\u0003\u0002\u0002\u0002\u0362",
    "\u0363\t\u0002\u0002\u0002\u0363\u0015\u0003\u0002\u0002\u0002\u0364",
    "\u0365\b\f\u0001\u0002\u0365\u0367\u0005\u0018\r\u0002\u0366\u0368\u0007",
    "~\u0002\u0002\u0367\u0366\u0003\u0002\u0002\u0002\u0367\u0368\u0003",
    "\u0002\u0002\u0002\u0368\u0371\u0003\u0002\u0002\u0002\u0369\u036a\f",
    "\u0003\u0002\u0002\u036a\u036b\u0007u\u0002\u0002\u036b\u036d\u0005",
    "\u0018\r\u0002\u036c\u036e\u0007~\u0002\u0002\u036d\u036c\u0003\u0002",
    "\u0002\u0002\u036d\u036e\u0003\u0002\u0002\u0002\u036e\u0370\u0003\u0002",
    "\u0002\u0002\u036f\u0369\u0003\u0002\u0002\u0002\u0370\u0373\u0003\u0002",
    "\u0002\u0002\u0371\u036f\u0003\u0002\u0002\u0002\u0371\u0372\u0003\u0002",
    "\u0002\u0002\u0372\u0017\u0003\u0002\u0002\u0002\u0373\u0371\u0003\u0002",
    "\u0002\u0002\u0374\u0377\u0005\u001a\u000e\u0002\u0375\u0377\u0005\u001c",
    "\u000f\u0002\u0376\u0374\u0003\u0002\u0002\u0002\u0376\u0375\u0003\u0002",
    "\u0002\u0002\u0377\u0019\u0003\u0002\u0002\u0002\u0378\u037d\u0007\u007f",
    "\u0002\u0002\u0379\u037a\u0007\\\u0002\u0002\u037a\u037d\u0007\u007f",
    "\u0002\u0002\u037b\u037d\u0007@\u0002\u0002\u037c\u0378\u0003\u0002",
    "\u0002\u0002\u037c\u0379\u0003\u0002\u0002\u0002\u037c\u037b\u0003\u0002",
    "\u0002\u0002\u037d\u001b\u0003\u0002\u0002\u0002\u037e\u037f\u0007\u007f",
    "\u0002\u0002\u037f\u0384\u0005\u0114\u008b\u0002\u0380\u0381\u0007\\",
    "\u0002\u0002\u0381\u0382\u0007\u007f\u0002\u0002\u0382\u0384\u0005\u0114",
    "\u008b\u0002\u0383\u037e\u0003\u0002\u0002\u0002\u0383\u0380\u0003\u0002",
    "\u0002\u0002\u0384\u001d\u0003\u0002\u0002\u0002\u0385\u0386\u0007P",
    "\u0002\u0002\u0386\u0387\u0005\u010a\u0086\u0002\u0387\u0389\u0007Q",
    "\u0002\u0002\u0388\u038a\u0007*\u0002\u0002\u0389\u0388\u0003\u0002",
    "\u0002\u0002\u0389\u038a\u0003\u0002\u0002\u0002\u038a\u038c\u0003\u0002",
    "\u0002\u0002\u038b\u038d\u0005\u017a\u00be\u0002\u038c\u038b\u0003\u0002",
    "\u0002\u0002\u038c\u038d\u0003\u0002\u0002\u0002\u038d\u038f\u0003\u0002",
    "\u0002\u0002\u038e\u0390\u0005\u00d0i\u0002\u038f\u038e\u0003\u0002",
    "\u0002\u0002\u038f\u0390\u0003\u0002\u0002\u0002\u0390\u0392\u0003\u0002",
    "\u0002\u0002\u0391\u0393\u0005\u00f2z\u0002\u0392\u0391\u0003\u0002",
    "\u0002\u0002\u0392\u0393\u0003\u0002\u0002\u0002\u0393\u001f\u0003\u0002",
    "\u0002\u0002\u0394\u0395\b\u0011\u0001\u0002\u0395\u03d5\u0005\u0004",
    "\u0003\u0002\u0396\u0397\u0005\u0098M\u0002\u0397\u0399\u0007P\u0002",
    "\u0002\u0398\u039a\u0005\"\u0012\u0002\u0399\u0398\u0003\u0002\u0002",
    "\u0002\u0399\u039a\u0003\u0002\u0002\u0002\u039a\u039b\u0003\u0002\u0002",
    "\u0002\u039b\u039c\u0007Q\u0002\u0002\u039c\u03d5\u0003\u0002\u0002",
    "\u0002\u039d\u039e\u0005\u0168\u00b5\u0002\u039e\u03a0\u0007P\u0002",
    "\u0002\u039f\u03a1\u0005\"\u0012\u0002\u03a0\u039f\u0003\u0002\u0002",
    "\u0002\u03a0\u03a1\u0003\u0002\u0002\u0002\u03a1\u03a2\u0003\u0002\u0002",
    "\u0002\u03a2\u03a3\u0007Q\u0002\u0002\u03a3\u03d5\u0003\u0002\u0002",
    "\u0002\u03a4\u03a5\u0005\u0098M\u0002\u03a5\u03a6\u0005\u011c\u008f",
    "\u0002\u03a6\u03d5\u0003\u0002\u0002\u0002\u03a7\u03a8\u0005\u0168\u00b5",
    "\u0002\u03a8\u03a9\u0005\u011c\u008f\u0002\u03a9\u03d5\u0003\u0002\u0002",
    "\u0002\u03aa\u03ab\u0007\u001a\u0002\u0002\u03ab\u03ac\u0007a\u0002",
    "\u0002\u03ac\u03ad\u0005\u00fe\u0080\u0002\u03ad\u03ae\u0007b\u0002",
    "\u0002\u03ae\u03af\u0007P\u0002\u0002\u03af\u03b0\u0005X-\u0002\u03b0",
    "\u03b1\u0007Q\u0002\u0002\u03b1\u03d5\u0003\u0002\u0002\u0002\u03b2",
    "\u03b3\u0007<\u0002\u0002\u03b3\u03b4\u0007a\u0002\u0002\u03b4\u03b5",
    "\u0005\u00fe\u0080\u0002\u03b5\u03b6\u0007b\u0002\u0002\u03b6\u03b7",
    "\u0007P\u0002\u0002\u03b7\u03b8\u0005X-\u0002\u03b8\u03b9\u0007Q\u0002",
    "\u0002\u03b9\u03d5\u0003\u0002\u0002\u0002\u03ba\u03bb\u00075\u0002",
    "\u0002\u03bb\u03bc\u0007a\u0002\u0002\u03bc\u03bd\u0005\u00fe\u0080",
    "\u0002\u03bd\u03be\u0007b\u0002\u0002\u03be\u03bf\u0007P\u0002\u0002",
    "\u03bf\u03c0\u0005X-\u0002\u03c0\u03c1\u0007Q\u0002\u0002\u03c1\u03d5",
    "\u0003\u0002\u0002\u0002\u03c2\u03c3\u0007\u0013\u0002\u0002\u03c3\u03c4",
    "\u0007a\u0002\u0002\u03c4\u03c5\u0005\u00fe\u0080\u0002\u03c5\u03c6",
    "\u0007b\u0002\u0002\u03c6\u03c7\u0007P\u0002\u0002\u03c7\u03c8\u0005",
    "X-\u0002\u03c8\u03c9\u0007Q\u0002\u0002\u03c9\u03d5\u0003\u0002\u0002",
    "\u0002\u03ca\u03cb\u0007F\u0002\u0002\u03cb\u03cc\u0007P\u0002\u0002",
    "\u03cc\u03cd\u0005X-\u0002\u03cd\u03ce\u0007Q\u0002\u0002\u03ce\u03d5",
    "\u0003\u0002\u0002\u0002\u03cf\u03d0\u0007F\u0002\u0002\u03d0\u03d1",
    "\u0007P\u0002\u0002\u03d1\u03d2\u0005\u00fe\u0080\u0002\u03d2\u03d3",
    "\u0007Q\u0002\u0002\u03d3\u03d5\u0003\u0002\u0002\u0002\u03d4\u0394",
    "\u0003\u0002\u0002\u0002\u03d4\u0396\u0003\u0002\u0002\u0002\u03d4\u039d",
    "\u0003\u0002\u0002\u0002\u03d4\u03a4\u0003\u0002\u0002\u0002\u03d4\u03a7",
    "\u0003\u0002\u0002\u0002\u03d4\u03aa\u0003\u0002\u0002\u0002\u03d4\u03b2",
    "\u0003\u0002\u0002\u0002\u03d4\u03ba\u0003\u0002\u0002\u0002\u03d4\u03c2",
    "\u0003\u0002\u0002\u0002\u03d4\u03ca\u0003\u0002\u0002\u0002\u03d4\u03cf",
    "\u0003\u0002\u0002\u0002\u03d5\u03fe\u0003\u0002\u0002\u0002\u03d6\u03d7",
    "\f\u0015\u0002\u0002\u03d7\u03d8\u0007R\u0002\u0002\u03d8\u03d9\u0005",
    "X-\u0002\u03d9\u03da\u0007S\u0002\u0002\u03da\u03fd\u0003\u0002\u0002",
    "\u0002\u03db\u03dc\f\u0014\u0002\u0002\u03dc\u03dd\u0007R\u0002\u0002",
    "\u03dd\u03de\u0005\u011c\u008f\u0002\u03de\u03df\u0007S\u0002\u0002",
    "\u03df\u03fd\u0003\u0002\u0002\u0002\u03e0\u03e1\f\u0013\u0002\u0002",
    "\u03e1\u03e3\u0007P\u0002\u0002\u03e2\u03e4\u0005\"\u0012\u0002\u03e3",
    "\u03e2\u0003\u0002\u0002\u0002\u03e3\u03e4\u0003\u0002\u0002\u0002\u03e4",
    "\u03e5\u0003\u0002\u0002\u0002\u03e5\u03fd\u0007Q\u0002\u0002\u03e6",
    "\u03e7\f\u000e\u0002\u0002\u03e7\u03e9\u0007|\u0002\u0002\u03e8\u03ea",
    "\u0007?\u0002\u0002\u03e9\u03e8\u0003\u0002\u0002\u0002\u03e9\u03ea",
    "\u0003\u0002\u0002\u0002\u03ea\u03eb\u0003\u0002\u0002\u0002\u03eb\u03fd",
    "\u0005\u0006\u0004\u0002\u03ec\u03ed\f\r\u0002\u0002\u03ed\u03ef\u0007",
    "w\u0002\u0002\u03ee\u03f0\u0007?\u0002\u0002\u03ef\u03ee\u0003\u0002",
    "\u0002\u0002\u03ef\u03f0\u0003\u0002\u0002\u0002\u03f0\u03f1\u0003\u0002",
    "\u0002\u0002\u03f1\u03fd\u0005\u0006\u0004\u0002\u03f2\u03f3\f\f\u0002",
    "\u0002\u03f3\u03f4\u0007|\u0002\u0002\u03f4\u03fd\u0005$\u0013\u0002",
    "\u03f5\u03f6\f\u000b\u0002\u0002\u03f6\u03f7\u0007w\u0002\u0002\u03f7",
    "\u03fd\u0005$\u0013\u0002\u03f8\u03f9\f\n\u0002\u0002\u03f9\u03fd\u0007",
    "s\u0002\u0002\u03fa\u03fb\f\t\u0002\u0002\u03fb\u03fd\u0007t\u0002\u0002",
    "\u03fc\u03d6\u0003\u0002\u0002\u0002\u03fc\u03db\u0003\u0002\u0002\u0002",
    "\u03fc\u03e0\u0003\u0002\u0002\u0002\u03fc\u03e6\u0003\u0002\u0002\u0002",
    "\u03fc\u03ec\u0003\u0002\u0002\u0002\u03fc\u03f2\u0003\u0002\u0002\u0002",
    "\u03fc\u03f5\u0003\u0002\u0002\u0002\u03fc\u03f8\u0003\u0002\u0002\u0002",
    "\u03fc\u03fa\u0003\u0002\u0002\u0002\u03fd\u0400\u0003\u0002\u0002\u0002",
    "\u03fe\u03fc\u0003\u0002\u0002\u0002\u03fe\u03ff\u0003\u0002\u0002\u0002",
    "\u03ff!\u0003\u0002\u0002\u0002\u0400\u03fe\u0003\u0002\u0002\u0002",
    "\u0401\u0402\u0005\u011a\u008e\u0002\u0402#\u0003\u0002\u0002\u0002",
    "\u0403\u0405\u0005\f\u0007\u0002\u0404\u0403\u0003\u0002\u0002\u0002",
    "\u0404\u0405\u0003\u0002\u0002\u0002\u0405\u0406\u0003\u0002\u0002\u0002",
    "\u0406\u0407\u0005\u009aN\u0002\u0407\u0408\u0007z\u0002\u0002\u0408",
    "\u0409\u0007^\u0002\u0002\u0409\u040a\u0005\u009aN\u0002\u040a\u041a",
    "\u0003\u0002\u0002\u0002\u040b\u040c\u0005\f\u0007\u0002\u040c\u040d",
    "\u0007?\u0002\u0002\u040d\u040e\u0005\u015e\u00b0\u0002\u040e\u040f",
    "\u0007z\u0002\u0002\u040f\u0410\u0007^\u0002\u0002\u0410\u0411\u0005",
    "\u009aN\u0002\u0411\u041a\u0003\u0002\u0002\u0002\u0412\u0414\u0005",
    "\f\u0007\u0002\u0413\u0412\u0003\u0002\u0002\u0002\u0413\u0414\u0003",
    "\u0002\u0002\u0002\u0414\u0415\u0003\u0002\u0002\u0002\u0415\u0416\u0007",
    "^\u0002\u0002\u0416\u041a\u0005\u009aN\u0002\u0417\u0418\u0007^\u0002",
    "\u0002\u0418\u041a\u0005\u009cO\u0002\u0419\u0404\u0003\u0002\u0002",
    "\u0002\u0419\u040b\u0003\u0002\u0002\u0002\u0419\u0413\u0003\u0002\u0002",
    "\u0002\u0419\u0417\u0003\u0002\u0002\u0002\u041a%\u0003\u0002\u0002",
    "\u0002\u041b\u0438\u0005 \u0011\u0002\u041c\u041d\u0007s\u0002\u0002",
    "\u041d\u0438\u0005:\u001e\u0002\u041e\u041f\u0007t\u0002\u0002\u041f",
    "\u0438\u0005:\u001e\u0002\u0420\u0421\u0005(\u0015\u0002\u0421\u0422",
    "\u0005:\u001e\u0002\u0422\u0438\u0003\u0002\u0002\u0002\u0423\u0424",
    "\u00079\u0002\u0002\u0424\u0438\u0005&\u0014\u0002\u0425\u0426\u0007",
    "9\u0002\u0002\u0426\u0427\u0007P\u0002\u0002\u0427\u0428\u0005\u00fe",
    "\u0080\u0002\u0428\u0429\u0007Q\u0002\u0002\u0429\u0438\u0003\u0002",
    "\u0002\u0002\u042a\u042b\u00079\u0002\u0002\u042b\u042c\u0007~\u0002",
    "\u0002\u042c\u042d\u0007P\u0002\u0002\u042d\u042e\u0007\u007f\u0002",
    "\u0002\u042e\u0438\u0007Q\u0002\u0002\u042f\u0430\u0007\u0006\u0002",
    "\u0002\u0430\u0431\u0007P\u0002\u0002\u0431\u0432\u0005\u00fe\u0080",
    "\u0002\u0432\u0433\u0007Q\u0002\u0002\u0433\u0438\u0003\u0002\u0002",
    "\u0002\u0434\u0438\u00058\u001d\u0002\u0435\u0438\u0005*\u0016\u0002",
    "\u0436\u0438\u00056\u001c\u0002\u0437\u041b\u0003\u0002\u0002\u0002",
    "\u0437\u041c\u0003\u0002\u0002\u0002\u0437\u041e\u0003\u0002\u0002\u0002",
    "\u0437\u0420\u0003\u0002\u0002\u0002\u0437\u0423\u0003\u0002\u0002\u0002",
    "\u0437\u0425\u0003\u0002\u0002\u0002\u0437\u042a\u0003\u0002\u0002\u0002",
    "\u0437\u042f\u0003\u0002\u0002\u0002\u0437\u0434\u0003\u0002\u0002\u0002",
    "\u0437\u0435\u0003\u0002\u0002\u0002\u0437\u0436\u0003\u0002\u0002\u0002",
    "\u0438\'\u0003\u0002\u0002\u0002\u0439\u043a\t\u0003\u0002\u0002\u043a",
    ")\u0003\u0002\u0002\u0002\u043b\u043d\u0007z\u0002\u0002\u043c\u043b",
    "\u0003\u0002\u0002\u0002\u043c\u043d\u0003\u0002\u0002\u0002\u043d\u043e",
    "\u0003\u0002\u0002\u0002\u043e\u0440\u0007,\u0002\u0002\u043f\u0441",
    "\u0005,\u0017\u0002\u0440\u043f\u0003\u0002\u0002\u0002\u0440\u0441",
    "\u0003\u0002\u0002\u0002\u0441\u0442\u0003\u0002\u0002\u0002\u0442\u0444",
    "\u0005.\u0018\u0002\u0443\u0445\u00054\u001b\u0002\u0444\u0443\u0003",
    "\u0002\u0002\u0002\u0444\u0445\u0003\u0002\u0002\u0002\u0445\u0454\u0003",
    "\u0002\u0002\u0002\u0446\u0448\u0007z\u0002\u0002\u0447\u0446\u0003",
    "\u0002\u0002\u0002\u0447\u0448\u0003\u0002\u0002\u0002\u0448\u0449\u0003",
    "\u0002\u0002\u0002\u0449\u044b\u0007,\u0002\u0002\u044a\u044c\u0005",
    ",\u0017\u0002\u044b\u044a\u0003\u0002\u0002\u0002\u044b\u044c\u0003",
    "\u0002\u0002\u0002\u044c\u044d\u0003\u0002\u0002\u0002\u044d\u044e\u0007",
    "P\u0002\u0002\u044e\u044f\u0005\u00fe\u0080\u0002\u044f\u0451\u0007",
    "Q\u0002\u0002\u0450\u0452\u00054\u001b\u0002\u0451\u0450\u0003\u0002",
    "\u0002\u0002\u0451\u0452\u0003\u0002\u0002\u0002\u0452\u0454\u0003\u0002",
    "\u0002\u0002\u0453\u043c\u0003\u0002\u0002\u0002\u0453\u0447\u0003\u0002",
    "\u0002\u0002\u0454+\u0003\u0002\u0002\u0002\u0455\u0456\u0007P\u0002",
    "\u0002\u0456\u0457\u0005\"\u0012\u0002\u0457\u0458\u0007Q\u0002\u0002",
    "\u0458-\u0003\u0002\u0002\u0002\u0459\u045b\u0005\u0094K\u0002\u045a",
    "\u045c\u00050\u0019\u0002\u045b\u045a\u0003\u0002\u0002\u0002\u045b",
    "\u045c\u0003\u0002\u0002\u0002\u045c/\u0003\u0002\u0002\u0002\u045d",
    "\u045f\u0005\u00f4{\u0002\u045e\u0460\u00050\u0019\u0002\u045f\u045e",
    "\u0003\u0002\u0002\u0002\u045f\u0460\u0003\u0002\u0002\u0002\u0460\u0463",
    "\u0003\u0002\u0002\u0002\u0461\u0463\u00052\u001a\u0002\u0462\u045d",
    "\u0003\u0002\u0002\u0002\u0462\u0461\u0003\u0002\u0002\u0002\u04631",
    "\u0003\u0002\u0002\u0002\u0464\u0465\b\u001a\u0001\u0002\u0465\u0466",
    "\u0007R\u0002\u0002\u0466\u0467\u0005X-\u0002\u0467\u0469\u0007S\u0002",
    "\u0002\u0468\u046a\u0005\u00d0i\u0002\u0469\u0468\u0003\u0002\u0002",
    "\u0002\u0469\u046a\u0003\u0002\u0002\u0002\u046a\u0474\u0003\u0002\u0002",
    "\u0002\u046b\u046c\f\u0003\u0002\u0002\u046c\u046d\u0007R\u0002\u0002",
    "\u046d\u046e\u0005Z.\u0002\u046e\u0470\u0007S\u0002\u0002\u046f\u0471",
    "\u0005\u00d0i\u0002\u0470\u046f\u0003\u0002\u0002\u0002\u0470\u0471",
    "\u0003\u0002\u0002\u0002\u0471\u0473\u0003\u0002\u0002\u0002\u0472\u046b",
    "\u0003\u0002\u0002\u0002\u0473\u0476\u0003\u0002\u0002\u0002\u0474\u0472",
    "\u0003\u0002\u0002\u0002\u0474\u0475\u0003\u0002\u0002\u0002\u04753",
    "\u0003\u0002\u0002\u0002\u0476\u0474\u0003\u0002\u0002\u0002\u0477\u0479",
    "\u0007P\u0002\u0002\u0478\u047a\u0005\"\u0012\u0002\u0479\u0478\u0003",
    "\u0002\u0002\u0002\u0479\u047a\u0003\u0002\u0002\u0002\u047a\u047b\u0003",
    "\u0002\u0002\u0002\u047b\u047e\u0007Q\u0002\u0002\u047c\u047e\u0005",
    "\u011c\u008f\u0002\u047d\u0477\u0003\u0002\u0002\u0002\u047d\u047c\u0003",
    "\u0002\u0002\u0002\u047e5\u0003\u0002\u0002\u0002\u047f\u0481\u0007",
    "z\u0002\u0002\u0480\u047f\u0003\u0002\u0002\u0002\u0480\u0481\u0003",
    "\u0002\u0002\u0002\u0481\u0482\u0003\u0002\u0002\u0002\u0482\u0483\u0007",
    "\u0017\u0002\u0002\u0483\u048c\u0005:\u001e\u0002\u0484\u0486\u0007",
    "z\u0002\u0002\u0485\u0484\u0003\u0002\u0002\u0002\u0485\u0486\u0003",
    "\u0002\u0002\u0002\u0486\u0487\u0003\u0002\u0002\u0002\u0487\u0488\u0007",
    "\u0017\u0002\u0002\u0488\u0489\u0007R\u0002\u0002\u0489\u048a\u0007",
    "S\u0002\u0002\u048a\u048c\u0005:\u001e\u0002\u048b\u0480\u0003\u0002",
    "\u0002\u0002\u048b\u0485\u0003\u0002\u0002\u0002\u048c7\u0003\u0002",
    "\u0002\u0002\u048d\u048e\u0007-\u0002\u0002\u048e\u048f\u0007P\u0002",
    "\u0002\u048f\u0490\u0005X-\u0002\u0490\u0491\u0007Q\u0002\u0002\u0491",
    "9\u0003\u0002\u0002\u0002\u0492\u0499\u0005&\u0014\u0002\u0493\u0494",
    "\u0007P\u0002\u0002\u0494\u0495\u0005\u00fe\u0080\u0002\u0495\u0496",
    "\u0007Q\u0002\u0002\u0496\u0497\u0005:\u001e\u0002\u0497\u0499\u0003",
    "\u0002\u0002\u0002\u0498\u0492\u0003\u0002\u0002\u0002\u0498\u0493\u0003",
    "\u0002\u0002\u0002\u0499;\u0003\u0002\u0002\u0002\u049a\u049b\b\u001f",
    "\u0001\u0002\u049b\u049c\u0005:\u001e\u0002\u049c\u04a5\u0003\u0002",
    "\u0002\u0002\u049d\u049e\f\u0004\u0002\u0002\u049e\u049f\u0007}\u0002",
    "\u0002\u049f\u04a4\u0005:\u001e\u0002\u04a0\u04a1\f\u0003\u0002\u0002",
    "\u04a1\u04a2\u0007v\u0002\u0002\u04a2\u04a4\u0005:\u001e\u0002\u04a3",
    "\u049d\u0003\u0002\u0002\u0002\u04a3\u04a0\u0003\u0002\u0002\u0002\u04a4",
    "\u04a7\u0003\u0002\u0002\u0002\u04a5\u04a3\u0003\u0002\u0002\u0002\u04a5",
    "\u04a6\u0003\u0002\u0002\u0002\u04a6=\u0003\u0002\u0002\u0002\u04a7",
    "\u04a5\u0003\u0002\u0002\u0002\u04a8\u04a9\b \u0001\u0002\u04a9\u04aa",
    "\u0005<\u001f\u0002\u04aa\u04b6\u0003\u0002\u0002\u0002\u04ab\u04ac",
    "\f\u0005\u0002\u0002\u04ac\u04ad\u0007X\u0002\u0002\u04ad\u04b5\u0005",
    "<\u001f\u0002\u04ae\u04af\f\u0004\u0002\u0002\u04af\u04b0\u0007Y\u0002",
    "\u0002\u04b0\u04b5\u0005<\u001f\u0002\u04b1\u04b2\f\u0003\u0002\u0002",
    "\u04b2\u04b3\u0007Z\u0002\u0002\u04b3\u04b5\u0005<\u001f\u0002\u04b4",
    "\u04ab\u0003\u0002\u0002\u0002\u04b4\u04ae\u0003\u0002\u0002\u0002\u04b4",
    "\u04b1\u0003\u0002\u0002\u0002\u04b5\u04b8\u0003\u0002\u0002\u0002\u04b6",
    "\u04b4\u0003\u0002\u0002\u0002\u04b6\u04b7\u0003\u0002\u0002\u0002\u04b7",
    "?\u0003\u0002\u0002\u0002\u04b8\u04b6\u0003\u0002\u0002\u0002\u04b9",
    "\u04ba\b!\u0001\u0002\u04ba\u04bb\u0005> \u0002\u04bb\u04c4\u0003\u0002",
    "\u0002\u0002\u04bc\u04bd\f\u0004\u0002\u0002\u04bd\u04be\u0007V\u0002",
    "\u0002\u04be\u04c3\u0005> \u0002\u04bf\u04c0\f\u0003\u0002\u0002\u04c0",
    "\u04c1\u0007W\u0002\u0002\u04c1\u04c3\u0005> \u0002\u04c2\u04bc\u0003",
    "\u0002\u0002\u0002\u04c2\u04bf\u0003\u0002\u0002\u0002\u04c3\u04c6\u0003",
    "\u0002\u0002\u0002\u04c4\u04c2\u0003\u0002\u0002\u0002\u04c4\u04c5\u0003",
    "\u0002\u0002\u0002\u04c5A\u0003\u0002\u0002\u0002\u04c6\u04c4\u0003",
    "\u0002\u0002\u0002\u04c7\u04c8\b\"\u0001\u0002\u04c8\u04c9\u0005@!\u0002",
    "\u04c9\u04d3\u0003\u0002\u0002\u0002\u04ca\u04cb\f\u0004\u0002\u0002",
    "\u04cb\u04cc\u0007k\u0002\u0002\u04cc\u04d2\u0005@!\u0002\u04cd\u04ce",
    "\f\u0003\u0002\u0002\u04ce\u04cf\u0005\u0300\u0181\u0002\u04cf\u04d0",
    "\u0005@!\u0002\u04d0\u04d2\u0003\u0002\u0002\u0002\u04d1\u04ca\u0003",
    "\u0002\u0002\u0002\u04d1\u04cd\u0003\u0002\u0002\u0002\u04d2\u04d5\u0003",
    "\u0002\u0002\u0002\u04d3\u04d1\u0003\u0002\u0002\u0002\u04d3\u04d4\u0003",
    "\u0002\u0002\u0002\u04d4C\u0003\u0002\u0002\u0002\u04d5\u04d3\u0003",
    "\u0002\u0002\u0002\u04d6\u04d7\b#\u0001\u0002\u04d7\u04d8\u0005B\"\u0002",
    "\u04d8\u04e7\u0003\u0002\u0002\u0002\u04d9\u04da\f\u0006\u0002\u0002",
    "\u04da\u04db\u0007a\u0002\u0002\u04db\u04e6\u0005B\"\u0002\u04dc\u04dd",
    "\f\u0005\u0002\u0002\u04dd\u04de\u0007b\u0002\u0002\u04de\u04e6\u0005",
    "B\"\u0002\u04df\u04e0\f\u0004\u0002\u0002\u04e0\u04e1\u0007o\u0002\u0002",
    "\u04e1\u04e6\u0005B\"\u0002\u04e2\u04e3\f\u0003\u0002\u0002\u04e3\u04e4",
    "\u0007p\u0002\u0002\u04e4\u04e6\u0005B\"\u0002\u04e5\u04d9\u0003\u0002",
    "\u0002\u0002\u04e5\u04dc\u0003\u0002\u0002\u0002\u04e5\u04df\u0003\u0002",
    "\u0002\u0002\u04e5\u04e2\u0003\u0002\u0002\u0002\u04e6\u04e9\u0003\u0002",
    "\u0002\u0002\u04e7\u04e5\u0003\u0002\u0002\u0002\u04e7\u04e8\u0003\u0002",
    "\u0002\u0002\u04e8E\u0003\u0002\u0002\u0002\u04e9\u04e7\u0003\u0002",
    "\u0002\u0002\u04ea\u04eb\b$\u0001\u0002\u04eb\u04ec\u0005D#\u0002\u04ec",
    "\u04f5\u0003\u0002\u0002\u0002\u04ed\u04ee\f\u0004\u0002\u0002\u04ee",
    "\u04ef\u0007m\u0002\u0002\u04ef\u04f4\u0005D#\u0002\u04f0\u04f1\f\u0003",
    "\u0002\u0002\u04f1\u04f2\u0007n\u0002\u0002\u04f2\u04f4\u0005D#\u0002",
    "\u04f3\u04ed\u0003\u0002\u0002\u0002\u04f3\u04f0\u0003\u0002\u0002\u0002",
    "\u04f4\u04f7\u0003\u0002\u0002\u0002\u04f5\u04f3\u0003\u0002\u0002\u0002",
    "\u04f5\u04f6\u0003\u0002\u0002\u0002\u04f6G\u0003\u0002\u0002\u0002",
    "\u04f7\u04f5\u0003\u0002\u0002\u0002\u04f8\u04f9\b%\u0001\u0002\u04f9",
    "\u04fa\u0005F$\u0002\u04fa\u0500\u0003\u0002\u0002\u0002\u04fb\u04fc",
    "\f\u0003\u0002\u0002\u04fc\u04fd\u0007\\\u0002\u0002\u04fd\u04ff\u0005",
    "F$\u0002\u04fe\u04fb\u0003\u0002\u0002\u0002\u04ff\u0502\u0003\u0002",
    "\u0002\u0002\u0500\u04fe\u0003\u0002\u0002\u0002\u0500\u0501\u0003\u0002",
    "\u0002\u0002\u0501I\u0003\u0002\u0002\u0002\u0502\u0500\u0003\u0002",
    "\u0002\u0002\u0503\u0504\b&\u0001\u0002\u0504\u0505\u0005H%\u0002\u0505",
    "\u050b\u0003\u0002\u0002\u0002\u0506\u0507\f\u0003\u0002\u0002\u0507",
    "\u0508\u0007[\u0002\u0002\u0508\u050a\u0005H%\u0002\u0509\u0506\u0003",
    "\u0002\u0002\u0002\u050a\u050d\u0003\u0002\u0002\u0002\u050b\u0509\u0003",
    "\u0002\u0002\u0002\u050b\u050c\u0003\u0002\u0002\u0002\u050cK\u0003",
    "\u0002\u0002\u0002\u050d\u050b\u0003\u0002\u0002\u0002\u050e\u050f\b",
    "\'\u0001\u0002\u050f\u0510\u0005J&\u0002\u0510\u0516\u0003\u0002\u0002",
    "\u0002\u0511\u0512\f\u0003\u0002\u0002\u0512\u0513\u0007]\u0002\u0002",
    "\u0513\u0515\u0005J&\u0002\u0514\u0511\u0003\u0002\u0002\u0002\u0515",
    "\u0518\u0003\u0002\u0002\u0002\u0516\u0514\u0003\u0002\u0002\u0002\u0516",
    "\u0517\u0003\u0002\u0002\u0002\u0517M\u0003\u0002\u0002\u0002\u0518",
    "\u0516\u0003\u0002\u0002\u0002\u0519\u051a\b(\u0001\u0002\u051a\u051b",
    "\u0005L\'\u0002\u051b\u0521\u0003\u0002\u0002\u0002\u051c\u051d\f\u0003",
    "\u0002\u0002\u051d\u051e\u0007q\u0002\u0002\u051e\u0520\u0005L\'\u0002",
    "\u051f\u051c\u0003\u0002\u0002\u0002\u0520\u0523\u0003\u0002\u0002\u0002",
    "\u0521\u051f\u0003\u0002\u0002\u0002\u0521\u0522\u0003\u0002\u0002\u0002",
    "\u0522O\u0003\u0002\u0002\u0002\u0523\u0521\u0003\u0002\u0002\u0002",
    "\u0524\u0525\b)\u0001\u0002\u0525\u0526\u0005N(\u0002\u0526\u052c\u0003",
    "\u0002\u0002\u0002\u0527\u0528\f\u0003\u0002\u0002\u0528\u0529\u0007",
    "r\u0002\u0002\u0529\u052b\u0005N(\u0002\u052a\u0527\u0003\u0002\u0002",
    "\u0002\u052b\u052e\u0003\u0002\u0002\u0002\u052c\u052a\u0003\u0002\u0002",
    "\u0002\u052c\u052d\u0003\u0002\u0002\u0002\u052dQ\u0003\u0002\u0002",
    "\u0002\u052e\u052c\u0003\u0002\u0002\u0002\u052f\u0537\u0005P)\u0002",
    "\u0530\u0531\u0005P)\u0002\u0531\u0532\u0007x\u0002\u0002\u0532\u0533",
    "\u0005X-\u0002\u0533\u0534\u0007y\u0002\u0002\u0534\u0535\u0005T+\u0002",
    "\u0535\u0537\u0003\u0002\u0002\u0002\u0536\u052f\u0003\u0002\u0002\u0002",
    "\u0536\u0530\u0003\u0002\u0002\u0002\u0537S\u0003\u0002\u0002\u0002",
    "\u0538\u053f\u0005R*\u0002\u0539\u053a\u0005P)\u0002\u053a\u053b\u0005",
    "V,\u0002\u053b\u053c\u0005\u0118\u008d\u0002\u053c\u053f\u0003\u0002",
    "\u0002\u0002\u053d\u053f\u0005\u0178\u00bd\u0002\u053e\u0538\u0003\u0002",
    "\u0002\u0002\u053e\u0539\u0003\u0002\u0002\u0002\u053e\u053d\u0003\u0002",
    "\u0002\u0002\u053fU\u0003\u0002\u0002\u0002\u0540\u054c\u0007`\u0002",
    "\u0002\u0541\u054c\u0007e\u0002\u0002\u0542\u054c\u0007f\u0002\u0002",
    "\u0543\u054c\u0007g\u0002\u0002\u0544\u054c\u0007c\u0002\u0002\u0545",
    "\u054c\u0007d\u0002\u0002\u0546\u054c\u0005\u0302\u0182\u0002\u0547",
    "\u054c\u0007l\u0002\u0002\u0548\u054c\u0007i\u0002\u0002\u0549\u054c",
    "\u0007h\u0002\u0002\u054a\u054c\u0007j\u0002\u0002\u054b\u0540\u0003",
    "\u0002\u0002\u0002\u054b\u0541\u0003\u0002\u0002\u0002\u054b\u0542\u0003",
    "\u0002\u0002\u0002\u054b\u0543\u0003\u0002\u0002\u0002\u054b\u0544\u0003",
    "\u0002\u0002\u0002\u054b\u0545\u0003\u0002\u0002\u0002\u054b\u0546\u0003",
    "\u0002\u0002\u0002\u054b\u0547\u0003\u0002\u0002\u0002\u054b\u0548\u0003",
    "\u0002\u0002\u0002\u054b\u0549\u0003\u0002\u0002\u0002\u054b\u054a\u0003",
    "\u0002\u0002\u0002\u054cW\u0003\u0002\u0002\u0002\u054d\u054e\b-\u0001",
    "\u0002\u054e\u054f\u0005T+\u0002\u054f\u0555\u0003\u0002\u0002\u0002",
    "\u0550\u0551\f\u0003\u0002\u0002\u0551\u0552\u0007u\u0002\u0002\u0552",
    "\u0554\u0005T+\u0002\u0553\u0550\u0003\u0002\u0002\u0002\u0554\u0557",
    "\u0003\u0002\u0002\u0002\u0555\u0553\u0003\u0002\u0002\u0002\u0555\u0556",
    "\u0003\u0002\u0002\u0002\u0556Y\u0003\u0002\u0002\u0002\u0557\u0555",
    "\u0003\u0002\u0002\u0002\u0558\u0559\u0005R*\u0002\u0559[\u0003\u0002",
    "\u0002\u0002\u055a\u0575\u0005^0\u0002\u055b\u055d\u0005\u00d0i\u0002",
    "\u055c\u055b\u0003\u0002\u0002\u0002\u055c\u055d\u0003\u0002\u0002\u0002",
    "\u055d\u055e\u0003\u0002\u0002\u0002\u055e\u0575\u0005`1\u0002\u055f",
    "\u0561\u0005\u00d0i\u0002\u0560\u055f\u0003\u0002\u0002\u0002\u0560",
    "\u0561\u0003\u0002\u0002\u0002\u0561\u0562\u0003\u0002\u0002\u0002\u0562",
    "\u0575\u0005b2\u0002\u0563\u0565\u0005\u00d0i\u0002\u0564\u0563\u0003",
    "\u0002\u0002\u0002\u0564\u0565\u0003\u0002\u0002\u0002\u0565\u0566\u0003",
    "\u0002\u0002\u0002\u0566\u0575\u0005f4\u0002\u0567\u0569\u0005\u00d0",
    "i\u0002\u0568\u0567\u0003\u0002\u0002\u0002\u0568\u0569\u0003\u0002",
    "\u0002\u0002\u0569\u056a\u0003\u0002\u0002\u0002\u056a\u0575\u0005j",
    "6\u0002\u056b\u056d\u0005\u00d0i\u0002\u056c\u056b\u0003\u0002\u0002",
    "\u0002\u056c\u056d\u0003\u0002\u0002\u0002\u056d\u056e\u0003\u0002\u0002",
    "\u0002\u056e\u0575\u0005r:\u0002\u056f\u0575\u0005t;\u0002\u0570\u0572",
    "\u0005\u00d0i\u0002\u0571\u0570\u0003\u0002\u0002\u0002\u0571\u0572",
    "\u0003\u0002\u0002\u0002\u0572\u0573\u0003\u0002\u0002\u0002\u0573\u0575",
    "\u0005\u016e\u00b8\u0002\u0574\u055a\u0003\u0002\u0002\u0002\u0574\u055c",
    "\u0003\u0002\u0002\u0002\u0574\u0560\u0003\u0002\u0002\u0002\u0574\u0564",
    "\u0003\u0002\u0002\u0002\u0574\u0568\u0003\u0002\u0002\u0002\u0574\u056c",
    "\u0003\u0002\u0002\u0002\u0574\u056f\u0003\u0002\u0002\u0002\u0574\u0571",
    "\u0003\u0002\u0002\u0002\u0575]\u0003\u0002\u0002\u0002\u0576\u0578",
    "\u0005\u00d0i\u0002\u0577\u0576\u0003\u0002\u0002\u0002\u0577\u0578",
    "\u0003\u0002\u0002\u0002\u0578\u0579\u0003\u0002\u0002\u0002\u0579\u057a",
    "\u0007\u007f\u0002\u0002\u057a\u057b\u0007y\u0002\u0002\u057b\u058b",
    "\u0005\\/\u0002\u057c\u057e\u0005\u00d0i\u0002\u057d\u057c\u0003\u0002",
    "\u0002\u0002\u057d\u057e\u0003\u0002\u0002\u0002\u057e\u057f\u0003\u0002",
    "\u0002\u0002\u057f\u0580\u0007\u000b\u0002\u0002\u0580\u0581\u0005Z",
    ".\u0002\u0581\u0582\u0007y\u0002\u0002\u0582\u0583\u0005\\/\u0002\u0583",
    "\u058b\u0003\u0002\u0002\u0002\u0584\u0586\u0005\u00d0i\u0002\u0585",
    "\u0584\u0003\u0002\u0002\u0002\u0585\u0586\u0003\u0002\u0002\u0002\u0586",
    "\u0587\u0003\u0002\u0002\u0002\u0587\u0588\u0007\u0016\u0002\u0002\u0588",
    "\u0589\u0007y\u0002\u0002\u0589\u058b\u0005\\/\u0002\u058a\u0577\u0003",
    "\u0002\u0002\u0002\u058a\u057d\u0003\u0002\u0002\u0002\u058a\u0585\u0003",
    "\u0002\u0002\u0002\u058b_\u0003\u0002\u0002\u0002\u058c\u058e\u0005",
    "X-\u0002\u058d\u058c\u0003\u0002\u0002\u0002\u058d\u058e\u0003\u0002",
    "\u0002\u0002\u058e\u058f\u0003\u0002\u0002\u0002\u058f\u0590\u0007{",
    "\u0002\u0002\u0590a\u0003\u0002\u0002\u0002\u0591\u0593\u0007T\u0002",
    "\u0002\u0592\u0594\u0005d3\u0002\u0593\u0592\u0003\u0002\u0002\u0002",
    "\u0593\u0594\u0003\u0002\u0002\u0002\u0594\u0595\u0003\u0002\u0002\u0002",
    "\u0595\u0596\u0007U\u0002\u0002\u0596c\u0003\u0002\u0002\u0002\u0597",
    "\u0598\b3\u0001\u0002\u0598\u0599\u0005\\/\u0002\u0599\u059e\u0003\u0002",
    "\u0002\u0002\u059a\u059b\f\u0003\u0002\u0002\u059b\u059d\u0005\\/\u0002",
    "\u059c\u059a\u0003\u0002\u0002\u0002\u059d\u05a0\u0003\u0002\u0002\u0002",
    "\u059e\u059c\u0003\u0002\u0002\u0002\u059e\u059f\u0003\u0002\u0002\u0002",
    "\u059fe\u0003\u0002\u0002\u0002\u05a0\u059e\u0003\u0002\u0002\u0002",
    "\u05a1\u05a2\u0007&\u0002\u0002\u05a2\u05a3\u0007P\u0002\u0002\u05a3",
    "\u05a4\u0005h5\u0002\u05a4\u05a5\u0007Q\u0002\u0002\u05a5\u05a6\u0005",
    "\\/\u0002\u05a6\u05b6\u0003\u0002\u0002\u0002\u05a7\u05a8\u0007&\u0002",
    "\u0002\u05a8\u05a9\u0007P\u0002\u0002\u05a9\u05aa\u0005h5\u0002\u05aa",
    "\u05ab\u0007Q\u0002\u0002\u05ab\u05ac\u0005\\/\u0002\u05ac\u05ad\u0007",
    "\u001b\u0002\u0002\u05ad\u05ae\u0005\\/\u0002\u05ae\u05b6\u0003\u0002",
    "\u0002\u0002\u05af\u05b0\u0007>\u0002\u0002\u05b0\u05b1\u0007P\u0002",
    "\u0002\u05b1\u05b2\u0005h5\u0002\u05b2\u05b3\u0007Q\u0002\u0002\u05b3",
    "\u05b4\u0005\\/\u0002\u05b4\u05b6\u0003\u0002\u0002\u0002\u05b5\u05a1",
    "\u0003\u0002\u0002\u0002\u05b5\u05a7\u0003\u0002\u0002\u0002\u05b5\u05af",
    "\u0003\u0002\u0002\u0002\u05b6g\u0003\u0002\u0002\u0002\u05b7\u05c8",
    "\u0005X-\u0002\u05b8\u05ba\u0005\u00d0i\u0002\u05b9\u05b8\u0003\u0002",
    "\u0002\u0002\u05b9\u05ba\u0003\u0002\u0002\u0002\u05ba\u05bb\u0003\u0002",
    "\u0002\u0002\u05bb\u05bc\u0005\u0088E\u0002\u05bc\u05bd\u0005\u00ea",
    "v\u0002\u05bd\u05be\u0007`\u0002\u0002\u05be\u05bf\u0005\u0118\u008d",
    "\u0002\u05bf\u05c8\u0003\u0002\u0002\u0002\u05c0\u05c2\u0005\u00d0i",
    "\u0002\u05c1\u05c0\u0003\u0002\u0002\u0002\u05c1\u05c2\u0003\u0002\u0002",
    "\u0002\u05c2\u05c3\u0003\u0002\u0002\u0002\u05c3\u05c4\u0005\u0088E",
    "\u0002\u05c4\u05c5\u0005\u00eav\u0002\u05c5\u05c6\u0005\u011c\u008f",
    "\u0002\u05c6\u05c8\u0003\u0002\u0002\u0002\u05c7\u05b7\u0003\u0002\u0002",
    "\u0002\u05c7\u05b9\u0003\u0002\u0002\u0002\u05c7\u05c1\u0003\u0002\u0002",
    "\u0002\u05c8i\u0003\u0002\u0002\u0002\u05c9\u05ca\u0007O\u0002\u0002",
    "\u05ca\u05cb\u0007P\u0002\u0002\u05cb\u05cc\u0005h5\u0002\u05cc\u05cd",
    "\u0007Q\u0002\u0002\u05cd\u05ce\u0005\\/\u0002\u05ce\u05ed\u0003\u0002",
    "\u0002\u0002\u05cf\u05d0\u0007\u0018\u0002\u0002\u05d0\u05d1\u0005\\",
    "/\u0002\u05d1\u05d2\u0007O\u0002\u0002\u05d2\u05d3\u0007P\u0002\u0002",
    "\u05d3\u05d4\u0005X-\u0002\u05d4\u05d5\u0007Q\u0002\u0002\u05d5\u05d6",
    "\u0007{\u0002\u0002\u05d6\u05ed\u0003\u0002\u0002\u0002\u05d7\u05d8",
    "\u0007#\u0002\u0002\u05d8\u05d9\u0007P\u0002\u0002\u05d9\u05db\u0005",
    "l7\u0002\u05da\u05dc\u0005h5\u0002\u05db\u05da\u0003\u0002\u0002\u0002",
    "\u05db\u05dc\u0003\u0002\u0002\u0002\u05dc\u05dd\u0003\u0002\u0002\u0002",
    "\u05dd\u05df\u0007{\u0002\u0002\u05de\u05e0\u0005X-\u0002\u05df\u05de",
    "\u0003\u0002\u0002\u0002\u05df\u05e0\u0003\u0002\u0002\u0002\u05e0\u05e1",
    "\u0003\u0002\u0002\u0002\u05e1\u05e2\u0007Q\u0002\u0002\u05e2\u05e3",
    "\u0005\\/\u0002\u05e3\u05ed\u0003\u0002\u0002\u0002\u05e4\u05e5\u0007",
    "#\u0002\u0002\u05e5\u05e6\u0007P\u0002\u0002\u05e6\u05e7\u0005n8\u0002",
    "\u05e7\u05e8\u0007y\u0002\u0002\u05e8\u05e9\u0005p9\u0002\u05e9\u05ea",
    "\u0007Q\u0002\u0002\u05ea\u05eb\u0005\\/\u0002\u05eb\u05ed\u0003\u0002",
    "\u0002\u0002\u05ec\u05c9\u0003\u0002\u0002\u0002\u05ec\u05cf\u0003\u0002",
    "\u0002\u0002\u05ec\u05d7\u0003\u0002\u0002\u0002\u05ec\u05e4\u0003\u0002",
    "\u0002\u0002\u05edk\u0003\u0002\u0002\u0002\u05ee\u05f1\u0005`1\u0002",
    "\u05ef\u05f1\u0005~@\u0002\u05f0\u05ee\u0003\u0002\u0002\u0002\u05f0",
    "\u05ef\u0003\u0002\u0002\u0002\u05f1m\u0003\u0002\u0002\u0002\u05f2",
    "\u05f4\u0005\u00d0i\u0002\u05f3\u05f2\u0003\u0002\u0002\u0002\u05f3",
    "\u05f4\u0003\u0002\u0002\u0002\u05f4\u05f5\u0003\u0002\u0002\u0002\u05f5",
    "\u05f6\u0005\u0088E\u0002\u05f6\u05f7\u0005\u00eav\u0002\u05f7o\u0003",
    "\u0002\u0002\u0002\u05f8\u05fb\u0005X-\u0002\u05f9\u05fb\u0005\u011c",
    "\u008f\u0002\u05fa\u05f8\u0003\u0002\u0002\u0002\u05fa\u05f9\u0003\u0002",
    "\u0002\u0002\u05fbq\u0003\u0002\u0002\u0002\u05fc\u05fd\u0007\n\u0002",
    "\u0002\u05fd\u060d\u0007{\u0002\u0002\u05fe\u05ff\u0007\u0014\u0002",
    "\u0002\u05ff\u060d\u0007{\u0002\u0002\u0600\u0602\u00076\u0002\u0002",
    "\u0601\u0603\u0005X-\u0002\u0602\u0601\u0003\u0002\u0002\u0002\u0602",
    "\u0603\u0003\u0002\u0002\u0002\u0603\u0604\u0003\u0002\u0002\u0002\u0604",
    "\u060d\u0007{\u0002\u0002\u0605\u0606\u00076\u0002\u0002\u0606\u0607",
    "\u0005\u011c\u008f\u0002\u0607\u0608\u0007{\u0002\u0002\u0608\u060d",
    "\u0003\u0002\u0002\u0002\u0609\u060a\u0007%\u0002\u0002\u060a\u060b",
    "\u0007\u007f\u0002\u0002\u060b\u060d\u0007{\u0002\u0002\u060c\u05fc",
    "\u0003\u0002\u0002\u0002\u060c\u05fe\u0003\u0002\u0002\u0002\u060c\u0600",
    "\u0003\u0002\u0002\u0002\u060c\u0605\u0003\u0002\u0002\u0002\u060c\u0609",
    "\u0003\u0002\u0002\u0002\u060ds\u0003\u0002\u0002\u0002\u060e\u060f",
    "\u0005z>\u0002\u060fu\u0003\u0002\u0002\u0002\u0610\u0611\b<\u0001\u0002",
    "\u0611\u0612\u0005x=\u0002\u0612\u0617\u0003\u0002\u0002\u0002\u0613",
    "\u0614\f\u0003\u0002\u0002\u0614\u0616\u0005x=\u0002\u0615\u0613\u0003",
    "\u0002\u0002\u0002\u0616\u0619\u0003\u0002\u0002\u0002\u0617\u0615\u0003",
    "\u0002\u0002\u0002\u0617\u0618\u0003\u0002\u0002\u0002\u0618w\u0003",
    "\u0002\u0002\u0002\u0619\u0617\u0003\u0002\u0002\u0002\u061a\u0624\u0005",
    "z>\u0002\u061b\u0624\u0005\u0110\u0089\u0002\u061c\u0624\u0005\u0156",
    "\u00ac\u0002\u061d\u0624\u0005\u016a\u00b6\u0002\u061e\u0624\u0005\u016c",
    "\u00b7\u0002\u061f\u0624\u0005\u00ceh\u0002\u0620\u0624\u0005\u00b6",
    "\\\u0002\u0621\u0624\u0005\u0082B\u0002\u0622\u0624\u0005\u0084C\u0002",
    "\u0623\u061a\u0003\u0002\u0002\u0002\u0623\u061b\u0003\u0002\u0002\u0002",
    "\u0623\u061c\u0003\u0002\u0002\u0002\u0623\u061d\u0003\u0002\u0002\u0002",
    "\u0623\u061e\u0003\u0002\u0002\u0002\u0623\u061f\u0003\u0002\u0002\u0002",
    "\u0623\u0620\u0003\u0002\u0002\u0002\u0623\u0621\u0003\u0002\u0002\u0002",
    "\u0623\u0622\u0003\u0002\u0002\u0002\u0624y\u0003\u0002\u0002\u0002",
    "\u0625\u062e\u0005~@\u0002\u0626\u062e\u0005\u00ccg\u0002\u0627\u062e",
    "\u0005\u00c4c\u0002\u0628\u062e\u0005\u00c8e\u0002\u0629\u062e\u0005",
    "\u00caf\u0002\u062a\u062e\u0005\u0080A\u0002\u062b\u062e\u0005|?\u0002",
    "\u062c\u062e\u0005\u00a6T\u0002\u062d\u0625\u0003\u0002\u0002\u0002",
    "\u062d\u0626\u0003\u0002\u0002\u0002\u062d\u0627\u0003\u0002\u0002\u0002",
    "\u062d\u0628\u0003\u0002\u0002\u0002\u062d\u0629\u0003\u0002\u0002\u0002",
    "\u062d\u062a\u0003\u0002\u0002\u0002\u062d\u062b\u0003\u0002\u0002\u0002",
    "\u062d\u062c\u0003\u0002\u0002\u0002\u062e{\u0003\u0002\u0002\u0002",
    "\u062f\u0630\u0007J\u0002\u0002\u0630\u0632\u0007\u007f\u0002\u0002",
    "\u0631\u0633\u0005\u00d0i\u0002\u0632\u0631\u0003\u0002\u0002\u0002",
    "\u0632\u0633\u0003\u0002\u0002\u0002\u0633\u0634\u0003\u0002\u0002\u0002",
    "\u0634\u0635\u0007`\u0002\u0002\u0635\u0636\u0005\u00fe\u0080\u0002",
    "\u0636\u0637\u0007{\u0002\u0002\u0637}\u0003\u0002\u0002\u0002\u0638",
    "\u063a\u0005\u0088E\u0002\u0639\u0638\u0003\u0002\u0002\u0002\u0639",
    "\u063a\u0003\u0002\u0002\u0002\u063a\u063c\u0003\u0002\u0002\u0002\u063b",
    "\u063d\u0005\u00e6t\u0002\u063c\u063b\u0003\u0002\u0002\u0002\u063c",
    "\u063d\u0003\u0002\u0002\u0002\u063d\u063e\u0003\u0002\u0002\u0002\u063e",
    "\u0647\u0007{\u0002\u0002\u063f\u0641\u0005\u00d0i\u0002\u0640\u0642",
    "\u0005\u0088E\u0002\u0641\u0640\u0003\u0002\u0002\u0002\u0641\u0642",
    "\u0003\u0002\u0002\u0002\u0642\u0643\u0003\u0002\u0002\u0002\u0643\u0644",
    "\u0005\u00e6t\u0002\u0644\u0645\u0007{\u0002\u0002\u0645\u0647\u0003",
    "\u0002\u0002\u0002\u0646\u0639\u0003\u0002\u0002\u0002\u0646\u063f\u0003",
    "\u0002\u0002\u0002\u0647\u007f\u0003\u0002\u0002\u0002\u0648\u0649\u0007",
    ";\u0002\u0002\u0649\u064a\u0007P\u0002\u0002\u064a\u064b\u0005Z.\u0002",
    "\u064b\u064c\u0007u\u0002\u0002\u064c\u064d\u0007\u0088\u0002\u0002",
    "\u064d\u064e\u0007Q\u0002\u0002\u064e\u064f\u0007{\u0002\u0002\u064f",
    "\u0081\u0003\u0002\u0002\u0002\u0650\u0651\u0007{\u0002\u0002\u0651",
    "\u0083\u0003\u0002\u0002\u0002\u0652\u0653\u0005\u00d0i\u0002\u0653",
    "\u0654\u0007{\u0002\u0002\u0654\u0085\u0003\u0002\u0002\u0002\u0655",
    "\u065c\u0005\u008aF\u0002\u0656\u065c\u0005\u0090I\u0002\u0657\u065c",
    "\u0005\u008cG\u0002\u0658\u065c\u0007$\u0002\u0002\u0659\u065c\u0007",
    "E\u0002\u0002\u065a\u065c\u0007\u0012\u0002\u0002\u065b\u0655\u0003",
    "\u0002\u0002\u0002\u065b\u0656\u0003\u0002\u0002\u0002\u065b\u0657\u0003",
    "\u0002\u0002\u0002\u065b\u0658\u0003\u0002\u0002\u0002\u065b\u0659\u0003",
    "\u0002\u0002\u0002\u065b\u065a\u0003\u0002\u0002\u0002\u065c\u0087\u0003",
    "\u0002\u0002\u0002\u065d\u065f\u0005\u0086D\u0002\u065e\u0660\u0005",
    "\u00d0i\u0002\u065f\u065e\u0003\u0002\u0002\u0002\u065f\u0660\u0003",
    "\u0002\u0002\u0002\u0660\u0665\u0003\u0002\u0002\u0002\u0661\u0662\u0005",
    "\u0086D\u0002\u0662\u0663\u0005\u0088E\u0002\u0663\u0665\u0003\u0002",
    "\u0002\u0002\u0664\u065d\u0003\u0002\u0002\u0002\u0664\u0661\u0003\u0002",
    "\u0002\u0002\u0665\u0089\u0003\u0002\u0002\u0002\u0666\u0667\t\u0004",
    "\u0002\u0002\u0667\u008b\u0003\u0002\u0002\u0002\u0668\u0669\t\u0005",
    "\u0002\u0002\u0669\u008d\u0003\u0002\u0002\u0002\u066a\u066b\u0007\u007f",
    "\u0002\u0002\u066b\u008f\u0003\u0002\u0002\u0002\u066c\u0670\u0005\u0092",
    "J\u0002\u066d\u0670\u0005\u0120\u0091\u0002\u066e\u0670\u0005\u00a2",
    "R\u0002\u066f\u066c\u0003\u0002\u0002\u0002\u066f\u066d\u0003\u0002",
    "\u0002\u0002\u066f\u066e\u0003\u0002\u0002\u0002\u0670\u0091\u0003\u0002",
    "\u0002\u0002\u0671\u0676\u0005\u0098M\u0002\u0672\u0676\u0005\u009e",
    "P\u0002\u0673\u0676\u0005\u0168\u00b5\u0002\u0674\u0676\u0005\u00f8",
    "}\u0002\u0675\u0671\u0003\u0002\u0002\u0002\u0675\u0672\u0003\u0002",
    "\u0002\u0002\u0675\u0673\u0003\u0002\u0002\u0002\u0675\u0674\u0003\u0002",
    "\u0002\u0002\u0676\u0093\u0003\u0002\u0002\u0002\u0677\u0679\u0005\u0090",
    "I\u0002\u0678\u067a\u0005\u00d0i\u0002\u0679\u0678\u0003\u0002\u0002",
    "\u0002\u0679\u067a\u0003\u0002\u0002\u0002\u067a\u067f\u0003\u0002\u0002",
    "\u0002\u067b\u067c\u0005\u0090I\u0002\u067c\u067d\u0005\u0094K\u0002",
    "\u067d\u067f\u0003\u0002\u0002\u0002\u067e\u0677\u0003\u0002\u0002\u0002",
    "\u067e\u067b\u0003\u0002\u0002\u0002\u067f\u0095\u0003\u0002\u0002\u0002",
    "\u0680\u0682\u0005\u0092J\u0002\u0681\u0683\u0005\u00d0i\u0002\u0682",
    "\u0681\u0003\u0002\u0002\u0002\u0682\u0683\u0003\u0002\u0002\u0002\u0683",
    "\u0688\u0003\u0002\u0002\u0002\u0684\u0685\u0005\u0092J\u0002\u0685",
    "\u0686\u0005\u0096L\u0002\u0686\u0688\u0003\u0002\u0002\u0002\u0687",
    "\u0680\u0003\u0002\u0002\u0002\u0687\u0684\u0003\u0002\u0002\u0002\u0688",
    "\u0097\u0003\u0002\u0002\u0002\u0689\u068b\u0005\f\u0007\u0002\u068a",
    "\u0689\u0003\u0002\u0002\u0002\u068a\u068b\u0003\u0002\u0002\u0002\u068b",
    "\u068c\u0003\u0002\u0002\u0002\u068c\u06a1\u0005\u009aN\u0002\u068d",
    "\u068e\u0005\f\u0007\u0002\u068e\u068f\u0007?\u0002\u0002\u068f\u0690",
    "\u0005\u015e\u00b0\u0002\u0690\u06a1\u0003\u0002\u0002\u0002\u0691\u06a1",
    "\u0007\r\u0002\u0002\u0692\u06a1\u0007\u000e\u0002\u0002\u0693\u06a1",
    "\u0007\u000f\u0002\u0002\u0694\u06a1\u0007N\u0002\u0002\u0695\u06a1",
    "\u0007\t\u0002\u0002\u0696\u06a1\u00077\u0002\u0002\u0697\u06a1\u0007",
    "(\u0002\u0002\u0698\u06a1\u0007)\u0002\u0002\u0699\u06a1\u00078\u0002",
    "\u0002\u069a\u06a1\u0007I\u0002\u0002\u069b\u06a1\u0007\"\u0002\u0002",
    "\u069c\u06a1\u0007\u0019\u0002\u0002\u069d\u06a1\u0007L\u0002\u0002",
    "\u069e\u06a1\u0007\b\u0002\u0002\u069f\u06a1\u0005\u009cO\u0002\u06a0",
    "\u068a\u0003\u0002\u0002\u0002\u06a0\u068d\u0003\u0002\u0002\u0002\u06a0",
    "\u0691\u0003\u0002\u0002\u0002\u06a0\u0692\u0003\u0002\u0002\u0002\u06a0",
    "\u0693\u0003\u0002\u0002\u0002\u06a0\u0694\u0003\u0002\u0002\u0002\u06a0",
    "\u0695\u0003\u0002\u0002\u0002\u06a0\u0696\u0003\u0002\u0002\u0002\u06a0",
    "\u0697\u0003\u0002\u0002\u0002\u06a0\u0698\u0003\u0002\u0002\u0002\u06a0",
    "\u0699\u0003\u0002\u0002\u0002\u06a0\u069a\u0003\u0002\u0002\u0002\u06a0",
    "\u069b\u0003\u0002\u0002\u0002\u06a0\u069c\u0003\u0002\u0002\u0002\u06a0",
    "\u069d\u0003\u0002\u0002\u0002\u06a0\u069e\u0003\u0002\u0002\u0002\u06a0",
    "\u069f\u0003\u0002\u0002\u0002\u06a1\u0099\u0003\u0002\u0002\u0002\u06a2",
    "\u06a7\u0005\u011e\u0090\u0002\u06a3\u06a7\u0005\u00a0Q\u0002\u06a4",
    "\u06a7\u0005\u008eH\u0002\u06a5\u06a7\u0005\u015e\u00b0\u0002\u06a6",
    "\u06a2\u0003\u0002\u0002\u0002\u06a6\u06a3\u0003\u0002\u0002\u0002\u06a6",
    "\u06a4\u0003\u0002\u0002\u0002\u06a6\u06a5\u0003\u0002\u0002\u0002\u06a7",
    "\u009b\u0003\u0002\u0002\u0002\u06a8\u06a9\u0007\u0015\u0002\u0002\u06a9",
    "\u06aa\u0007P\u0002\u0002\u06aa\u06ab\u0005X-\u0002\u06ab\u06ac\u0007",
    "Q\u0002\u0002\u06ac\u06b2\u0003\u0002\u0002\u0002\u06ad\u06ae\u0007",
    "\u0015\u0002\u0002\u06ae\u06af\u0007P\u0002\u0002\u06af\u06b0\u0007",
    "\b\u0002\u0002\u06b0\u06b2\u0007Q\u0002\u0002\u06b1\u06a8\u0003\u0002",
    "\u0002\u0002\u06b1\u06ad\u0003\u0002\u0002\u0002\u06b2\u009d\u0003\u0002",
    "\u0002\u0002\u06b3\u06b5\u0005\u0128\u0095\u0002\u06b4\u06b6\u0005\u00d0",
    "i\u0002\u06b5\u06b4\u0003\u0002\u0002\u0002\u06b5\u06b6\u0003\u0002",
    "\u0002\u0002\u06b6\u06b8\u0003\u0002\u0002\u0002\u06b7\u06b9\u0005\f",
    "\u0007\u0002\u06b8\u06b7\u0003\u0002\u0002\u0002\u06b8\u06b9\u0003\u0002",
    "\u0002\u0002\u06b9\u06ba\u0003\u0002\u0002\u0002\u06ba\u06bb\u0007\u007f",
    "\u0002\u0002\u06bb\u06cc\u0003\u0002\u0002\u0002\u06bc\u06bd\u0005\u0128",
    "\u0095\u0002\u06bd\u06be\u0005\u015e\u00b0\u0002\u06be\u06cc\u0003\u0002",
    "\u0002\u0002\u06bf\u06c0\u0005\u0128\u0095\u0002\u06c0\u06c2\u0005\f",
    "\u0007\u0002\u06c1\u06c3\u0007?\u0002\u0002\u06c2\u06c1\u0003\u0002",
    "\u0002\u0002\u06c2\u06c3\u0003\u0002\u0002\u0002\u06c3\u06c4\u0003\u0002",
    "\u0002\u0002\u06c4\u06c5\u0005\u015e\u00b0\u0002\u06c5\u06cc\u0003\u0002",
    "\u0002\u0002\u06c6\u06c8\u0007\u001c\u0002\u0002\u06c7\u06c9\u0005\f",
    "\u0007\u0002\u06c8\u06c7\u0003\u0002\u0002\u0002\u06c8\u06c9\u0003\u0002",
    "\u0002\u0002\u06c9\u06ca\u0003\u0002\u0002\u0002\u06ca\u06cc\u0007\u007f",
    "\u0002\u0002\u06cb\u06b3\u0003\u0002\u0002\u0002\u06cb\u06bc\u0003\u0002",
    "\u0002\u0002\u06cb\u06bf\u0003\u0002\u0002\u0002\u06cb\u06c6\u0003\u0002",
    "\u0002\u0002\u06cc\u009f\u0003\u0002\u0002\u0002\u06cd\u06ce\u0007\u007f",
    "\u0002\u0002\u06ce\u00a1\u0003\u0002\u0002\u0002\u06cf\u06d0\u0005\u00a4",
    "S\u0002\u06d0\u06d2\u0007T\u0002\u0002\u06d1\u06d3\u0005\u00acW\u0002",
    "\u06d2\u06d1\u0003\u0002\u0002\u0002\u06d2\u06d3\u0003\u0002\u0002\u0002",
    "\u06d3\u06d4\u0003\u0002\u0002\u0002\u06d4\u06d5\u0007U\u0002\u0002",
    "\u06d5\u06dd\u0003\u0002\u0002\u0002\u06d6\u06d7\u0005\u00a4S\u0002",
    "\u06d7\u06d8\u0007T\u0002\u0002\u06d8\u06d9\u0005\u00acW\u0002\u06d9",
    "\u06da\u0007u\u0002\u0002\u06da\u06db\u0007U\u0002\u0002\u06db\u06dd",
    "\u0003\u0002\u0002\u0002\u06dc\u06cf\u0003\u0002\u0002\u0002\u06dc\u06d6",
    "\u0003\u0002\u0002\u0002\u06dd\u00a3\u0003\u0002\u0002\u0002\u06de\u06e0",
    "\u0005\u00a8U\u0002\u06df\u06e1\u0005\u00d0i\u0002\u06e0\u06df\u0003",
    "\u0002\u0002\u0002\u06e0\u06e1\u0003\u0002\u0002\u0002\u06e1\u06e3\u0003",
    "\u0002\u0002\u0002\u06e2\u06e4\u0007\u007f\u0002\u0002\u06e3\u06e2\u0003",
    "\u0002\u0002\u0002\u06e3\u06e4\u0003\u0002\u0002\u0002\u06e4\u06e6\u0003",
    "\u0002\u0002\u0002\u06e5\u06e7\u0005\u00aaV\u0002\u06e6\u06e5\u0003",
    "\u0002\u0002\u0002\u06e6\u06e7\u0003\u0002\u0002\u0002\u06e7\u06f2\u0003",
    "\u0002\u0002\u0002\u06e8\u06ea\u0005\u00a8U\u0002\u06e9\u06eb\u0005",
    "\u00d0i\u0002\u06ea\u06e9\u0003\u0002\u0002\u0002\u06ea\u06eb\u0003",
    "\u0002\u0002\u0002\u06eb\u06ec\u0003\u0002\u0002\u0002\u06ec\u06ed\u0005",
    "\f\u0007\u0002\u06ed\u06ef\u0007\u007f\u0002\u0002\u06ee\u06f0\u0005",
    "\u00aaV\u0002\u06ef\u06ee\u0003\u0002\u0002\u0002\u06ef\u06f0\u0003",
    "\u0002\u0002\u0002\u06f0\u06f2\u0003\u0002\u0002\u0002\u06f1\u06de\u0003",
    "\u0002\u0002\u0002\u06f1\u06e8\u0003\u0002\u0002\u0002\u06f2\u00a5\u0003",
    "\u0002\u0002\u0002\u06f3\u06f5\u0005\u00a8U\u0002\u06f4\u06f6\u0005",
    "\u00d0i\u0002\u06f5\u06f4\u0003\u0002\u0002\u0002\u06f5\u06f6\u0003",
    "\u0002\u0002\u0002\u06f6\u06f7\u0003\u0002\u0002\u0002\u06f7\u06f9\u0007",
    "\u007f\u0002\u0002\u06f8\u06fa\u0005\u00aaV\u0002\u06f9\u06f8\u0003",
    "\u0002\u0002\u0002\u06f9\u06fa\u0003\u0002\u0002\u0002\u06fa\u06fb\u0003",
    "\u0002\u0002\u0002\u06fb\u06fc\u0007{\u0002\u0002\u06fc\u00a7\u0003",
    "\u0002\u0002\u0002\u06fd\u0703\u0007\u001c\u0002\u0002\u06fe\u06ff\u0007",
    "\u001c\u0002\u0002\u06ff\u0703\u0007\u0010\u0002\u0002\u0700\u0701\u0007",
    "\u001c\u0002\u0002\u0701\u0703\u0007=\u0002\u0002\u0702\u06fd\u0003",
    "\u0002\u0002\u0002\u0702\u06fe\u0003\u0002\u0002\u0002\u0702\u0700\u0003",
    "\u0002\u0002\u0002\u0703\u00a9\u0003\u0002\u0002\u0002\u0704\u0705\u0007",
    "y\u0002\u0002\u0705\u0706\u0005\u0094K\u0002\u0706\u00ab\u0003\u0002",
    "\u0002\u0002\u0707\u0708\bW\u0001\u0002\u0708\u0709\u0005\u00aeX\u0002",
    "\u0709\u070f\u0003\u0002\u0002\u0002\u070a\u070b\f\u0003\u0002\u0002",
    "\u070b\u070c\u0007u\u0002\u0002\u070c\u070e\u0005\u00aeX\u0002\u070d",
    "\u070a\u0003\u0002\u0002\u0002\u070e\u0711\u0003\u0002\u0002\u0002\u070f",
    "\u070d\u0003\u0002\u0002\u0002\u070f\u0710\u0003\u0002\u0002\u0002\u0710",
    "\u00ad\u0003\u0002\u0002\u0002\u0711\u070f\u0003\u0002\u0002\u0002\u0712",
    "\u0718\u0005\u00b0Y\u0002\u0713\u0714\u0005\u00b0Y\u0002\u0714\u0715",
    "\u0007`\u0002\u0002\u0715\u0716\u0005Z.\u0002\u0716\u0718\u0003\u0002",
    "\u0002\u0002\u0717\u0712\u0003\u0002\u0002\u0002\u0717\u0713\u0003\u0002",
    "\u0002\u0002\u0718\u00af\u0003\u0002\u0002\u0002\u0719\u071a\u0007\u007f",
    "\u0002\u0002\u071a\u00b1\u0003\u0002\u0002\u0002\u071b\u071e\u0005\u00b4",
    "[\u0002\u071c\u071e\u0005\u00c2b\u0002\u071d\u071b\u0003\u0002\u0002",
    "\u0002\u071d\u071c\u0003\u0002\u0002\u0002\u071e\u00b3\u0003\u0002\u0002",
    "\u0002\u071f\u0720\u0007\u007f\u0002\u0002\u0720\u00b5\u0003\u0002\u0002",
    "\u0002\u0721\u0724\u0005\u00b8]\u0002\u0722\u0724\u0005\u00be`\u0002",
    "\u0723\u0721\u0003\u0002\u0002\u0002\u0723\u0722\u0003\u0002\u0002\u0002",
    "\u0724\u00b7\u0003\u0002\u0002\u0002\u0725\u0728\u0005\u00ba^\u0002",
    "\u0726\u0728\u0005\u00bc_\u0002\u0727\u0725\u0003\u0002\u0002\u0002",
    "\u0727\u0726\u0003\u0002\u0002\u0002\u0728\u00b9\u0003\u0002\u0002\u0002",
    "\u0729\u072b\u0007\'\u0002\u0002\u072a\u0729\u0003\u0002\u0002\u0002",
    "\u072a\u072b\u0003\u0002\u0002\u0002\u072b\u072c\u0003\u0002\u0002\u0002",
    "\u072c\u072d\u0007+\u0002\u0002\u072d\u072e\u0007\u007f\u0002\u0002",
    "\u072e\u072f\u0007T\u0002\u0002\u072f\u0730\u0005\u00c0a\u0002\u0730",
    "\u0731\u0007U\u0002\u0002\u0731\u00bb\u0003\u0002\u0002\u0002\u0732",
    "\u0734\u0007\'\u0002\u0002\u0733\u0732\u0003\u0002\u0002\u0002\u0733",
    "\u0734\u0003\u0002\u0002\u0002\u0734\u0735\u0003\u0002\u0002\u0002\u0735",
    "\u0736\u0007+\u0002\u0002\u0736\u0737\u0005\u00b4[\u0002\u0737\u0738",
    "\u0007T\u0002\u0002\u0738\u0739\u0005\u00c0a\u0002\u0739\u073a\u0007",
    "U\u0002\u0002\u073a\u00bd\u0003\u0002\u0002\u0002\u073b\u073d\u0007",
    "\'\u0002\u0002\u073c\u073b\u0003\u0002\u0002\u0002\u073c\u073d\u0003",
    "\u0002\u0002\u0002\u073d\u073e\u0003\u0002\u0002\u0002\u073e\u073f\u0007",
    "+\u0002\u0002\u073f\u0740\u0007T\u0002\u0002\u0740\u0741\u0005\u00c0",
    "a\u0002\u0741\u0742\u0007U\u0002\u0002\u0742\u00bf\u0003\u0002\u0002",
    "\u0002\u0743\u0745\u0005v<\u0002\u0744\u0743\u0003\u0002\u0002\u0002",
    "\u0744\u0745\u0003\u0002\u0002\u0002\u0745\u00c1\u0003\u0002\u0002\u0002",
    "\u0746\u0747\u0007\u007f\u0002\u0002\u0747\u00c3\u0003\u0002\u0002\u0002",
    "\u0748\u0749\u0007+\u0002\u0002\u0749\u074a\u0007\u007f\u0002\u0002",
    "\u074a\u074b\u0007`\u0002\u0002\u074b\u074c\u0005\u00c6d\u0002\u074c",
    "\u074d\u0007{\u0002\u0002\u074d\u00c5\u0003\u0002\u0002\u0002\u074e",
    "\u0750\u0005\f\u0007\u0002\u074f\u074e\u0003\u0002\u0002\u0002\u074f",
    "\u0750\u0003\u0002\u0002\u0002\u0750\u0751\u0003\u0002\u0002\u0002\u0751",
    "\u0752\u0005\u00b2Z\u0002\u0752\u00c7\u0003\u0002\u0002\u0002\u0753",
    "\u0755\u0007J\u0002\u0002\u0754\u0756\u0007G\u0002\u0002\u0755\u0754",
    "\u0003\u0002\u0002\u0002\u0755\u0756\u0003\u0002\u0002\u0002\u0756\u0757",
    "\u0003\u0002\u0002\u0002\u0757\u0758\u0005\f\u0007\u0002\u0758\u0759",
    "\u0005\b\u0005\u0002\u0759\u075a\u0007{\u0002\u0002\u075a\u0761\u0003",
    "\u0002\u0002\u0002\u075b\u075c\u0007J\u0002\u0002\u075c\u075d\u0007",
    "z\u0002\u0002\u075d\u075e\u0005\b\u0005\u0002\u075e\u075f\u0007{\u0002",
    "\u0002\u075f\u0761\u0003\u0002\u0002\u0002\u0760\u0753\u0003\u0002\u0002",
    "\u0002\u0760\u075b\u0003\u0002\u0002\u0002\u0761\u00c9\u0003\u0002\u0002",
    "\u0002\u0762\u0764\u0005\u00d0i\u0002\u0763\u0762\u0003\u0002\u0002",
    "\u0002\u0763\u0764\u0003\u0002\u0002\u0002\u0764\u0765\u0003\u0002\u0002",
    "\u0002\u0765\u0766\u0007J\u0002\u0002\u0766\u0768\u0007+\u0002\u0002",
    "\u0767\u0769\u0005\f\u0007\u0002\u0768\u0767\u0003\u0002\u0002\u0002",
    "\u0768\u0769\u0003\u0002\u0002\u0002\u0769\u076a\u0003\u0002\u0002\u0002",
    "\u076a\u076b\u0005\u00b2Z\u0002\u076b\u076c\u0007{\u0002\u0002\u076c",
    "\u00cb\u0003\u0002\u0002\u0002\u076d\u076e\u0007\u0007\u0002\u0002\u076e",
    "\u076f\u0007P\u0002\u0002\u076f\u0770\u0007\u0088\u0002\u0002\u0770",
    "\u0771\u0007Q\u0002\u0002\u0771\u0772\u0007{\u0002\u0002\u0772\u00cd",
    "\u0003\u0002\u0002\u0002\u0773\u0774\u0007\u001f\u0002\u0002\u0774\u0775",
    "\u0007\u0088\u0002\u0002\u0775\u0777\u0007T\u0002\u0002\u0776\u0778",
    "\u0005v<\u0002\u0777\u0776\u0003\u0002\u0002\u0002\u0777\u0778\u0003",
    "\u0002\u0002\u0002\u0778\u0779\u0003\u0002\u0002\u0002\u0779\u077e\u0007",
    "U\u0002\u0002\u077a\u077b\u0007\u001f\u0002\u0002\u077b\u077c\u0007",
    "\u0088\u0002\u0002\u077c\u077e\u0005x=\u0002\u077d\u0773\u0003\u0002",
    "\u0002\u0002\u077d\u077a\u0003\u0002\u0002\u0002\u077e\u00cf\u0003\u0002",
    "\u0002\u0002\u077f\u0780\bi\u0001\u0002\u0780\u0781\u0005\u00d2j\u0002",
    "\u0781\u0786\u0003\u0002\u0002\u0002\u0782\u0783\f\u0003\u0002\u0002",
    "\u0783\u0785\u0005\u00d2j\u0002\u0784\u0782\u0003\u0002\u0002\u0002",
    "\u0785\u0788\u0003\u0002\u0002\u0002\u0786\u0784\u0003\u0002\u0002\u0002",
    "\u0786\u0787\u0003\u0002\u0002\u0002\u0787\u00d1\u0003\u0002\u0002\u0002",
    "\u0788\u0786\u0003\u0002\u0002\u0002\u0789\u078a\u0007R\u0002\u0002",
    "\u078a\u078b\u0007R\u0002\u0002\u078b\u078c\u0005\u00d6l\u0002\u078c",
    "\u078d\u0007S\u0002\u0002\u078d\u078e\u0007S\u0002\u0002\u078e\u0791",
    "\u0003\u0002\u0002\u0002\u078f\u0791\u0005\u00d4k\u0002\u0790\u0789",
    "\u0003\u0002\u0002\u0002\u0790\u078f\u0003\u0002\u0002\u0002\u0791\u00d3",
    "\u0003\u0002\u0002\u0002\u0792\u0793\u0007\u0005\u0002\u0002\u0793\u0794",
    "\u0007P\u0002\u0002\u0794\u0796\u0005\u00fe\u0080\u0002\u0795\u0797",
    "\u0007~\u0002\u0002\u0796\u0795\u0003\u0002\u0002\u0002\u0796\u0797",
    "\u0003\u0002\u0002\u0002\u0797\u0798\u0003\u0002\u0002\u0002\u0798\u0799",
    "\u0007Q\u0002\u0002\u0799\u07a3\u0003\u0002\u0002\u0002\u079a\u079b",
    "\u0007\u0005\u0002\u0002\u079b\u079c\u0007P\u0002\u0002\u079c\u079e",
    "\u0005Z.\u0002\u079d\u079f\u0007~\u0002\u0002\u079e\u079d\u0003\u0002",
    "\u0002\u0002\u079e\u079f\u0003\u0002\u0002\u0002\u079f\u07a0\u0003\u0002",
    "\u0002\u0002\u07a0\u07a1\u0007Q\u0002\u0002\u07a1\u07a3\u0003\u0002",
    "\u0002\u0002\u07a2\u0792\u0003\u0002\u0002\u0002\u07a2\u079a\u0003\u0002",
    "\u0002\u0002\u07a3\u00d5\u0003\u0002\u0002\u0002\u07a4\u07a6\bl\u0001",
    "\u0002\u07a5\u07a7\u0005\u00d8m\u0002\u07a6\u07a5\u0003\u0002\u0002",
    "\u0002\u07a6\u07a7\u0003\u0002\u0002\u0002\u07a7\u07ac\u0003\u0002\u0002",
    "\u0002\u07a8\u07a9\u0005\u00d8m\u0002\u07a9\u07aa\u0007~\u0002\u0002",
    "\u07aa\u07ac\u0003\u0002\u0002\u0002\u07ab\u07a4\u0003\u0002\u0002\u0002",
    "\u07ab\u07a8\u0003\u0002\u0002\u0002\u07ac\u07b9\u0003\u0002\u0002\u0002",
    "\u07ad\u07ae\f\u0005\u0002\u0002\u07ae\u07b0\u0007u\u0002\u0002\u07af",
    "\u07b1\u0005\u00d8m\u0002\u07b0\u07af\u0003\u0002\u0002\u0002\u07b0",
    "\u07b1\u0003\u0002\u0002\u0002\u07b1\u07b8\u0003\u0002\u0002\u0002\u07b2",
    "\u07b3\f\u0003\u0002\u0002\u07b3\u07b4\u0007u\u0002\u0002\u07b4\u07b5",
    "\u0005\u00d8m\u0002\u07b5\u07b6\u0007~\u0002\u0002\u07b6\u07b8\u0003",
    "\u0002\u0002\u0002\u07b7\u07ad\u0003\u0002\u0002\u0002\u07b7\u07b2\u0003",
    "\u0002\u0002\u0002\u07b8\u07bb\u0003\u0002\u0002\u0002\u07b9\u07b7\u0003",
    "\u0002\u0002\u0002\u07b9\u07ba\u0003\u0002\u0002\u0002\u07ba\u00d7\u0003",
    "\u0002\u0002\u0002\u07bb\u07b9\u0003\u0002\u0002\u0002\u07bc\u07be\u0005",
    "\u00dan\u0002\u07bd\u07bf\u0005\u00e0q\u0002\u07be\u07bd\u0003\u0002",
    "\u0002\u0002\u07be\u07bf\u0003\u0002\u0002\u0002\u07bf\u00d9\u0003\u0002",
    "\u0002\u0002\u07c0\u07c3\u0007\u007f\u0002\u0002\u07c1\u07c3\u0005\u00dc",
    "o\u0002\u07c2\u07c0\u0003\u0002\u0002\u0002\u07c2\u07c1\u0003\u0002",
    "\u0002\u0002\u07c3\u00db\u0003\u0002\u0002\u0002\u07c4\u07c5\u0005\u00de",
    "p\u0002\u07c5\u07c6\u0007z\u0002\u0002\u07c6\u07c7\u0007\u007f\u0002",
    "\u0002\u07c7\u00dd\u0003\u0002\u0002\u0002\u07c8\u07c9\u0007\u007f\u0002",
    "\u0002\u07c9\u00df\u0003\u0002\u0002\u0002\u07ca\u07cb\u0007P\u0002",
    "\u0002\u07cb\u07cc\u0005\u00e2r\u0002\u07cc\u07cd\u0007Q\u0002\u0002",
    "\u07cd\u00e1\u0003\u0002\u0002\u0002\u07ce\u07d0\br\u0001\u0002\u07cf",
    "\u07d1\u0005\u00e4s\u0002\u07d0\u07cf\u0003\u0002\u0002\u0002\u07d0",
    "\u07d1\u0003\u0002\u0002\u0002\u07d1\u07d6\u0003\u0002\u0002\u0002\u07d2",
    "\u07d3\f\u0003\u0002\u0002\u07d3\u07d5\u0005\u00e4s\u0002\u07d4\u07d2",
    "\u0003\u0002\u0002\u0002\u07d5\u07d8\u0003\u0002\u0002\u0002\u07d6\u07d4",
    "\u0003\u0002\u0002\u0002\u07d6\u07d7\u0003\u0002\u0002\u0002\u07d7\u00e3",
    "\u0003\u0002\u0002\u0002\u07d8\u07d6\u0003\u0002\u0002\u0002\u07d9\u07da",
    "\u0007P\u0002\u0002\u07da\u07db\u0005\u00e2r\u0002\u07db\u07dc\u0007",
    "Q\u0002\u0002\u07dc\u07e6\u0003\u0002\u0002\u0002\u07dd\u07de\u0007",
    "R\u0002\u0002\u07de\u07df\u0005\u00e2r\u0002\u07df\u07e0\u0007S\u0002",
    "\u0002\u07e0\u07e6\u0003\u0002\u0002\u0002\u07e1\u07e2\u0007T\u0002",
    "\u0002\u07e2\u07e3\u0005\u00e2r\u0002\u07e3\u07e4\u0007U\u0002\u0002",
    "\u07e4\u07e6\u0003\u0002\u0002\u0002\u07e5\u07d9\u0003\u0002\u0002\u0002",
    "\u07e5\u07dd\u0003\u0002\u0002\u0002\u07e5\u07e1\u0003\u0002\u0002\u0002",
    "\u07e6\u00e5\u0003\u0002\u0002\u0002\u07e7\u07e8\bt\u0001\u0002\u07e8",
    "\u07e9\u0005\u00e8u\u0002\u07e9\u07ef\u0003\u0002\u0002\u0002\u07ea",
    "\u07eb\f\u0003\u0002\u0002\u07eb\u07ec\u0007u\u0002\u0002\u07ec\u07ee",
    "\u0005\u00e8u\u0002\u07ed\u07ea\u0003\u0002\u0002\u0002\u07ee\u07f1",
    "\u0003\u0002\u0002\u0002\u07ef\u07ed\u0003\u0002\u0002\u0002\u07ef\u07f0",
    "\u0003\u0002\u0002\u0002\u07f0\u00e7\u0003\u0002\u0002\u0002\u07f1\u07ef",
    "\u0003\u0002\u0002\u0002\u07f2\u07f4\u0005\u00eav\u0002\u07f3\u07f5",
    "\u0005\u0114\u008b\u0002\u07f4\u07f3\u0003\u0002\u0002\u0002\u07f4\u07f5",
    "\u0003\u0002\u0002\u0002\u07f5\u00e9\u0003\u0002\u0002\u0002\u07f6\u07fc",
    "\u0005\u00ecw\u0002\u07f7\u07f8\u0005\u00eex\u0002\u07f8\u07f9\u0005",
    "\u00f0y\u0002\u07f9\u07fa\u0005\u00f2z\u0002\u07fa\u07fc\u0003\u0002",
    "\u0002\u0002\u07fb\u07f6\u0003\u0002\u0002\u0002\u07fb\u07f7\u0003\u0002",
    "\u0002\u0002\u07fc\u00eb\u0003\u0002\u0002\u0002\u07fd\u0802\u0005\u00ee",
    "x\u0002\u07fe\u07ff\u0005\u00f4{\u0002\u07ff\u0800\u0005\u00ecw\u0002",
    "\u0800\u0802\u0003\u0002\u0002\u0002\u0801\u07fd\u0003\u0002\u0002\u0002",
    "\u0801\u07fe\u0003\u0002\u0002\u0002\u0802\u00ed\u0003\u0002\u0002\u0002",
    "\u0803\u0804\bx\u0001\u0002\u0804\u0806\u0005\u00fc\u007f\u0002\u0805",
    "\u0807\u0005\u00d0i\u0002\u0806\u0805\u0003\u0002\u0002\u0002\u0806",
    "\u0807\u0003\u0002\u0002\u0002\u0807\u080d\u0003\u0002\u0002\u0002\u0808",
    "\u0809\u0007P\u0002\u0002\u0809\u080a\u0005\u00ecw\u0002\u080a\u080b",
    "\u0007Q\u0002\u0002\u080b\u080d\u0003\u0002\u0002\u0002\u080c\u0803",
    "\u0003\u0002\u0002\u0002\u080c\u0808\u0003\u0002\u0002\u0002\u080d\u081b",
    "\u0003\u0002\u0002\u0002\u080e\u080f\f\u0005\u0002\u0002\u080f\u081a",
    "\u0005\u00f0y\u0002\u0810\u0811\f\u0004\u0002\u0002\u0811\u0813\u0007",
    "R\u0002\u0002\u0812\u0814\u0005Z.\u0002\u0813\u0812\u0003\u0002\u0002",
    "\u0002\u0813\u0814\u0003\u0002\u0002\u0002\u0814\u0815\u0003\u0002\u0002",
    "\u0002\u0815\u0817\u0007S\u0002\u0002\u0816\u0818\u0005\u00d0i\u0002",
    "\u0817\u0816\u0003\u0002\u0002\u0002\u0817\u0818\u0003\u0002\u0002\u0002",
    "\u0818\u081a\u0003\u0002\u0002\u0002\u0819\u080e\u0003\u0002\u0002\u0002",
    "\u0819\u0810\u0003\u0002\u0002\u0002\u081a\u081d\u0003\u0002\u0002\u0002",
    "\u081b\u0819\u0003\u0002\u0002\u0002\u081b\u081c\u0003\u0002\u0002\u0002",
    "\u081c\u00ef\u0003\u0002\u0002\u0002\u081d\u081b\u0003\u0002\u0002\u0002",
    "\u081e\u081f\u0007P\u0002\u0002\u081f\u0820\u0005\u010a\u0086\u0002",
    "\u0820\u0822\u0007Q\u0002\u0002\u0821\u0823\u0005\u00f6|\u0002\u0822",
    "\u0821\u0003\u0002\u0002\u0002\u0822\u0823\u0003\u0002\u0002\u0002\u0823",
    "\u0825\u0003\u0002\u0002\u0002\u0824\u0826\u0005\u00fa~\u0002\u0825",
    "\u0824\u0003\u0002\u0002\u0002\u0825\u0826\u0003\u0002\u0002\u0002\u0826",
    "\u0828\u0003\u0002\u0002\u0002\u0827\u0829\u0005\u017a\u00be\u0002\u0828",
    "\u0827\u0003\u0002\u0002\u0002\u0828\u0829\u0003\u0002\u0002\u0002\u0829",
    "\u082b\u0003\u0002\u0002\u0002\u082a\u082c\u0005\u00d0i\u0002\u082b",
    "\u082a\u0003\u0002\u0002\u0002\u082b\u082c\u0003\u0002\u0002\u0002\u082c",
    "\u00f1\u0003\u0002\u0002\u0002\u082d\u082e\u0007w\u0002\u0002\u082e",
    "\u0830\u0005\u0096L\u0002\u082f\u0831\u0005\u0100\u0081\u0002\u0830",
    "\u082f\u0003\u0002\u0002\u0002\u0830\u0831\u0003\u0002\u0002\u0002\u0831",
    "\u00f3\u0003\u0002\u0002\u0002\u0832\u0834\u0007X\u0002\u0002\u0833",
    "\u0835\u0005\u00d0i\u0002\u0834\u0833\u0003\u0002\u0002\u0002\u0834",
    "\u0835\u0003\u0002\u0002\u0002\u0835\u0837\u0003\u0002\u0002\u0002\u0836",
    "\u0838\u0005\u00f6|\u0002\u0837\u0836\u0003\u0002\u0002\u0002\u0837",
    "\u0838\u0003\u0002\u0002\u0002\u0838\u084a\u0003\u0002\u0002\u0002\u0839",
    "\u083b\u0007\\\u0002\u0002\u083a\u083c\u0005\u00d0i\u0002\u083b\u083a",
    "\u0003\u0002\u0002\u0002\u083b\u083c\u0003\u0002\u0002\u0002\u083c\u084a",
    "\u0003\u0002\u0002\u0002\u083d\u083f\u0007q\u0002\u0002\u083e\u0840",
    "\u0005\u00d0i\u0002\u083f\u083e\u0003\u0002\u0002\u0002\u083f\u0840",
    "\u0003\u0002\u0002\u0002\u0840\u084a\u0003\u0002\u0002\u0002\u0841\u0842",
    "\u0005\f\u0007\u0002\u0842\u0844\u0007X\u0002\u0002\u0843\u0845\u0005",
    "\u00d0i\u0002\u0844\u0843\u0003\u0002\u0002\u0002\u0844\u0845\u0003",
    "\u0002\u0002\u0002\u0845\u0847\u0003\u0002\u0002\u0002\u0846\u0848\u0005",
    "\u00f6|\u0002\u0847\u0846\u0003\u0002\u0002\u0002\u0847\u0848\u0003",
    "\u0002\u0002\u0002\u0848\u084a\u0003\u0002\u0002\u0002\u0849\u0832\u0003",
    "\u0002\u0002\u0002\u0849\u0839\u0003\u0002\u0002\u0002\u0849\u083d\u0003",
    "\u0002\u0002\u0002\u0849\u0841\u0003\u0002\u0002\u0002\u084a\u00f5\u0003",
    "\u0002\u0002\u0002\u084b\u084d\u0005\u00f8}\u0002\u084c\u084e\u0005",
    "\u00f6|\u0002\u084d\u084c\u0003\u0002\u0002\u0002\u084d\u084e\u0003",
    "\u0002\u0002\u0002\u084e\u00f7\u0003\u0002\u0002\u0002\u084f\u0850\t",
    "\u0006\u0002\u0002\u0850\u00f9\u0003\u0002\u0002\u0002\u0851\u0852\t",
    "\u0007\u0002\u0002\u0852\u00fb\u0003\u0002\u0002\u0002\u0853\u0855\u0007",
    "~\u0002\u0002\u0854\u0853\u0003\u0002\u0002\u0002\u0854\u0855\u0003",
    "\u0002\u0002\u0002\u0855\u0856\u0003\u0002\u0002\u0002\u0856\u0857\u0005",
    "\u0006\u0004\u0002\u0857\u00fd\u0003\u0002\u0002\u0002\u0858\u085a\u0005",
    "\u0094K\u0002\u0859\u085b\u0005\u0100\u0081\u0002\u085a\u0859\u0003",
    "\u0002\u0002\u0002\u085a\u085b\u0003\u0002\u0002\u0002\u085b\u00ff\u0003",
    "\u0002\u0002\u0002\u085c\u0865\u0005\u0102\u0082\u0002\u085d\u085f\u0005",
    "\u0104\u0083\u0002\u085e\u085d\u0003\u0002\u0002\u0002\u085e\u085f\u0003",
    "\u0002\u0002\u0002\u085f\u0860\u0003\u0002\u0002\u0002\u0860\u0861\u0005",
    "\u00f0y\u0002\u0861\u0862\u0005\u00f2z\u0002\u0862\u0865\u0003\u0002",
    "\u0002\u0002\u0863\u0865\u0005\u0106\u0084\u0002\u0864\u085c\u0003\u0002",
    "\u0002\u0002\u0864\u085e\u0003\u0002\u0002\u0002\u0864\u0863\u0003\u0002",
    "\u0002\u0002\u0865\u0101\u0003\u0002\u0002\u0002\u0866\u086c\u0005\u0104",
    "\u0083\u0002\u0867\u0869\u0005\u00f4{\u0002\u0868\u086a\u0005\u0102",
    "\u0082\u0002\u0869\u0868\u0003\u0002\u0002\u0002\u0869\u086a\u0003\u0002",
    "\u0002\u0002\u086a\u086c\u0003\u0002\u0002\u0002\u086b\u0866\u0003\u0002",
    "\u0002\u0002\u086b\u0867\u0003\u0002\u0002\u0002\u086c\u0103\u0003\u0002",
    "\u0002\u0002\u086d\u086e\b\u0083\u0001\u0002\u086e\u087c\u0005\u00f0",
    "y\u0002\u086f\u0871\u0007R\u0002\u0002\u0870\u0872\u0005Z.\u0002\u0871",
    "\u0870\u0003\u0002\u0002\u0002\u0871\u0872\u0003\u0002\u0002\u0002\u0872",
    "\u0873\u0003\u0002\u0002\u0002\u0873\u0875\u0007S\u0002\u0002\u0874",
    "\u0876\u0005\u00d0i\u0002\u0875\u0874\u0003\u0002\u0002\u0002\u0875",
    "\u0876\u0003\u0002\u0002\u0002\u0876\u087c\u0003\u0002\u0002\u0002\u0877",
    "\u0878\u0007P\u0002\u0002\u0878\u0879\u0005\u0102\u0082\u0002\u0879",
    "\u087a\u0007Q\u0002\u0002\u087a\u087c\u0003\u0002\u0002\u0002\u087b",
    "\u086d\u0003\u0002\u0002\u0002\u087b\u086f\u0003\u0002\u0002\u0002\u087b",
    "\u0877\u0003\u0002\u0002\u0002\u087c\u088a\u0003\u0002\u0002\u0002\u087d",
    "\u087e\f\u0007\u0002\u0002\u087e\u0889\u0005\u00f0y\u0002\u087f\u0880",
    "\f\u0005\u0002\u0002\u0880\u0882\u0007R\u0002\u0002\u0881\u0883\u0005",
    "Z.\u0002\u0882\u0881\u0003\u0002\u0002\u0002\u0882\u0883\u0003\u0002",
    "\u0002\u0002\u0883\u0884\u0003\u0002\u0002\u0002\u0884\u0886\u0007S",
    "\u0002\u0002\u0885\u0887\u0005\u00d0i\u0002\u0886\u0885\u0003\u0002",
    "\u0002\u0002\u0886\u0887\u0003\u0002\u0002\u0002\u0887\u0889\u0003\u0002",
    "\u0002\u0002\u0888\u087d\u0003\u0002\u0002\u0002\u0888\u087f\u0003\u0002",
    "\u0002\u0002\u0889\u088c\u0003\u0002\u0002\u0002\u088a\u0888\u0003\u0002",
    "\u0002\u0002\u088a\u088b\u0003\u0002\u0002\u0002\u088b\u0105\u0003\u0002",
    "\u0002\u0002\u088c\u088a\u0003\u0002\u0002\u0002\u088d\u0892\u0005\u0108",
    "\u0085\u0002\u088e\u088f\u0005\u00f4{\u0002\u088f\u0890\u0005\u0106",
    "\u0084\u0002\u0890\u0892\u0003\u0002\u0002\u0002\u0891\u088d\u0003\u0002",
    "\u0002\u0002\u0891\u088e\u0003\u0002\u0002\u0002\u0892\u0107\u0003\u0002",
    "\u0002\u0002\u0893\u0894\b\u0085\u0001\u0002\u0894\u0895\u0007~\u0002",
    "\u0002\u0895\u08a3\u0003\u0002\u0002\u0002\u0896\u0897\f\u0005\u0002",
    "\u0002\u0897\u08a2\u0005\u00f0y\u0002\u0898\u0899\f\u0004\u0002\u0002",
    "\u0899\u089b\u0007R\u0002\u0002\u089a\u089c\u0005Z.\u0002\u089b\u089a",
    "\u0003\u0002\u0002\u0002\u089b\u089c\u0003\u0002\u0002\u0002\u089c\u089d",
    "\u0003\u0002\u0002\u0002\u089d\u089f\u0007S\u0002\u0002\u089e\u08a0",
    "\u0005\u00d0i\u0002\u089f\u089e\u0003\u0002\u0002\u0002\u089f\u08a0",
    "\u0003\u0002\u0002\u0002\u08a0\u08a2\u0003\u0002\u0002\u0002\u08a1\u0896",
    "\u0003\u0002\u0002\u0002\u08a1\u0898\u0003\u0002\u0002\u0002\u08a2\u08a5",
    "\u0003\u0002\u0002\u0002\u08a3\u08a1\u0003\u0002\u0002\u0002\u08a3\u08a4",
    "\u0003\u0002\u0002\u0002\u08a4\u0109\u0003\u0002\u0002\u0002\u08a5\u08a3",
    "\u0003\u0002\u0002\u0002\u08a6\u08a8\u0005\u010c\u0087\u0002\u08a7\u08a6",
    "\u0003\u0002\u0002\u0002\u08a7\u08a8\u0003\u0002\u0002\u0002\u08a8\u08aa",
    "\u0003\u0002\u0002\u0002\u08a9\u08ab\u0007~\u0002\u0002\u08aa\u08a9",
    "\u0003\u0002\u0002\u0002\u08aa\u08ab\u0003\u0002\u0002\u0002\u08ab\u08b1",
    "\u0003\u0002\u0002\u0002\u08ac\u08ad\u0005\u010c\u0087\u0002\u08ad\u08ae",
    "\u0007u\u0002\u0002\u08ae\u08af\u0007~\u0002\u0002\u08af\u08b1\u0003",
    "\u0002\u0002\u0002\u08b0\u08a7\u0003\u0002\u0002\u0002\u08b0\u08ac\u0003",
    "\u0002\u0002\u0002\u08b1\u010b\u0003\u0002\u0002\u0002\u08b2\u08b3\b",
    "\u0087\u0001\u0002\u08b3\u08b4\u0005\u010e\u0088\u0002\u08b4\u08ba\u0003",
    "\u0002\u0002\u0002\u08b5\u08b6\f\u0003\u0002\u0002\u08b6\u08b7\u0007",
    "u\u0002\u0002\u08b7\u08b9\u0005\u010e\u0088\u0002\u08b8\u08b5\u0003",
    "\u0002\u0002\u0002\u08b9\u08bc\u0003\u0002\u0002\u0002\u08ba\u08b8\u0003",
    "\u0002\u0002\u0002\u08ba\u08bb\u0003\u0002\u0002\u0002\u08bb\u010d\u0003",
    "\u0002\u0002\u0002\u08bc\u08ba\u0003\u0002\u0002\u0002\u08bd\u08bf\u0005",
    "\u00d0i\u0002\u08be\u08bd\u0003\u0002\u0002\u0002\u08be\u08bf\u0003",
    "\u0002\u0002\u0002\u08bf\u08c0\u0003\u0002\u0002\u0002\u08c0\u08c1\u0005",
    "\u0088E\u0002\u08c1\u08c2\u0005\u00eav\u0002\u08c2\u08dd\u0003\u0002",
    "\u0002\u0002\u08c3\u08c5\u0005\u00d0i\u0002\u08c4\u08c3\u0003\u0002",
    "\u0002\u0002\u08c4\u08c5\u0003\u0002\u0002\u0002\u08c5\u08c6\u0003\u0002",
    "\u0002\u0002\u08c6\u08c7\u0005\u0088E\u0002\u08c7\u08c8\u0005\u00ea",
    "v\u0002\u08c8\u08c9\u0007`\u0002\u0002\u08c9\u08ca\u0005\u0118\u008d",
    "\u0002\u08ca\u08dd\u0003\u0002\u0002\u0002\u08cb\u08cd\u0005\u00d0i",
    "\u0002\u08cc\u08cb\u0003\u0002\u0002\u0002\u08cc\u08cd\u0003\u0002\u0002",
    "\u0002\u08cd\u08ce\u0003\u0002\u0002\u0002\u08ce\u08d0\u0005\u0088E",
    "\u0002\u08cf\u08d1\u0005\u0100\u0081\u0002\u08d0\u08cf\u0003\u0002\u0002",
    "\u0002\u08d0\u08d1\u0003\u0002\u0002\u0002\u08d1\u08dd\u0003\u0002\u0002",
    "\u0002\u08d2\u08d4\u0005\u00d0i\u0002\u08d3\u08d2\u0003\u0002\u0002",
    "\u0002\u08d3\u08d4\u0003\u0002\u0002\u0002\u08d4\u08d5\u0003\u0002\u0002",
    "\u0002\u08d5\u08d7\u0005\u0088E\u0002\u08d6\u08d8\u0005\u0100\u0081",
    "\u0002\u08d7\u08d6\u0003\u0002\u0002\u0002\u08d7\u08d8\u0003\u0002\u0002",
    "\u0002\u08d8\u08d9\u0003\u0002\u0002\u0002\u08d9\u08da\u0007`\u0002",
    "\u0002\u08da\u08db\u0005\u0118\u008d\u0002\u08db\u08dd\u0003\u0002\u0002",
    "\u0002\u08dc\u08be\u0003\u0002\u0002\u0002\u08dc\u08c4\u0003\u0002\u0002",
    "\u0002\u08dc\u08cc\u0003\u0002\u0002\u0002\u08dc\u08d3\u0003\u0002\u0002",
    "\u0002\u08dd\u010f\u0003\u0002\u0002\u0002\u08de\u08e0\u0005\u00d0i",
    "\u0002\u08df\u08de\u0003\u0002\u0002\u0002\u08df\u08e0\u0003\u0002\u0002",
    "\u0002\u08e0\u08e2\u0003\u0002\u0002\u0002\u08e1\u08e3\u0005\u0088E",
    "\u0002\u08e2\u08e1\u0003\u0002\u0002\u0002\u08e2\u08e3\u0003\u0002\u0002",
    "\u0002\u08e3\u08e4\u0003\u0002\u0002\u0002\u08e4\u08e6\u0005\u00eav",
    "\u0002\u08e5\u08e7\u0005\u0132\u009a\u0002\u08e6\u08e5\u0003\u0002\u0002",
    "\u0002\u08e6\u08e7\u0003\u0002\u0002\u0002\u08e7\u08e8\u0003\u0002\u0002",
    "\u0002\u08e8\u08e9\u0005\u0112\u008a\u0002\u08e9\u0111\u0003\u0002\u0002",
    "\u0002\u08ea\u08ec\u0005\u014a\u00a6\u0002\u08eb\u08ea\u0003\u0002\u0002",
    "\u0002\u08eb\u08ec\u0003\u0002\u0002\u0002\u08ec\u08ed\u0003\u0002\u0002",
    "\u0002\u08ed\u08f6\u0005b2\u0002\u08ee\u08f6\u0005\u0170\u00b9\u0002",
    "\u08ef\u08f0\u0007`\u0002\u0002\u08f0\u08f1\u0007\u0016\u0002\u0002",
    "\u08f1\u08f6\u0007{\u0002\u0002\u08f2\u08f3\u0007`\u0002\u0002\u08f3",
    "\u08f4\u0007\u0017\u0002\u0002\u08f4\u08f6\u0007{\u0002\u0002\u08f5",
    "\u08eb\u0003\u0002\u0002\u0002\u08f5\u08ee\u0003\u0002\u0002\u0002\u08f5",
    "\u08ef\u0003\u0002\u0002\u0002\u08f5\u08f2\u0003\u0002\u0002\u0002\u08f6",
    "\u0113\u0003\u0002\u0002\u0002\u08f7\u08fd\u0005\u0116\u008c\u0002\u08f8",
    "\u08f9\u0007P\u0002\u0002\u08f9\u08fa\u0005\"\u0012\u0002\u08fa\u08fb",
    "\u0007Q\u0002\u0002\u08fb\u08fd\u0003\u0002\u0002\u0002\u08fc\u08f7",
    "\u0003\u0002\u0002\u0002\u08fc\u08f8\u0003\u0002\u0002\u0002\u08fd\u0115",
    "\u0003\u0002\u0002\u0002\u08fe\u08ff\u0007`\u0002\u0002\u08ff\u0902",
    "\u0005\u0118\u008d\u0002\u0900\u0902\u0005\u011c\u008f\u0002\u0901\u08fe",
    "\u0003\u0002\u0002\u0002\u0901\u0900\u0003\u0002\u0002\u0002\u0902\u0117",
    "\u0003\u0002\u0002\u0002\u0903\u0906\u0005T+\u0002\u0904\u0906\u0005",
    "\u011c\u008f\u0002\u0905\u0903\u0003\u0002\u0002\u0002\u0905\u0904\u0003",
    "\u0002\u0002\u0002\u0906\u0119\u0003\u0002\u0002\u0002\u0907\u0908\b",
    "\u008e\u0001\u0002\u0908\u090a\u0005\u0118\u008d\u0002\u0909\u090b\u0007",
    "~\u0002\u0002\u090a\u0909\u0003\u0002\u0002\u0002\u090a\u090b\u0003",
    "\u0002\u0002\u0002\u090b\u0914\u0003\u0002\u0002\u0002\u090c\u090d\f",
    "\u0003\u0002\u0002\u090d\u090e\u0007u\u0002\u0002\u090e\u0910\u0005",
    "\u0118\u008d\u0002\u090f\u0911\u0007~\u0002\u0002\u0910\u090f\u0003",
    "\u0002\u0002\u0002\u0910\u0911\u0003\u0002\u0002\u0002\u0911\u0913\u0003",
    "\u0002\u0002\u0002\u0912\u090c\u0003\u0002\u0002\u0002\u0913\u0916\u0003",
    "\u0002\u0002\u0002\u0914\u0912\u0003\u0002\u0002\u0002\u0914\u0915\u0003",
    "\u0002\u0002\u0002\u0915\u011b\u0003\u0002\u0002\u0002\u0916\u0914\u0003",
    "\u0002\u0002\u0002\u0917\u0918\u0007T\u0002\u0002\u0918\u091a\u0005",
    "\u011a\u008e\u0002\u0919\u091b\u0007u\u0002\u0002\u091a\u0919\u0003",
    "\u0002\u0002\u0002\u091a\u091b\u0003\u0002\u0002\u0002\u091b\u091c\u0003",
    "\u0002\u0002\u0002\u091c\u091d\u0007U\u0002\u0002\u091d\u0921\u0003",
    "\u0002\u0002\u0002\u091e\u091f\u0007T\u0002\u0002\u091f\u0921\u0007",
    "U\u0002\u0002\u0920\u0917\u0003\u0002\u0002\u0002\u0920\u091e\u0003",
    "\u0002\u0002\u0002\u0921\u011d\u0003\u0002\u0002\u0002\u0922\u0925\u0007",
    "\u007f\u0002\u0002\u0923\u0925\u0005\u015e\u00b0\u0002\u0924\u0922\u0003",
    "\u0002\u0002\u0002\u0924\u0923\u0003\u0002\u0002\u0002\u0925\u011f\u0003",
    "\u0002\u0002\u0002\u0926\u0927\u0005\u0122\u0092\u0002\u0927\u0929\u0007",
    "T\u0002\u0002\u0928\u092a\u0005\u012a\u0096\u0002\u0929\u0928\u0003",
    "\u0002\u0002\u0002\u0929\u092a\u0003\u0002\u0002\u0002\u092a\u092b\u0003",
    "\u0002\u0002\u0002\u092b\u092c\u0007U\u0002\u0002\u092c\u0121\u0003",
    "\u0002\u0002\u0002\u092d\u092f\u0005\u0128\u0095\u0002\u092e\u0930\u0005",
    "\u00d0i\u0002\u092f\u092e\u0003\u0002\u0002\u0002\u092f\u0930\u0003",
    "\u0002\u0002\u0002\u0930\u0931\u0003\u0002\u0002\u0002\u0931\u0933\u0005",
    "\u0124\u0093\u0002\u0932\u0934\u0005\u0126\u0094\u0002\u0933\u0932\u0003",
    "\u0002\u0002\u0002\u0933\u0934\u0003\u0002\u0002\u0002\u0934\u0936\u0003",
    "\u0002\u0002\u0002\u0935\u0937\u0005\u0138\u009d\u0002\u0936\u0935\u0003",
    "\u0002\u0002\u0002\u0936\u0937\u0003\u0002\u0002\u0002\u0937\u0940\u0003",
    "\u0002\u0002\u0002\u0938\u093a\u0005\u0128\u0095\u0002\u0939\u093b\u0005",
    "\u00d0i\u0002\u093a\u0939\u0003\u0002\u0002\u0002\u093a\u093b\u0003",
    "\u0002\u0002\u0002\u093b\u093d\u0003\u0002\u0002\u0002\u093c\u093e\u0005",
    "\u0138\u009d\u0002\u093d\u093c\u0003\u0002\u0002\u0002\u093d\u093e\u0003",
    "\u0002\u0002\u0002\u093e\u0940\u0003\u0002\u0002\u0002\u093f\u092d\u0003",
    "\u0002\u0002\u0002\u093f\u0938\u0003\u0002\u0002\u0002\u0940\u0123\u0003",
    "\u0002\u0002\u0002\u0941\u0943\u0005\f\u0007\u0002\u0942\u0941\u0003",
    "\u0002\u0002\u0002\u0942\u0943\u0003\u0002\u0002\u0002\u0943\u0944\u0003",
    "\u0002\u0002\u0002\u0944\u0945\u0005\u011e\u0090\u0002\u0945\u0125\u0003",
    "\u0002\u0002\u0002\u0946\u0947\u0007!\u0002\u0002\u0947\u0127\u0003",
    "\u0002\u0002\u0002\u0948\u0949\t\b\u0002\u0002\u0949\u0129\u0003\u0002",
    "\u0002\u0002\u094a\u094c\u0005\u012c\u0097\u0002\u094b\u094d\u0005\u012a",
    "\u0096\u0002\u094c\u094b\u0003\u0002\u0002\u0002\u094c\u094d\u0003\u0002",
    "\u0002\u0002\u094d\u0954\u0003\u0002\u0002\u0002\u094e\u094f\u0005\u0142",
    "\u00a2\u0002\u094f\u0951\u0007y\u0002\u0002\u0950\u0952\u0005\u012a",
    "\u0096\u0002\u0951\u0950\u0003\u0002\u0002\u0002\u0951\u0952\u0003\u0002",
    "\u0002\u0002\u0952\u0954\u0003\u0002\u0002\u0002\u0953\u094a\u0003\u0002",
    "\u0002\u0002\u0953\u094e\u0003\u0002\u0002\u0002\u0954\u012b\u0003\u0002",
    "\u0002\u0002\u0955\u0957\u0005\u00d0i\u0002\u0956\u0955\u0003\u0002",
    "\u0002\u0002\u0956\u0957\u0003\u0002\u0002\u0002\u0957\u0959\u0003\u0002",
    "\u0002\u0002\u0958\u095a\u0005\u0088E\u0002\u0959\u0958\u0003\u0002",
    "\u0002\u0002\u0959\u095a\u0003\u0002\u0002\u0002\u095a\u095c\u0003\u0002",
    "\u0002\u0002\u095b\u095d\u0005\u012e\u0098\u0002\u095c\u095b\u0003\u0002",
    "\u0002\u0002\u095c\u095d\u0003\u0002\u0002\u0002\u095d\u095e\u0003\u0002",
    "\u0002\u0002\u095e\u0966\u0007{\u0002\u0002\u095f\u0966\u0005\u0110",
    "\u0089\u0002\u0960\u0966\u0005\u00c8e\u0002\u0961\u0966\u0005\u0080",
    "A\u0002\u0962\u0966\u0005\u0156\u00ac\u0002\u0963\u0966\u0005|?\u0002",
    "\u0964\u0966\u0005\u0082B\u0002\u0965\u0956\u0003\u0002\u0002\u0002",
    "\u0965\u095f\u0003\u0002\u0002\u0002\u0965\u0960\u0003\u0002\u0002\u0002",
    "\u0965\u0961\u0003\u0002\u0002\u0002\u0965\u0962\u0003\u0002\u0002\u0002",
    "\u0965\u0963\u0003\u0002\u0002\u0002\u0965\u0964\u0003\u0002\u0002\u0002",
    "\u0966\u012d\u0003\u0002\u0002\u0002\u0967\u0968\b\u0098\u0001\u0002",
    "\u0968\u0969\u0005\u0130\u0099\u0002\u0969\u096f\u0003\u0002\u0002\u0002",
    "\u096a\u096b\f\u0003\u0002\u0002\u096b\u096c\u0007u\u0002\u0002\u096c",
    "\u096e\u0005\u0130\u0099\u0002\u096d\u096a\u0003\u0002\u0002\u0002\u096e",
    "\u0971\u0003\u0002\u0002\u0002\u096f\u096d\u0003\u0002\u0002\u0002\u096f",
    "\u0970\u0003\u0002\u0002\u0002\u0970\u012f\u0003\u0002\u0002\u0002\u0971",
    "\u096f\u0003\u0002\u0002\u0002\u0972\u0974\u0005\u00eav\u0002\u0973",
    "\u0975\u0005\u0132\u009a\u0002\u0974\u0973\u0003\u0002\u0002\u0002\u0974",
    "\u0975\u0003\u0002\u0002\u0002\u0975\u0977\u0003\u0002\u0002\u0002\u0976",
    "\u0978\u0005\u0136\u009c\u0002\u0977\u0976\u0003\u0002\u0002\u0002\u0977",
    "\u0978\u0003\u0002\u0002\u0002\u0978\u0986\u0003\u0002\u0002\u0002\u0979",
    "\u097b\u0005\u00eav\u0002\u097a\u097c\u0005\u0116\u008c\u0002\u097b",
    "\u097a\u0003\u0002\u0002\u0002\u097b\u097c\u0003\u0002\u0002\u0002\u097c",
    "\u0986\u0003\u0002\u0002\u0002\u097d\u097f\u0007\u007f\u0002\u0002\u097e",
    "\u097d\u0003\u0002\u0002\u0002\u097e\u097f\u0003\u0002\u0002\u0002\u097f",
    "\u0981\u0003\u0002\u0002\u0002\u0980\u0982\u0005\u00d0i\u0002\u0981",
    "\u0980\u0003\u0002\u0002\u0002\u0981\u0982\u0003\u0002\u0002\u0002\u0982",
    "\u0983\u0003\u0002\u0002\u0002\u0983\u0984\u0007y\u0002\u0002\u0984",
    "\u0986\u0005Z.\u0002\u0985\u0972\u0003\u0002\u0002\u0002\u0985\u0979",
    "\u0003\u0002\u0002\u0002\u0985\u097e\u0003\u0002\u0002\u0002\u0986\u0131",
    "\u0003\u0002\u0002\u0002\u0987\u0988\b\u009a\u0001\u0002\u0988\u0989",
    "\u0005\u0134\u009b\u0002\u0989\u098e\u0003\u0002\u0002\u0002\u098a\u098b",
    "\f\u0003\u0002\u0002\u098b\u098d\u0005\u0134\u009b\u0002\u098c\u098a",
    "\u0003\u0002\u0002\u0002\u098d\u0990\u0003\u0002\u0002\u0002\u098e\u098c",
    "\u0003\u0002\u0002\u0002\u098e\u098f\u0003\u0002\u0002\u0002\u098f\u0133",
    "\u0003\u0002\u0002\u0002\u0990\u098e\u0003\u0002\u0002\u0002\u0991\u0992",
    "\t\t\u0002\u0002\u0992\u0135\u0003\u0002\u0002\u0002\u0993\u0994\u0007",
    "`\u0002\u0002\u0994\u0995\u0007\u0082\u0002\u0002\u0995\u0996\b\u009c",
    "\u0001\u0002\u0996\u0137\u0003\u0002\u0002\u0002\u0997\u0998\u0007y",
    "\u0002\u0002\u0998\u0999\u0005\u013a\u009e\u0002\u0999\u0139\u0003\u0002",
    "\u0002\u0002\u099a\u099b\b\u009e\u0001\u0002\u099b\u099d\u0005\u013c",
    "\u009f\u0002\u099c\u099e\u0007~\u0002\u0002\u099d\u099c\u0003\u0002",
    "\u0002\u0002\u099d\u099e\u0003\u0002\u0002\u0002\u099e\u09a7\u0003\u0002",
    "\u0002\u0002\u099f\u09a0\f\u0003\u0002\u0002\u09a0\u09a1\u0007u\u0002",
    "\u0002\u09a1\u09a3\u0005\u013c\u009f\u0002\u09a2\u09a4\u0007~\u0002",
    "\u0002\u09a3\u09a2\u0003\u0002\u0002\u0002\u09a3\u09a4\u0003\u0002\u0002",
    "\u0002\u09a4\u09a6\u0003\u0002\u0002\u0002\u09a5\u099f\u0003\u0002\u0002",
    "\u0002\u09a6\u09a9\u0003\u0002\u0002\u0002\u09a7\u09a5\u0003\u0002\u0002",
    "\u0002\u09a7\u09a8\u0003\u0002\u0002\u0002\u09a8\u013b\u0003\u0002\u0002",
    "\u0002\u09a9\u09a7\u0003\u0002\u0002\u0002\u09aa\u09ac\u0005\u00d0i",
    "\u0002\u09ab\u09aa\u0003\u0002\u0002\u0002\u09ab\u09ac\u0003\u0002\u0002",
    "\u0002\u09ac\u09ad\u0003\u0002\u0002\u0002\u09ad\u09c0\u0005\u0140\u00a1",
    "\u0002\u09ae\u09b0\u0005\u00d0i\u0002\u09af\u09ae\u0003\u0002\u0002",
    "\u0002\u09af\u09b0\u0003\u0002\u0002\u0002\u09b0\u09b1\u0003\u0002\u0002",
    "\u0002\u09b1\u09b3\u0007K\u0002\u0002\u09b2\u09b4\u0005\u0142\u00a2",
    "\u0002\u09b3\u09b2\u0003\u0002\u0002\u0002\u09b3\u09b4\u0003\u0002\u0002",
    "\u0002\u09b4\u09b5\u0003\u0002\u0002\u0002\u09b5\u09c0\u0005\u0140\u00a1",
    "\u0002\u09b6\u09b8\u0005\u00d0i\u0002\u09b7\u09b6\u0003\u0002\u0002",
    "\u0002\u09b7\u09b8\u0003\u0002\u0002\u0002\u09b8\u09b9\u0003\u0002\u0002",
    "\u0002\u09b9\u09bb\u0005\u0142\u00a2\u0002\u09ba\u09bc\u0007K\u0002",
    "\u0002\u09bb\u09ba\u0003\u0002\u0002\u0002\u09bb\u09bc\u0003\u0002\u0002",
    "\u0002\u09bc\u09bd\u0003\u0002\u0002\u0002\u09bd\u09be\u0005\u0140\u00a1",
    "\u0002\u09be\u09c0\u0003\u0002\u0002\u0002\u09bf\u09ab\u0003\u0002\u0002",
    "\u0002\u09bf\u09af\u0003\u0002\u0002\u0002\u09bf\u09b7\u0003\u0002\u0002",
    "\u0002\u09c0\u013d\u0003\u0002\u0002\u0002\u09c1\u09c3\u0005\f\u0007",
    "\u0002\u09c2\u09c1\u0003\u0002\u0002\u0002\u09c2\u09c3\u0003\u0002\u0002",
    "\u0002\u09c3\u09c4\u0003\u0002\u0002\u0002\u09c4\u09c7\u0005\u011e\u0090",
    "\u0002\u09c5\u09c7\u0005\u009cO\u0002\u09c6\u09c2\u0003\u0002\u0002",
    "\u0002\u09c6\u09c5\u0003\u0002\u0002\u0002\u09c7\u013f\u0003\u0002\u0002",
    "\u0002\u09c8\u09c9\u0005\u013e\u00a0\u0002\u09c9\u0141\u0003\u0002\u0002",
    "\u0002\u09ca\u09cb\t\n\u0002\u0002\u09cb\u0143\u0003\u0002\u0002\u0002",
    "\u09cc\u09cd\u0007/\u0002\u0002\u09cd\u09ce\u0005\u0146\u00a4\u0002",
    "\u09ce\u0145\u0003\u0002\u0002\u0002\u09cf\u09d1\u0005\u0094K\u0002",
    "\u09d0\u09d2\u0005\u0148\u00a5\u0002\u09d1\u09d0\u0003\u0002\u0002\u0002",
    "\u09d1\u09d2\u0003\u0002\u0002\u0002\u09d2\u0147\u0003\u0002\u0002\u0002",
    "\u09d3\u09d5\u0005\u00f4{\u0002\u09d4\u09d6\u0005\u0148\u00a5\u0002",
    "\u09d5\u09d4\u0003\u0002\u0002\u0002\u09d5\u09d6\u0003\u0002\u0002\u0002",
    "\u09d6\u0149\u0003\u0002\u0002\u0002\u09d7\u09d8\u0007y\u0002\u0002",
    "\u09d8\u09d9\u0005\u014c\u00a7\u0002\u09d9\u014b\u0003\u0002\u0002\u0002",
    "\u09da\u09dc\u0005\u014e\u00a8\u0002\u09db\u09dd\u0007~\u0002\u0002",
    "\u09dc\u09db\u0003\u0002\u0002\u0002\u09dc\u09dd\u0003\u0002\u0002\u0002",
    "\u09dd\u09e6\u0003\u0002\u0002\u0002\u09de\u09e0\u0005\u014e\u00a8\u0002",
    "\u09df\u09e1\u0007~\u0002\u0002\u09e0\u09df\u0003\u0002\u0002\u0002",
    "\u09e0\u09e1\u0003\u0002\u0002\u0002\u09e1\u09e2\u0003\u0002\u0002\u0002",
    "\u09e2\u09e3\u0007u\u0002\u0002\u09e3\u09e4\u0005\u014c\u00a7\u0002",
    "\u09e4\u09e6\u0003\u0002\u0002\u0002\u09e5\u09da\u0003\u0002\u0002\u0002",
    "\u09e5\u09de\u0003\u0002\u0002\u0002\u09e6\u014d\u0003\u0002\u0002\u0002",
    "\u09e7\u09e8\u0005\u0150\u00a9\u0002\u09e8\u09ea\u0007P\u0002\u0002",
    "\u09e9\u09eb\u0005\"\u0012\u0002\u09ea\u09e9\u0003\u0002\u0002\u0002",
    "\u09ea\u09eb\u0003\u0002\u0002\u0002\u09eb\u09ec\u0003\u0002\u0002\u0002",
    "\u09ec\u09ed\u0007Q\u0002\u0002\u09ed\u09f2\u0003\u0002\u0002\u0002",
    "\u09ee\u09ef\u0005\u0150\u00a9\u0002\u09ef\u09f0\u0005\u011c\u008f\u0002",
    "\u09f0\u09f2\u0003\u0002\u0002\u0002\u09f1\u09e7\u0003\u0002\u0002\u0002",
    "\u09f1\u09ee\u0003\u0002\u0002\u0002\u09f2\u014f\u0003\u0002\u0002\u0002",
    "\u09f3\u09f6\u0005\u013e\u00a0\u0002\u09f4\u09f6\u0007\u007f\u0002\u0002",
    "\u09f5\u09f3\u0003\u0002\u0002\u0002\u09f5\u09f4\u0003\u0002\u0002\u0002",
    "\u09f6\u0151\u0003\u0002\u0002\u0002\u09f7\u09f8\u0007/\u0002\u0002",
    "\u09f8\u09f9\u0005\u0304\u0183\u0002\u09f9\u0153\u0003\u0002\u0002\u0002",
    "\u09fa\u09fb\u0007/\u0002\u0002\u09fb\u09fc\u0007\u0088\u0002\u0002",
    "\u09fc\u0a00\u0007\u007f\u0002\u0002\u09fd\u09fe\u0007/\u0002\u0002",
    "\u09fe\u0a00\u0007\u008b\u0002\u0002\u09ff\u09fa\u0003\u0002\u0002\u0002",
    "\u09ff\u09fd\u0003\u0002\u0002\u0002\u0a00\u0155\u0003\u0002\u0002\u0002",
    "\u0a01\u0a02\u0007?\u0002\u0002\u0a02\u0a03\u0007a\u0002\u0002\u0a03",
    "\u0a04\u0005\u0158\u00ad\u0002\u0a04\u0a05\u0007b\u0002\u0002\u0a05",
    "\u0a06\u0005x=\u0002\u0a06\u0157\u0003\u0002\u0002\u0002\u0a07\u0a08",
    "\b\u00ad\u0001\u0002\u0a08\u0a09\u0005\u015a\u00ae\u0002\u0a09\u0a0f",
    "\u0003\u0002\u0002\u0002\u0a0a\u0a0b\f\u0003\u0002\u0002\u0a0b\u0a0c",
    "\u0007u\u0002\u0002\u0a0c\u0a0e\u0005\u015a\u00ae\u0002\u0a0d\u0a0a",
    "\u0003\u0002\u0002\u0002\u0a0e\u0a11\u0003\u0002\u0002\u0002\u0a0f\u0a0d",
    "\u0003\u0002\u0002\u0002\u0a0f\u0a10\u0003\u0002\u0002\u0002\u0a10\u0159",
    "\u0003\u0002\u0002\u0002\u0a11\u0a0f\u0003\u0002\u0002\u0002\u0a12\u0a15",
    "\u0005\u015c\u00af\u0002\u0a13\u0a15\u0005\u010e\u0088\u0002\u0a14\u0a12",
    "\u0003\u0002\u0002\u0002\u0a14\u0a13\u0003\u0002\u0002\u0002\u0a15\u015b",
    "\u0003\u0002\u0002\u0002\u0a16\u0a18\u0007\u0010\u0002\u0002\u0a17\u0a19",
    "\u0007~\u0002\u0002\u0a18\u0a17\u0003\u0002\u0002\u0002\u0a18\u0a19",
    "\u0003\u0002\u0002\u0002\u0a19\u0a1b\u0003\u0002\u0002\u0002\u0a1a\u0a1c",
    "\u0007\u007f\u0002\u0002\u0a1b\u0a1a\u0003\u0002\u0002\u0002\u0a1b\u0a1c",
    "\u0003\u0002\u0002\u0002\u0a1c\u0a47\u0003\u0002\u0002\u0002\u0a1d\u0a1f",
    "\u0007\u0010\u0002\u0002\u0a1e\u0a20\u0007\u007f\u0002\u0002\u0a1f\u0a1e",
    "\u0003\u0002\u0002\u0002\u0a1f\u0a20\u0003\u0002\u0002\u0002\u0a20\u0a21",
    "\u0003\u0002\u0002\u0002\u0a21\u0a22\u0007`\u0002\u0002\u0a22\u0a47",
    "\u0005\u00fe\u0080\u0002\u0a23\u0a25\u0007G\u0002\u0002\u0a24\u0a26",
    "\u0007~\u0002\u0002\u0a25\u0a24\u0003\u0002\u0002\u0002\u0a25\u0a26",
    "\u0003\u0002\u0002\u0002\u0a26\u0a28\u0003\u0002\u0002\u0002\u0a27\u0a29",
    "\u0007\u007f\u0002\u0002\u0a28\u0a27\u0003\u0002\u0002\u0002\u0a28\u0a29",
    "\u0003\u0002\u0002\u0002\u0a29\u0a47\u0003\u0002\u0002\u0002\u0a2a\u0a2c",
    "\u0007G\u0002\u0002\u0a2b\u0a2d\u0007\u007f\u0002\u0002\u0a2c\u0a2b",
    "\u0003\u0002\u0002\u0002\u0a2c\u0a2d\u0003\u0002\u0002\u0002\u0a2d\u0a2e",
    "\u0003\u0002\u0002\u0002\u0a2e\u0a2f\u0007`\u0002\u0002\u0a2f\u0a47",
    "\u0005\u00fe\u0080\u0002\u0a30\u0a31\u0007?\u0002\u0002\u0a31\u0a32",
    "\u0007a\u0002\u0002\u0a32\u0a33\u0005\u0158\u00ad\u0002\u0a33\u0a34",
    "\u0007b\u0002\u0002\u0a34\u0a36\u0007\u0010\u0002\u0002\u0a35\u0a37",
    "\u0007~\u0002\u0002\u0a36\u0a35\u0003\u0002\u0002\u0002\u0a36\u0a37",
    "\u0003\u0002\u0002\u0002\u0a37\u0a39\u0003\u0002\u0002\u0002\u0a38\u0a3a",
    "\u0007\u007f\u0002\u0002\u0a39\u0a38\u0003\u0002\u0002\u0002\u0a39\u0a3a",
    "\u0003\u0002\u0002\u0002\u0a3a\u0a47\u0003\u0002\u0002\u0002\u0a3b\u0a3c",
    "\u0007?\u0002\u0002\u0a3c\u0a3d\u0007a\u0002\u0002\u0a3d\u0a3e\u0005",
    "\u0158\u00ad\u0002\u0a3e\u0a3f\u0007b\u0002\u0002\u0a3f\u0a41\u0007",
    "\u0010\u0002\u0002\u0a40\u0a42\u0007\u007f\u0002\u0002\u0a41\u0a40\u0003",
    "\u0002\u0002\u0002\u0a41\u0a42\u0003\u0002\u0002\u0002\u0a42\u0a43\u0003",
    "\u0002\u0002\u0002\u0a43\u0a44\u0007`\u0002\u0002\u0a44\u0a45\u0005",
    "\u0006\u0004\u0002\u0a45\u0a47\u0003\u0002\u0002\u0002\u0a46\u0a16\u0003",
    "\u0002\u0002\u0002\u0a46\u0a1d\u0003\u0002\u0002\u0002\u0a46\u0a23\u0003",
    "\u0002\u0002\u0002\u0a46\u0a2a\u0003\u0002\u0002\u0002\u0a46\u0a30\u0003",
    "\u0002\u0002\u0002\u0a46\u0a3b\u0003\u0002\u0002\u0002\u0a47\u015d\u0003",
    "\u0002\u0002\u0002\u0a48\u0a49\u0005\u0162\u00b2\u0002\u0a49\u0a4b\u0007",
    "a\u0002\u0002\u0a4a\u0a4c\u0005\u0164\u00b3\u0002\u0a4b\u0a4a\u0003",
    "\u0002\u0002\u0002\u0a4b\u0a4c\u0003\u0002\u0002\u0002\u0a4c\u0a4d\u0003",
    "\u0002\u0002\u0002\u0a4d\u0a4e\u0007b\u0002\u0002\u0a4e\u015f\u0003",
    "\u0002\u0002\u0002\u0a4f\u0a5f\u0005\u015e\u00b0\u0002\u0a50\u0a51\u0005",
    "\u0152\u00aa\u0002\u0a51\u0a53\u0007a\u0002\u0002\u0a52\u0a54\u0005",
    "\u0164\u00b3\u0002\u0a53\u0a52\u0003\u0002\u0002\u0002\u0a53\u0a54\u0003",
    "\u0002\u0002\u0002\u0a54\u0a55\u0003\u0002\u0002\u0002\u0a55\u0a56\u0007",
    "b\u0002\u0002\u0a56\u0a5f\u0003\u0002\u0002\u0002\u0a57\u0a58\u0005",
    "\u0154\u00ab\u0002\u0a58\u0a5a\u0007a\u0002\u0002\u0a59\u0a5b\u0005",
    "\u0164\u00b3\u0002\u0a5a\u0a59\u0003\u0002\u0002\u0002\u0a5a\u0a5b\u0003",
    "\u0002\u0002\u0002\u0a5b\u0a5c\u0003\u0002\u0002\u0002\u0a5c\u0a5d\u0007",
    "b\u0002\u0002\u0a5d\u0a5f\u0003\u0002\u0002\u0002\u0a5e\u0a4f\u0003",
    "\u0002\u0002\u0002\u0a5e\u0a50\u0003\u0002\u0002\u0002\u0a5e\u0a57\u0003",
    "\u0002\u0002\u0002\u0a5f\u0161\u0003\u0002\u0002\u0002\u0a60\u0a61\u0007",
    "\u007f\u0002\u0002\u0a61\u0163\u0003\u0002\u0002\u0002\u0a62\u0a63\b",
    "\u00b3\u0001\u0002\u0a63\u0a65\u0005\u0166\u00b4\u0002\u0a64\u0a66\u0007",
    "~\u0002\u0002\u0a65\u0a64\u0003\u0002\u0002\u0002\u0a65\u0a66\u0003",
    "\u0002\u0002\u0002\u0a66\u0a6f\u0003\u0002\u0002\u0002\u0a67\u0a68\f",
    "\u0003\u0002\u0002\u0a68\u0a69\u0007u\u0002\u0002\u0a69\u0a6b\u0005",
    "\u0166\u00b4\u0002\u0a6a\u0a6c\u0007~\u0002\u0002\u0a6b\u0a6a\u0003",
    "\u0002\u0002\u0002\u0a6b\u0a6c\u0003\u0002\u0002\u0002\u0a6c\u0a6e\u0003",
    "\u0002\u0002\u0002\u0a6d\u0a67\u0003\u0002\u0002\u0002\u0a6e\u0a71\u0003",
    "\u0002\u0002\u0002\u0a6f\u0a6d\u0003\u0002\u0002\u0002\u0a6f\u0a70\u0003",
    "\u0002\u0002\u0002\u0a70\u0165\u0003\u0002\u0002\u0002\u0a71\u0a6f\u0003",
    "\u0002\u0002\u0002\u0a72\u0a76\u0005\u00fe\u0080\u0002\u0a73\u0a76\u0005",
    "Z.\u0002\u0a74\u0a76\u0005\u0006\u0004\u0002\u0a75\u0a72\u0003\u0002",
    "\u0002\u0002\u0a75\u0a73\u0003\u0002\u0002\u0002\u0a75\u0a74\u0003\u0002",
    "\u0002\u0002\u0a76\u0167\u0003\u0002\u0002\u0002\u0a77\u0a78\u0007G",
    "\u0002\u0002\u0a78\u0a79\u0005\f\u0007\u0002\u0a79\u0a7a\u0007\u007f",
    "\u0002\u0002\u0a7a\u0a83\u0003\u0002\u0002\u0002\u0a7b\u0a7c\u0007G",
    "\u0002\u0002\u0a7c\u0a7e\u0005\f\u0007\u0002\u0a7d\u0a7f\u0007?\u0002",
    "\u0002\u0a7e\u0a7d\u0003\u0002\u0002\u0002\u0a7e\u0a7f\u0003\u0002\u0002",
    "\u0002\u0a7f\u0a80\u0003\u0002\u0002\u0002\u0a80\u0a81\u0005\u015e\u00b0",
    "\u0002\u0a81\u0a83\u0003\u0002\u0002\u0002\u0a82\u0a77\u0003\u0002\u0002",
    "\u0002\u0a82\u0a7b\u0003\u0002\u0002\u0002\u0a83\u0169\u0003\u0002\u0002",
    "\u0002\u0a84\u0a86\u0007\u001f\u0002\u0002\u0a85\u0a84\u0003\u0002\u0002",
    "\u0002\u0a85\u0a86\u0003\u0002\u0002\u0002\u0a86\u0a87\u0003\u0002\u0002",
    "\u0002\u0a87\u0a88\u0007?\u0002\u0002\u0a88\u0a89\u0005x=\u0002\u0a89",
    "\u016b\u0003\u0002\u0002\u0002\u0a8a\u0a8b\u0007?\u0002\u0002\u0a8b",
    "\u0a8c\u0007a\u0002\u0002\u0a8c\u0a8d\u0007b\u0002\u0002\u0a8d\u0a8e",
    "\u0005x=\u0002\u0a8e\u016d\u0003\u0002\u0002\u0002\u0a8f\u0a90\u0007",
    "D\u0002\u0002\u0a90\u0a91\u0005b2\u0002\u0a91\u0a92\u0005\u0172\u00ba",
    "\u0002\u0a92\u016f\u0003\u0002\u0002\u0002\u0a93\u0a95\u0007D\u0002",
    "\u0002\u0a94\u0a96\u0005\u014a\u00a6\u0002\u0a95\u0a94\u0003\u0002\u0002",
    "\u0002\u0a95\u0a96\u0003\u0002\u0002\u0002\u0a96\u0a97\u0003\u0002\u0002",
    "\u0002\u0a97\u0a98\u0005b2\u0002\u0a98\u0a99\u0005\u0172\u00ba\u0002",
    "\u0a99\u0171\u0003\u0002\u0002\u0002\u0a9a\u0a9c\u0005\u0174\u00bb\u0002",
    "\u0a9b\u0a9d\u0005\u0172\u00ba\u0002\u0a9c\u0a9b\u0003\u0002\u0002\u0002",
    "\u0a9c\u0a9d\u0003\u0002\u0002\u0002\u0a9d\u0173\u0003\u0002\u0002\u0002",
    "\u0a9e\u0a9f\u0007\f\u0002\u0002\u0a9f\u0aa0\u0007P\u0002\u0002\u0aa0",
    "\u0aa1\u0005\u0176\u00bc\u0002\u0aa1\u0aa2\u0007Q\u0002\u0002\u0aa2",
    "\u0aa3\u0005b2\u0002\u0aa3\u0175\u0003\u0002\u0002\u0002\u0aa4\u0aa6",
    "\u0005\u00d0i\u0002\u0aa5\u0aa4\u0003\u0002\u0002\u0002\u0aa5\u0aa6",
    "\u0003\u0002\u0002\u0002\u0aa6\u0aa7\u0003\u0002\u0002\u0002\u0aa7\u0aa8",
    "\u0005\u0094K\u0002\u0aa8\u0aa9\u0005\u00eav\u0002\u0aa9\u0ab3\u0003",
    "\u0002\u0002\u0002\u0aaa\u0aac\u0005\u00d0i\u0002\u0aab\u0aaa\u0003",
    "\u0002\u0002\u0002\u0aab\u0aac\u0003\u0002\u0002\u0002\u0aac\u0aad\u0003",
    "\u0002\u0002\u0002\u0aad\u0aaf\u0005\u0094K\u0002\u0aae\u0ab0\u0005",
    "\u0100\u0081\u0002\u0aaf\u0aae\u0003\u0002\u0002\u0002\u0aaf\u0ab0\u0003",
    "\u0002\u0002\u0002\u0ab0\u0ab3\u0003\u0002\u0002\u0002\u0ab1\u0ab3\u0007",
    "~\u0002\u0002\u0ab2\u0aa5\u0003\u0002\u0002\u0002\u0ab2\u0aab\u0003",
    "\u0002\u0002\u0002\u0ab2\u0ab1\u0003\u0002\u0002\u0002\u0ab3\u0177\u0003",
    "\u0002\u0002\u0002\u0ab4\u0ab6\u0007B\u0002\u0002\u0ab5\u0ab7\u0005",
    "T+\u0002\u0ab6\u0ab5\u0003\u0002\u0002\u0002\u0ab6\u0ab7\u0003\u0002",
    "\u0002\u0002\u0ab7\u0179\u0003\u0002\u0002\u0002\u0ab8\u0abb\u0005\u017c",
    "\u00bf\u0002\u0ab9\u0abb\u0005\u0180\u00c1\u0002\u0aba\u0ab8\u0003\u0002",
    "\u0002\u0002\u0aba\u0ab9\u0003\u0002\u0002\u0002\u0abb\u017b\u0003\u0002",
    "\u0002\u0002\u0abc\u0abd\u0007B\u0002\u0002\u0abd\u0abf\u0007P\u0002",
    "\u0002\u0abe\u0ac0\u0005\u017e\u00c0\u0002\u0abf\u0abe\u0003\u0002\u0002",
    "\u0002\u0abf\u0ac0\u0003\u0002\u0002\u0002\u0ac0\u0ac1\u0003\u0002\u0002",
    "\u0002\u0ac1\u0ac2\u0007Q\u0002\u0002\u0ac2\u017d\u0003\u0002\u0002",
    "\u0002\u0ac3\u0ac4\b\u00c0\u0001\u0002\u0ac4\u0ac6\u0005\u00fe\u0080",
    "\u0002\u0ac5\u0ac7\u0007~\u0002\u0002\u0ac6\u0ac5\u0003\u0002\u0002",
    "\u0002\u0ac6\u0ac7\u0003\u0002\u0002\u0002\u0ac7\u0ad0\u0003\u0002\u0002",
    "\u0002\u0ac8\u0ac9\f\u0003\u0002\u0002\u0ac9\u0aca\u0007u\u0002\u0002",
    "\u0aca\u0acc\u0005\u00fe\u0080\u0002\u0acb\u0acd\u0007~\u0002\u0002",
    "\u0acc\u0acb\u0003\u0002\u0002\u0002\u0acc\u0acd\u0003\u0002\u0002\u0002",
    "\u0acd\u0acf\u0003\u0002\u0002\u0002\u0ace\u0ac8\u0003\u0002\u0002\u0002",
    "\u0acf\u0ad2\u0003\u0002\u0002\u0002\u0ad0\u0ace\u0003\u0002\u0002\u0002",
    "\u0ad0\u0ad1\u0003\u0002\u0002\u0002\u0ad1\u017f\u0003\u0002\u0002\u0002",
    "\u0ad2\u0ad0\u0003\u0002\u0002\u0002\u0ad3\u0ad4\u0007-\u0002\u0002",
    "\u0ad4\u0ad5\u0007P\u0002\u0002\u0ad5\u0ad6\u0005Z.\u0002\u0ad6\u0ad7",
    "\u0007Q\u0002\u0002\u0ad7\u0ada\u0003\u0002\u0002\u0002\u0ad8\u0ada",
    "\u0007-\u0002\u0002\u0ad9\u0ad3\u0003\u0002\u0002\u0002\u0ad9\u0ad8",
    "\u0003\u0002\u0002\u0002\u0ada\u0181\u0003\u0002\u0002\u0002\u0adb\u0adc",
    "\u0005\u0306\u0184\u0002\u0adc\u0add\u0007\u0002\u0002\u0003\u0add\u0aec",
    "\u0003\u0002\u0002\u0002\u0ade\u0adf\u0007@\u0002\u0002\u0adf\u0aec",
    "\u0007\u0002\u0002\u0003\u0ae0\u0ae1\u0007P\u0002\u0002\u0ae1\u0ae2",
    "\u0005X-\u0002\u0ae2\u0ae3\u0007Q\u0002\u0002\u0ae3\u0ae4\u0007\u0002",
    "\u0002\u0003\u0ae4\u0aec\u0003\u0002\u0002\u0002\u0ae5\u0ae6\u0005\u0006",
    "\u0004\u0002\u0ae6\u0ae7\u0007\u0002\u0002\u0003\u0ae7\u0aec\u0003\u0002",
    "\u0002\u0002\u0ae8\u0ae9\u0005\u000e\b\u0002\u0ae9\u0aea\u0007\u0002",
    "\u0002\u0003\u0aea\u0aec\u0003\u0002\u0002\u0002\u0aeb\u0adb\u0003\u0002",
    "\u0002\u0002\u0aeb\u0ade\u0003\u0002\u0002\u0002\u0aeb\u0ae0\u0003\u0002",
    "\u0002\u0002\u0aeb\u0ae5\u0003\u0002\u0002\u0002\u0aeb\u0ae8\u0003\u0002",
    "\u0002\u0002\u0aec\u0183\u0003\u0002\u0002\u0002\u0aed\u0aee\u0005\b",
    "\u0005\u0002\u0aee\u0aef\u0007\u0002\u0002\u0003\u0aef\u0af4\u0003\u0002",
    "\u0002\u0002\u0af0\u0af1\u0005\n\u0006\u0002\u0af1\u0af2\u0007\u0002",
    "\u0002\u0003\u0af2\u0af4\u0003\u0002\u0002\u0002\u0af3\u0aed\u0003\u0002",
    "\u0002\u0002\u0af3\u0af0\u0003\u0002\u0002\u0002\u0af4\u0185\u0003\u0002",
    "\u0002\u0002\u0af5\u0af6\u0007\u007f\u0002\u0002\u0af6\u0b0c\u0007\u0002",
    "\u0002\u0003\u0af7\u0af8\u0005\u0152\u00aa\u0002\u0af8\u0af9\u0007\u0002",
    "\u0002\u0003\u0af9\u0b0c\u0003\u0002\u0002\u0002\u0afa\u0afb\u0005\u0144",
    "\u00a3\u0002\u0afb\u0afc\u0007\u0002\u0002\u0003\u0afc\u0b0c\u0003\u0002",
    "\u0002\u0002\u0afd\u0afe\u0005\u0154\u00ab\u0002\u0afe\u0aff\u0007\u0002",
    "\u0002\u0003\u0aff\u0b0c\u0003\u0002\u0002\u0002\u0b00\u0b01\u0007^",
    "\u0002\u0002\u0b01\u0b02\u0005\u011e\u0090\u0002\u0b02\u0b03\u0007\u0002",
    "\u0002\u0003\u0b03\u0b0c\u0003\u0002\u0002\u0002\u0b04\u0b05\u0007^",
    "\u0002\u0002\u0b05\u0b06\u0005\u009cO\u0002\u0b06\u0b07\u0007\u0002",
    "\u0002\u0003\u0b07\u0b0c\u0003\u0002\u0002\u0002\u0b08\u0b09\u0005\u0160",
    "\u00b1\u0002\u0b09\u0b0a\u0007\u0002\u0002\u0003\u0b0a\u0b0c\u0003\u0002",
    "\u0002\u0002\u0b0b\u0af5\u0003\u0002\u0002\u0002\u0b0b\u0af7\u0003\u0002",
    "\u0002\u0002\u0b0b\u0afa\u0003\u0002\u0002\u0002\u0b0b\u0afd\u0003\u0002",
    "\u0002\u0002\u0b0b\u0b00\u0003\u0002\u0002\u0002\u0b0b\u0b04\u0003\u0002",
    "\u0002\u0002\u0b0b\u0b08\u0003\u0002\u0002\u0002\u0b0c\u0187\u0003\u0002",
    "\u0002\u0002\u0b0d\u0b0f\u0005\f\u0007\u0002\u0b0e\u0b10\u0007?\u0002",
    "\u0002\u0b0f\u0b0e\u0003\u0002\u0002\u0002\u0b0f\u0b10\u0003\u0002\u0002",
    "\u0002\u0b10\u0b11\u0003\u0002\u0002\u0002\u0b11\u0b12\u0005\b\u0005",
    "\u0002\u0b12\u0b13\u0007\u0002\u0002\u0003\u0b13\u0189\u0003\u0002\u0002",
    "\u0002\u0b14\u0b15\u0007z\u0002\u0002\u0b15\u0b30\u0007\u0002\u0002",
    "\u0003\u0b16\u0b17\u0005\u009aN\u0002\u0b17\u0b18\u0007z\u0002\u0002",
    "\u0b18\u0b19\u0007\u0002\u0002\u0003\u0b19\u0b30\u0003\u0002\u0002\u0002",
    "\u0b1a\u0b1b\u0005\u00b2Z\u0002\u0b1b\u0b1c\u0007z\u0002\u0002\u0b1c",
    "\u0b1d\u0007\u0002\u0002\u0003\u0b1d\u0b30\u0003\u0002\u0002\u0002\u0b1e",
    "\u0b1f\u0005\u009cO\u0002\u0b1f\u0b20\u0007z\u0002\u0002\u0b20\u0b21",
    "\u0007\u0002\u0002\u0003\u0b21\u0b30\u0003\u0002\u0002\u0002\u0b22\u0b23",
    "\u0005\f\u0007\u0002\u0b23\u0b24\u0007\u007f\u0002\u0002\u0b24\u0b25",
    "\u0007z\u0002\u0002\u0b25\u0b26\u0007\u0002\u0002\u0003\u0b26\u0b30",
    "\u0003\u0002\u0002\u0002\u0b27\u0b29\u0005\f\u0007\u0002\u0b28\u0b2a",
    "\u0007?\u0002\u0002\u0b29\u0b28\u0003\u0002\u0002\u0002\u0b29\u0b2a",
    "\u0003\u0002\u0002\u0002\u0b2a\u0b2b\u0003\u0002\u0002\u0002\u0b2b\u0b2c",
    "\u0005\u015e\u00b0\u0002\u0b2c\u0b2d\u0007z\u0002\u0002\u0b2d\u0b2e",
    "\u0007\u0002\u0002\u0003\u0b2e\u0b30\u0003\u0002\u0002\u0002\u0b2f\u0b14",
    "\u0003\u0002\u0002\u0002\u0b2f\u0b16\u0003\u0002\u0002\u0002\u0b2f\u0b1a",
    "\u0003\u0002\u0002\u0002\u0b2f\u0b1e\u0003\u0002\u0002\u0002\u0b2f\u0b22",
    "\u0003\u0002\u0002\u0002\u0b2f\u0b27\u0003\u0002\u0002\u0002\u0b30\u018b",
    "\u0003\u0002\u0002\u0002\u0b31\u0b33\u0005\u0010\t\u0002\u0b32\u0b34",
    "\u0005\u001e\u0010\u0002\u0b33\u0b32\u0003\u0002\u0002\u0002\u0b33\u0b34",
    "\u0003\u0002\u0002\u0002\u0b34\u0b35\u0003\u0002\u0002\u0002\u0b35\u0b36",
    "\u0005b2\u0002\u0b36\u0b37\u0007\u0002\u0002\u0003\u0b37\u018d\u0003",
    "\u0002\u0002\u0002\u0b38\u0b3a\u0007R\u0002\u0002\u0b39\u0b3b\u0005",
    "\u0012\n\u0002\u0b3a\u0b39\u0003\u0002\u0002\u0002\u0b3a\u0b3b\u0003",
    "\u0002\u0002\u0002\u0b3b\u0b3c\u0003\u0002\u0002\u0002\u0b3c\u0b3d\u0007",
    "S\u0002\u0002\u0b3d\u0b3e\u0007\u0002\u0002\u0003\u0b3e\u018f\u0003",
    "\u0002\u0002\u0002\u0b3f\u0b40\u0005\u0014\u000b\u0002\u0b40\u0b41\u0007",
    "\u0002\u0002\u0003\u0b41\u0b4b\u0003\u0002\u0002\u0002\u0b42\u0b43\u0005",
    "\u0016\f\u0002\u0b43\u0b44\u0007\u0002\u0002\u0003\u0b44\u0b4b\u0003",
    "\u0002\u0002\u0002\u0b45\u0b46\u0005\u0014\u000b\u0002\u0b46\u0b47\u0007",
    "u\u0002\u0002\u0b47\u0b48\u0005\u0016\f\u0002\u0b48\u0b49\u0007\u0002",
    "\u0002\u0003\u0b49\u0b4b\u0003\u0002\u0002\u0002\u0b4a\u0b3f\u0003\u0002",
    "\u0002\u0002\u0b4a\u0b42\u0003\u0002\u0002\u0002\u0b4a\u0b45\u0003\u0002",
    "\u0002\u0002\u0b4b\u0191\u0003\u0002\u0002\u0002\u0b4c\u0b4d\u0007\\",
    "\u0002\u0002\u0b4d\u0b51\u0007\u0002\u0002\u0003\u0b4e\u0b4f\u0007`",
    "\u0002\u0002\u0b4f\u0b51\u0007\u0002\u0002\u0003\u0b50\u0b4c\u0003\u0002",
    "\u0002\u0002\u0b50\u0b4e\u0003\u0002\u0002\u0002\u0b51\u0193\u0003\u0002",
    "\u0002\u0002\u0b52\u0b54\u0005\u0018\r\u0002\u0b53\u0b55\u0007~\u0002",
    "\u0002\u0b54\u0b53\u0003\u0002\u0002\u0002\u0b54\u0b55\u0003\u0002\u0002",
    "\u0002\u0b55\u0b56\u0003\u0002\u0002\u0002\u0b56\u0b57\u0007\u0002\u0002",
    "\u0003\u0b57\u0b61\u0003\u0002\u0002\u0002\u0b58\u0b59\u0005\u0016\f",
    "\u0002\u0b59\u0b5a\u0007u\u0002\u0002\u0b5a\u0b5c\u0005\u0018\r\u0002",
    "\u0b5b\u0b5d\u0007~\u0002\u0002\u0b5c\u0b5b\u0003\u0002\u0002\u0002",
    "\u0b5c\u0b5d\u0003\u0002\u0002\u0002\u0b5d\u0b5e\u0003\u0002\u0002\u0002",
    "\u0b5e\u0b5f\u0007\u0002\u0002\u0003\u0b5f\u0b61\u0003\u0002\u0002\u0002",
    "\u0b60\u0b52\u0003\u0002\u0002\u0002\u0b60\u0b58\u0003\u0002\u0002\u0002",
    "\u0b61\u0195\u0003\u0002\u0002\u0002\u0b62\u0b63\u0005\u001a\u000e\u0002",
    "\u0b63\u0b64\u0007\u0002\u0002\u0003\u0b64\u0b69\u0003\u0002\u0002\u0002",
    "\u0b65\u0b66\u0005\u001c\u000f\u0002\u0b66\u0b67\u0007\u0002\u0002\u0003",
    "\u0b67\u0b69\u0003\u0002\u0002\u0002\u0b68\u0b62\u0003\u0002\u0002\u0002",
    "\u0b68\u0b65\u0003\u0002\u0002\u0002\u0b69\u0197\u0003\u0002\u0002\u0002",
    "\u0b6a\u0b6b\u0007\u007f\u0002\u0002\u0b6b\u0b72\u0007\u0002\u0002\u0003",
    "\u0b6c\u0b6d\u0007\\\u0002\u0002\u0b6d\u0b6e\u0007\u007f\u0002\u0002",
    "\u0b6e\u0b72\u0007\u0002\u0002\u0003\u0b6f\u0b70\u0007@\u0002\u0002",
    "\u0b70\u0b72\u0007\u0002\u0002\u0003\u0b71\u0b6a\u0003\u0002\u0002\u0002",
    "\u0b71\u0b6c\u0003\u0002\u0002\u0002\u0b71\u0b6f\u0003\u0002\u0002\u0002",
    "\u0b72\u0199\u0003\u0002\u0002\u0002\u0b73\u0b74\u0007\u007f\u0002\u0002",
    "\u0b74\u0b75\u0005\u0114\u008b\u0002\u0b75\u0b76\u0007\u0002\u0002\u0003",
    "\u0b76\u0b7d\u0003\u0002\u0002\u0002\u0b77\u0b78\u0007\\\u0002\u0002",
    "\u0b78\u0b79\u0007\u007f\u0002\u0002\u0b79\u0b7a\u0005\u0114\u008b\u0002",
    "\u0b7a\u0b7b\u0007\u0002\u0002\u0003\u0b7b\u0b7d\u0003\u0002\u0002\u0002",
    "\u0b7c\u0b73\u0003\u0002\u0002\u0002\u0b7c\u0b77\u0003\u0002\u0002\u0002",
    "\u0b7d\u019b\u0003\u0002\u0002\u0002\u0b7e\u0b7f\u0007P\u0002\u0002",
    "\u0b7f\u0b80\u0005\u010a\u0086\u0002\u0b80\u0b82\u0007Q\u0002\u0002",
    "\u0b81\u0b83\u0007*\u0002\u0002\u0b82\u0b81\u0003\u0002\u0002\u0002",
    "\u0b82\u0b83\u0003\u0002\u0002\u0002\u0b83\u0b85\u0003\u0002\u0002\u0002",
    "\u0b84\u0b86\u0005\u017a\u00be\u0002\u0b85\u0b84\u0003\u0002\u0002\u0002",
    "\u0b85\u0b86\u0003\u0002\u0002\u0002\u0b86\u0b87\u0003\u0002\u0002\u0002",
    "\u0b87\u0b89\u0007\u0002\u0002\u0003\u0b88\u0b8a\u0005\u00d0i\u0002",
    "\u0b89\u0b88\u0003\u0002\u0002\u0002\u0b89\u0b8a\u0003\u0002\u0002\u0002",
    "\u0b8a\u0b8c\u0003\u0002\u0002\u0002\u0b8b\u0b8d\u0005\u00f2z\u0002",
    "\u0b8c\u0b8b\u0003\u0002\u0002\u0002\u0b8c\u0b8d\u0003\u0002\u0002\u0002",
    "\u0b8d\u0b8e\u0003\u0002\u0002\u0002\u0b8e\u0b8f\u0007\u0002\u0002\u0003",
    "\u0b8f\u019d\u0003\u0002\u0002\u0002\u0b90\u0b91\u0005\u0004\u0003\u0002",
    "\u0b91\u0b92\u0007\u0002\u0002\u0003\u0b92\u0c12\u0003\u0002\u0002\u0002",
    "\u0b93\u0b94\u0005 \u0011\u0002\u0b94\u0b95\u0007R\u0002\u0002\u0b95",
    "\u0b96\u0005X-\u0002\u0b96\u0b97\u0007S\u0002\u0002\u0b97\u0b98\u0007",
    "\u0002\u0002\u0003\u0b98\u0c12\u0003\u0002\u0002\u0002\u0b99\u0b9a\u0005",
    " \u0011\u0002\u0b9a\u0b9b\u0007R\u0002\u0002\u0b9b\u0b9c\u0005\u011c",
    "\u008f\u0002\u0b9c\u0b9d\u0007S\u0002\u0002\u0b9d\u0b9e\u0007\u0002",
    "\u0002\u0003\u0b9e\u0c12\u0003\u0002\u0002\u0002\u0b9f\u0ba0\u0005 ",
    "\u0011\u0002\u0ba0\u0ba2\u0007P\u0002\u0002\u0ba1\u0ba3\u0005\"\u0012",
    "\u0002\u0ba2\u0ba1\u0003\u0002\u0002\u0002\u0ba2\u0ba3\u0003\u0002\u0002",
    "\u0002\u0ba3\u0ba4\u0003\u0002\u0002\u0002\u0ba4\u0ba5\u0007Q\u0002",
    "\u0002\u0ba5\u0ba6\u0007\u0002\u0002\u0003\u0ba6\u0c12\u0003\u0002\u0002",
    "\u0002\u0ba7\u0ba8\u0005\u0098M\u0002\u0ba8\u0baa\u0007P\u0002\u0002",
    "\u0ba9\u0bab\u0005\"\u0012\u0002\u0baa\u0ba9\u0003\u0002\u0002\u0002",
    "\u0baa\u0bab\u0003\u0002\u0002\u0002\u0bab\u0bac\u0003\u0002\u0002\u0002",
    "\u0bac\u0bad\u0007Q\u0002\u0002\u0bad\u0bae\u0007\u0002\u0002\u0003",
    "\u0bae\u0c12\u0003\u0002\u0002\u0002\u0baf\u0bb0\u0005\u0168\u00b5\u0002",
    "\u0bb0\u0bb2\u0007P\u0002\u0002\u0bb1\u0bb3\u0005\"\u0012\u0002\u0bb2",
    "\u0bb1\u0003\u0002\u0002\u0002\u0bb2\u0bb3\u0003\u0002\u0002\u0002\u0bb3",
    "\u0bb4\u0003\u0002\u0002\u0002\u0bb4\u0bb5\u0007Q\u0002\u0002\u0bb5",
    "\u0bb6\u0007\u0002\u0002\u0003\u0bb6\u0c12\u0003\u0002\u0002\u0002\u0bb7",
    "\u0bb8\u0005\u0098M\u0002\u0bb8\u0bb9\u0005\u011c\u008f\u0002\u0bb9",
    "\u0bba\u0007\u0002\u0002\u0003\u0bba\u0c12\u0003\u0002\u0002\u0002\u0bbb",
    "\u0bbc\u0005\u0168\u00b5\u0002\u0bbc\u0bbd\u0005\u011c\u008f\u0002\u0bbd",
    "\u0bbe\u0007\u0002\u0002\u0003\u0bbe\u0c12\u0003\u0002\u0002\u0002\u0bbf",
    "\u0bc0\u0005 \u0011\u0002\u0bc0\u0bc2\u0007|\u0002\u0002\u0bc1\u0bc3",
    "\u0007?\u0002\u0002\u0bc2\u0bc1\u0003\u0002\u0002\u0002\u0bc2\u0bc3",
    "\u0003\u0002\u0002\u0002\u0bc3\u0bc4\u0003\u0002\u0002\u0002\u0bc4\u0bc5",
    "\u0005\u0006\u0004\u0002\u0bc5\u0bc6\u0007\u0002\u0002\u0003\u0bc6\u0c12",
    "\u0003\u0002\u0002\u0002\u0bc7\u0bc8\u0005 \u0011\u0002\u0bc8\u0bca",
    "\u0007w\u0002\u0002\u0bc9\u0bcb\u0007?\u0002\u0002\u0bca\u0bc9\u0003",
    "\u0002\u0002\u0002\u0bca\u0bcb\u0003\u0002\u0002\u0002\u0bcb\u0bcc\u0003",
    "\u0002\u0002\u0002\u0bcc\u0bcd\u0005\u0006\u0004\u0002\u0bcd\u0bce\u0007",
    "\u0002\u0002\u0003\u0bce\u0c12\u0003\u0002\u0002\u0002\u0bcf\u0bd0\u0005",
    " \u0011\u0002\u0bd0\u0bd1\u0007|\u0002\u0002\u0bd1\u0bd2\u0005$\u0013",
    "\u0002\u0bd2\u0bd3\u0007\u0002\u0002\u0003\u0bd3\u0c12\u0003\u0002\u0002",
    "\u0002\u0bd4\u0bd5\u0005 \u0011\u0002\u0bd5\u0bd6\u0007w\u0002\u0002",
    "\u0bd6\u0bd7\u0005$\u0013\u0002\u0bd7\u0bd8\u0007\u0002\u0002\u0003",
    "\u0bd8\u0c12\u0003\u0002\u0002\u0002\u0bd9\u0bda\u0005 \u0011\u0002",
    "\u0bda\u0bdb\u0007s\u0002\u0002\u0bdb\u0bdc\u0007\u0002\u0002\u0003",
    "\u0bdc\u0c12\u0003\u0002\u0002\u0002\u0bdd\u0bde\u0005 \u0011\u0002",
    "\u0bde\u0bdf\u0007t\u0002\u0002\u0bdf\u0be0\u0007\u0002\u0002\u0003",
    "\u0be0\u0c12\u0003\u0002\u0002\u0002\u0be1\u0be2\u0007\u001a\u0002\u0002",
    "\u0be2\u0be3\u0007a\u0002\u0002\u0be3\u0be4\u0005\u00fe\u0080\u0002",
    "\u0be4\u0be5\u0007b\u0002\u0002\u0be5\u0be6\u0007P\u0002\u0002\u0be6",
    "\u0be7\u0005X-\u0002\u0be7\u0be8\u0007Q\u0002\u0002\u0be8\u0be9\u0007",
    "\u0002\u0002\u0003\u0be9\u0c12\u0003\u0002\u0002\u0002\u0bea\u0beb\u0007",
    "<\u0002\u0002\u0beb\u0bec\u0007a\u0002\u0002\u0bec\u0bed\u0005\u00fe",
    "\u0080\u0002\u0bed\u0bee\u0007b\u0002\u0002\u0bee\u0bef\u0007P\u0002",
    "\u0002\u0bef\u0bf0\u0005X-\u0002\u0bf0\u0bf1\u0007Q\u0002\u0002\u0bf1",
    "\u0bf2\u0007\u0002\u0002\u0003\u0bf2\u0c12\u0003\u0002\u0002\u0002\u0bf3",
    "\u0bf4\u00075\u0002\u0002\u0bf4\u0bf5\u0007a\u0002\u0002\u0bf5\u0bf6",
    "\u0005\u00fe\u0080\u0002\u0bf6\u0bf7\u0007b\u0002\u0002\u0bf7\u0bf8",
    "\u0007P\u0002\u0002\u0bf8\u0bf9\u0005X-\u0002\u0bf9\u0bfa\u0007Q\u0002",
    "\u0002\u0bfa\u0bfb\u0007\u0002\u0002\u0003\u0bfb\u0c12\u0003\u0002\u0002",
    "\u0002\u0bfc\u0bfd\u0007\u0013\u0002\u0002\u0bfd\u0bfe\u0007a\u0002",
    "\u0002\u0bfe\u0bff\u0005\u00fe\u0080\u0002\u0bff\u0c00\u0007b\u0002",
    "\u0002\u0c00\u0c01\u0007P\u0002\u0002\u0c01\u0c02\u0005X-\u0002\u0c02",
    "\u0c03\u0007Q\u0002\u0002\u0c03\u0c04\u0007\u0002\u0002\u0003\u0c04",
    "\u0c12\u0003\u0002\u0002\u0002\u0c05\u0c06\u0007F\u0002\u0002\u0c06",
    "\u0c07\u0007P\u0002\u0002\u0c07\u0c08\u0005X-\u0002\u0c08\u0c09\u0007",
    "Q\u0002\u0002\u0c09\u0c0a\u0007\u0002\u0002\u0003\u0c0a\u0c12\u0003",
    "\u0002\u0002\u0002\u0c0b\u0c0c\u0007F\u0002\u0002\u0c0c\u0c0d\u0007",
    "P\u0002\u0002\u0c0d\u0c0e\u0005\u00fe\u0080\u0002\u0c0e\u0c0f\u0007",
    "Q\u0002\u0002\u0c0f\u0c10\u0007\u0002\u0002\u0003\u0c10\u0c12\u0003",
    "\u0002\u0002\u0002\u0c11\u0b90\u0003\u0002\u0002\u0002\u0c11\u0b93\u0003",
    "\u0002\u0002\u0002\u0c11\u0b99\u0003\u0002\u0002\u0002\u0c11\u0b9f\u0003",
    "\u0002\u0002\u0002\u0c11\u0ba7\u0003\u0002\u0002\u0002\u0c11\u0baf\u0003",
    "\u0002\u0002\u0002\u0c11\u0bb7\u0003\u0002\u0002\u0002\u0c11\u0bbb\u0003",
    "\u0002\u0002\u0002\u0c11\u0bbf\u0003\u0002\u0002\u0002\u0c11\u0bc7\u0003",
    "\u0002\u0002\u0002\u0c11\u0bcf\u0003\u0002\u0002\u0002\u0c11\u0bd4\u0003",
    "\u0002\u0002\u0002\u0c11\u0bd9\u0003\u0002\u0002\u0002\u0c11\u0bdd\u0003",
    "\u0002\u0002\u0002\u0c11\u0be1\u0003\u0002\u0002\u0002\u0c11\u0bea\u0003",
    "\u0002\u0002\u0002\u0c11\u0bf3\u0003\u0002\u0002\u0002\u0c11\u0bfc\u0003",
    "\u0002\u0002\u0002\u0c11\u0c05\u0003\u0002\u0002\u0002\u0c11\u0c0b\u0003",
    "\u0002\u0002\u0002\u0c12\u019f\u0003\u0002\u0002\u0002\u0c13\u0c14\u0005",
    "\u011a\u008e\u0002\u0c14\u0c15\u0007\u0002\u0002\u0003\u0c15\u01a1\u0003",
    "\u0002\u0002\u0002\u0c16\u0c18\u0005\f\u0007\u0002\u0c17\u0c16\u0003",
    "\u0002\u0002\u0002\u0c17\u0c18\u0003\u0002\u0002\u0002\u0c18\u0c19\u0003",
    "\u0002\u0002\u0002\u0c19\u0c1a\u0005\u009aN\u0002\u0c1a\u0c1b\u0007",
    "z\u0002\u0002\u0c1b\u0c1c\u0007^\u0002\u0002\u0c1c\u0c1d\u0005\u009a",
    "N\u0002\u0c1d\u0c1e\u0007\u0002\u0002\u0003\u0c1e\u0c33\u0003\u0002",
    "\u0002\u0002\u0c1f\u0c20\u0005\f\u0007\u0002\u0c20\u0c21\u0007?\u0002",
    "\u0002\u0c21\u0c22\u0005\u015e\u00b0\u0002\u0c22\u0c23\u0007z\u0002",
    "\u0002\u0c23\u0c24\u0007^\u0002\u0002\u0c24\u0c25\u0005\u009aN\u0002",
    "\u0c25\u0c26\u0007\u0002\u0002\u0003\u0c26\u0c33\u0003\u0002\u0002\u0002",
    "\u0c27\u0c29\u0005\f\u0007\u0002\u0c28\u0c27\u0003\u0002\u0002\u0002",
    "\u0c28\u0c29\u0003\u0002\u0002\u0002\u0c29\u0c2a\u0003\u0002\u0002\u0002",
    "\u0c2a\u0c2b\u0007^\u0002\u0002\u0c2b\u0c2c\u0005\u009aN\u0002\u0c2c",
    "\u0c2d\u0007\u0002\u0002\u0003\u0c2d\u0c33\u0003\u0002\u0002\u0002\u0c2e",
    "\u0c2f\u0007^\u0002\u0002\u0c2f\u0c30\u0005\u009cO\u0002\u0c30\u0c31",
    "\u0007\u0002\u0002\u0003\u0c31\u0c33\u0003\u0002\u0002\u0002\u0c32\u0c17",
    "\u0003\u0002\u0002\u0002\u0c32\u0c1f\u0003\u0002\u0002\u0002\u0c32\u0c28",
    "\u0003\u0002\u0002\u0002\u0c32\u0c2e\u0003\u0002\u0002\u0002\u0c33\u01a3",
    "\u0003\u0002\u0002\u0002\u0c34\u0c35\u0005 \u0011\u0002\u0c35\u0c36",
    "\u0007\u0002\u0002\u0003\u0c36\u0c63\u0003\u0002\u0002\u0002\u0c37\u0c38",
    "\u0007s\u0002\u0002\u0c38\u0c39\u0005:\u001e\u0002\u0c39\u0c3a\u0007",
    "\u0002\u0002\u0003\u0c3a\u0c63\u0003\u0002\u0002\u0002\u0c3b\u0c3c\u0007",
    "t\u0002\u0002\u0c3c\u0c3d\u0005:\u001e\u0002\u0c3d\u0c3e\u0007\u0002",
    "\u0002\u0003\u0c3e\u0c63\u0003\u0002\u0002\u0002\u0c3f\u0c40\u0005(",
    "\u0015\u0002\u0c40\u0c41\u0005:\u001e\u0002\u0c41\u0c42\u0007\u0002",
    "\u0002\u0003\u0c42\u0c63\u0003\u0002\u0002\u0002\u0c43\u0c44\u00079",
    "\u0002\u0002\u0c44\u0c45\u0005&\u0014\u0002\u0c45\u0c46\u0007\u0002",
    "\u0002\u0003\u0c46\u0c63\u0003\u0002\u0002\u0002\u0c47\u0c48\u00079",
    "\u0002\u0002\u0c48\u0c49\u0007P\u0002\u0002\u0c49\u0c4a\u0005\u00fe",
    "\u0080\u0002\u0c4a\u0c4b\u0007Q\u0002\u0002\u0c4b\u0c4c\u0007\u0002",
    "\u0002\u0003\u0c4c\u0c63\u0003\u0002\u0002\u0002\u0c4d\u0c4e\u00079",
    "\u0002\u0002\u0c4e\u0c4f\u0007~\u0002\u0002\u0c4f\u0c50\u0007P\u0002",
    "\u0002\u0c50\u0c51\u0007\u007f\u0002\u0002\u0c51\u0c52\u0007Q\u0002",
    "\u0002\u0c52\u0c63\u0007\u0002\u0002\u0003\u0c53\u0c54\u0007\u0006\u0002",
    "\u0002\u0c54\u0c55\u0007P\u0002\u0002\u0c55\u0c56\u0005\u00fe\u0080",
    "\u0002\u0c56\u0c57\u0007Q\u0002\u0002\u0c57\u0c58\u0007\u0002\u0002",
    "\u0003\u0c58\u0c63\u0003\u0002\u0002\u0002\u0c59\u0c5a\u00058\u001d",
    "\u0002\u0c5a\u0c5b\u0007\u0002\u0002\u0003\u0c5b\u0c63\u0003\u0002\u0002",
    "\u0002\u0c5c\u0c5d\u0005*\u0016\u0002\u0c5d\u0c5e\u0007\u0002\u0002",
    "\u0003\u0c5e\u0c63\u0003\u0002\u0002\u0002\u0c5f\u0c60\u00056\u001c",
    "\u0002\u0c60\u0c61\u0007\u0002\u0002\u0003\u0c61\u0c63\u0003\u0002\u0002",
    "\u0002\u0c62\u0c34\u0003\u0002\u0002\u0002\u0c62\u0c37\u0003\u0002\u0002",
    "\u0002\u0c62\u0c3b\u0003\u0002\u0002\u0002\u0c62\u0c3f\u0003\u0002\u0002",
    "\u0002\u0c62\u0c43\u0003\u0002\u0002\u0002\u0c62\u0c47\u0003\u0002\u0002",
    "\u0002\u0c62\u0c4d\u0003\u0002\u0002\u0002\u0c62\u0c53\u0003\u0002\u0002",
    "\u0002\u0c62\u0c59\u0003\u0002\u0002\u0002\u0c62\u0c5c\u0003\u0002\u0002",
    "\u0002\u0c62\u0c5f\u0003\u0002\u0002\u0002\u0c63\u01a5\u0003\u0002\u0002",
    "\u0002\u0c64\u0c65\u0007]\u0002\u0002\u0c65\u0c73\u0007\u0002\u0002",
    "\u0003\u0c66\u0c67\u0007X\u0002\u0002\u0c67\u0c73\u0007\u0002\u0002",
    "\u0003\u0c68\u0c69\u0007\\\u0002\u0002\u0c69\u0c73\u0007\u0002\u0002",
    "\u0003\u0c6a\u0c6b\u0007V\u0002\u0002\u0c6b\u0c73\u0007\u0002\u0002",
    "\u0003\u0c6c\u0c6d\u0007_\u0002\u0002\u0c6d\u0c73\u0007\u0002\u0002",
    "\u0003\u0c6e\u0c6f\u0007^\u0002\u0002\u0c6f\u0c73\u0007\u0002\u0002",
    "\u0003\u0c70\u0c71\u0007W\u0002\u0002\u0c71\u0c73\u0007\u0002\u0002",
    "\u0003\u0c72\u0c64\u0003\u0002\u0002\u0002\u0c72\u0c66\u0003\u0002\u0002",
    "\u0002\u0c72\u0c68\u0003\u0002\u0002\u0002\u0c72\u0c6a\u0003\u0002\u0002",
    "\u0002\u0c72\u0c6c\u0003\u0002\u0002\u0002\u0c72\u0c6e\u0003\u0002\u0002",
    "\u0002\u0c72\u0c70\u0003\u0002\u0002\u0002\u0c73\u01a7\u0003\u0002\u0002",
    "\u0002\u0c74\u0c76\u0007z\u0002\u0002\u0c75\u0c74\u0003\u0002\u0002",
    "\u0002\u0c75\u0c76\u0003\u0002\u0002\u0002\u0c76\u0c77\u0003\u0002\u0002",
    "\u0002\u0c77\u0c79\u0007,\u0002\u0002\u0c78\u0c7a\u0005,\u0017\u0002",
    "\u0c79\u0c78\u0003\u0002\u0002\u0002\u0c79\u0c7a\u0003\u0002\u0002\u0002",
    "\u0c7a\u0c7b\u0003\u0002\u0002\u0002\u0c7b\u0c7d\u0005.\u0018\u0002",
    "\u0c7c\u0c7e\u00054\u001b\u0002\u0c7d\u0c7c\u0003\u0002\u0002\u0002",
    "\u0c7d\u0c7e\u0003\u0002\u0002\u0002\u0c7e\u0c7f\u0003\u0002\u0002\u0002",
    "\u0c7f\u0c80\u0007\u0002\u0002\u0003\u0c80\u0c91\u0003\u0002\u0002\u0002",
    "\u0c81\u0c83\u0007z\u0002\u0002\u0c82\u0c81\u0003\u0002\u0002\u0002",
    "\u0c82\u0c83\u0003\u0002\u0002\u0002\u0c83\u0c84\u0003\u0002\u0002\u0002",
    "\u0c84\u0c86\u0007,\u0002\u0002\u0c85\u0c87\u0005,\u0017\u0002\u0c86",
    "\u0c85\u0003\u0002\u0002\u0002\u0c86\u0c87\u0003\u0002\u0002\u0002\u0c87",
    "\u0c88\u0003\u0002\u0002\u0002\u0c88\u0c89\u0007P\u0002\u0002\u0c89",
    "\u0c8a\u0005\u00fe\u0080\u0002\u0c8a\u0c8c\u0007Q\u0002\u0002\u0c8b",
    "\u0c8d\u00054\u001b\u0002\u0c8c\u0c8b\u0003\u0002\u0002\u0002\u0c8c",
    "\u0c8d\u0003\u0002\u0002\u0002\u0c8d\u0c8e\u0003\u0002\u0002\u0002\u0c8e",
    "\u0c8f\u0007\u0002\u0002\u0003\u0c8f\u0c91\u0003\u0002\u0002\u0002\u0c90",
    "\u0c75\u0003\u0002\u0002\u0002\u0c90\u0c82\u0003\u0002\u0002\u0002\u0c91",
    "\u01a9\u0003\u0002\u0002\u0002\u0c92\u0c93\u0007P\u0002\u0002\u0c93",
    "\u0c94\u0005\"\u0012\u0002\u0c94\u0c95\u0007Q\u0002\u0002\u0c95\u0c96",
    "\u0007\u0002\u0002\u0003\u0c96\u01ab\u0003\u0002\u0002\u0002\u0c97\u0c99",
    "\u0005\u0094K\u0002\u0c98\u0c9a\u00050\u0019\u0002\u0c99\u0c98\u0003",
    "\u0002\u0002\u0002\u0c99\u0c9a\u0003\u0002\u0002\u0002\u0c9a\u0c9b\u0003",
    "\u0002\u0002\u0002\u0c9b\u0c9c\u0007\u0002\u0002\u0003\u0c9c\u01ad\u0003",
    "\u0002\u0002\u0002\u0c9d\u0c9f\u0005\u00f4{\u0002\u0c9e\u0ca0\u0005",
    "0\u0019\u0002\u0c9f\u0c9e\u0003\u0002\u0002\u0002\u0c9f\u0ca0\u0003",
    "\u0002\u0002\u0002\u0ca0\u0ca1\u0003\u0002\u0002\u0002\u0ca1\u0ca2\u0007",
    "\u0002\u0002\u0003\u0ca2\u0ca7\u0003\u0002\u0002\u0002\u0ca3\u0ca4\u0005",
    "2\u001a\u0002\u0ca4\u0ca5\u0007\u0002\u0002\u0003\u0ca5\u0ca7\u0003",
    "\u0002\u0002\u0002\u0ca6\u0c9d\u0003\u0002\u0002\u0002\u0ca6\u0ca3\u0003",
    "\u0002\u0002\u0002\u0ca7\u01af\u0003\u0002\u0002\u0002\u0ca8\u0ca9\u0007",
    "R\u0002\u0002\u0ca9\u0caa\u0005X-\u0002\u0caa\u0cac\u0007S\u0002\u0002",
    "\u0cab\u0cad\u0005\u00d0i\u0002\u0cac\u0cab\u0003\u0002\u0002\u0002",
    "\u0cac\u0cad\u0003\u0002\u0002\u0002\u0cad\u0cae\u0003\u0002\u0002\u0002",
    "\u0cae\u0caf\u0007\u0002\u0002\u0003\u0caf\u0cba\u0003\u0002\u0002\u0002",
    "\u0cb0\u0cb1\u00052\u001a\u0002\u0cb1\u0cb2\u0007R\u0002\u0002\u0cb2",
    "\u0cb3\u0005Z.\u0002\u0cb3\u0cb5\u0007S\u0002\u0002\u0cb4\u0cb6\u0005",
    "\u00d0i\u0002\u0cb5\u0cb4\u0003\u0002\u0002\u0002\u0cb5\u0cb6\u0003",
    "\u0002\u0002\u0002\u0cb6\u0cb7\u0003\u0002\u0002\u0002\u0cb7\u0cb8\u0007",
    "\u0002\u0002\u0003\u0cb8\u0cba\u0003\u0002\u0002\u0002\u0cb9\u0ca8\u0003",
    "\u0002\u0002\u0002\u0cb9\u0cb0\u0003\u0002\u0002\u0002\u0cba\u01b1\u0003",
    "\u0002\u0002\u0002\u0cbb\u0cbd\u0007P\u0002\u0002\u0cbc\u0cbe\u0005",
    "\"\u0012\u0002\u0cbd\u0cbc\u0003\u0002\u0002\u0002\u0cbd\u0cbe\u0003",
    "\u0002\u0002\u0002\u0cbe\u0cbf\u0003\u0002\u0002\u0002\u0cbf\u0cc0\u0007",
    "Q\u0002\u0002\u0cc0\u0cc5\u0007\u0002\u0002\u0003\u0cc1\u0cc2\u0005",
    "\u011c\u008f\u0002\u0cc2\u0cc3\u0007\u0002\u0002\u0003\u0cc3\u0cc5\u0003",
    "\u0002\u0002\u0002\u0cc4\u0cbb\u0003\u0002\u0002\u0002\u0cc4\u0cc1\u0003",
    "\u0002\u0002\u0002\u0cc5\u01b3\u0003\u0002\u0002\u0002\u0cc6\u0cc8\u0007",
    "z\u0002\u0002\u0cc7\u0cc6\u0003\u0002\u0002\u0002\u0cc7\u0cc8\u0003",
    "\u0002\u0002\u0002\u0cc8\u0cc9\u0003\u0002\u0002\u0002\u0cc9\u0cca\u0007",
    "\u0017\u0002\u0002\u0cca\u0ccb\u0005:\u001e\u0002\u0ccb\u0ccc\u0007",
    "\u0002\u0002\u0003\u0ccc\u0cd7\u0003\u0002\u0002\u0002\u0ccd\u0ccf\u0007",
    "z\u0002\u0002\u0cce\u0ccd\u0003\u0002\u0002\u0002\u0cce\u0ccf\u0003",
    "\u0002\u0002\u0002\u0ccf\u0cd0\u0003\u0002\u0002\u0002\u0cd0\u0cd1\u0007",
    "\u0017\u0002\u0002\u0cd1\u0cd2\u0007R\u0002\u0002\u0cd2\u0cd3\u0007",
    "S\u0002\u0002\u0cd3\u0cd4\u0005:\u001e\u0002\u0cd4\u0cd5\u0007\u0002",
    "\u0002\u0003\u0cd5\u0cd7\u0003\u0002\u0002\u0002\u0cd6\u0cc7\u0003\u0002",
    "\u0002\u0002\u0cd6\u0cce\u0003\u0002\u0002\u0002\u0cd7\u01b5\u0003\u0002",
    "\u0002\u0002\u0cd8\u0cd9\u0007-\u0002\u0002\u0cd9\u0cda\u0007P\u0002",
    "\u0002\u0cda\u0cdb\u0005X-\u0002\u0cdb\u0cdc\u0007Q\u0002\u0002\u0cdc",
    "\u0cdd\u0007\u0002\u0002\u0003\u0cdd\u01b7\u0003\u0002\u0002\u0002\u0cde",
    "\u0cdf\u0005&\u0014\u0002\u0cdf\u0ce0\u0007\u0002\u0002\u0003\u0ce0",
    "\u0ce8\u0003\u0002\u0002\u0002\u0ce1\u0ce2\u0007P\u0002\u0002\u0ce2",
    "\u0ce3\u0005\u00fe\u0080\u0002\u0ce3\u0ce4\u0007Q\u0002\u0002\u0ce4",
    "\u0ce5\u0005:\u001e\u0002\u0ce5\u0ce6\u0007\u0002\u0002\u0003\u0ce6",
    "\u0ce8\u0003\u0002\u0002\u0002\u0ce7\u0cde\u0003\u0002\u0002\u0002\u0ce7",
    "\u0ce1\u0003\u0002\u0002\u0002\u0ce8\u01b9\u0003\u0002\u0002\u0002\u0ce9",
    "\u0cea\u0005:\u001e\u0002\u0cea\u0ceb\u0007\u0002\u0002\u0003\u0ceb",
    "\u0cf7\u0003\u0002\u0002\u0002\u0cec\u0ced\u0005<\u001f\u0002\u0ced",
    "\u0cee\u0007}\u0002\u0002\u0cee\u0cef\u0005:\u001e\u0002\u0cef\u0cf0",
    "\u0007\u0002\u0002\u0003\u0cf0\u0cf7\u0003\u0002\u0002\u0002\u0cf1\u0cf2",
    "\u0005<\u001f\u0002\u0cf2\u0cf3\u0007v\u0002\u0002\u0cf3\u0cf4\u0005",
    ":\u001e\u0002\u0cf4\u0cf5\u0007\u0002\u0002\u0003\u0cf5\u0cf7\u0003",
    "\u0002\u0002\u0002\u0cf6\u0ce9\u0003\u0002\u0002\u0002\u0cf6\u0cec\u0003",
    "\u0002\u0002\u0002\u0cf6\u0cf1\u0003\u0002\u0002\u0002\u0cf7\u01bb\u0003",
    "\u0002\u0002\u0002\u0cf8\u0cf9\u0005<\u001f\u0002\u0cf9\u0cfa\u0007",
    "\u0002\u0002\u0003\u0cfa\u0d0b\u0003\u0002\u0002\u0002\u0cfb\u0cfc\u0005",
    "> \u0002\u0cfc\u0cfd\u0007X\u0002\u0002\u0cfd\u0cfe\u0005<\u001f\u0002",
    "\u0cfe\u0cff\u0007\u0002\u0002\u0003\u0cff\u0d0b\u0003\u0002\u0002\u0002",
    "\u0d00\u0d01\u0005> \u0002\u0d01\u0d02\u0007Y\u0002\u0002\u0d02\u0d03",
    "\u0005<\u001f\u0002\u0d03\u0d04\u0007\u0002\u0002\u0003\u0d04\u0d0b",
    "\u0003\u0002\u0002\u0002\u0d05\u0d06\u0005> \u0002\u0d06\u0d07\u0007",
    "Z\u0002\u0002\u0d07\u0d08\u0005<\u001f\u0002\u0d08\u0d09\u0007\u0002",
    "\u0002\u0003\u0d09\u0d0b\u0003\u0002\u0002\u0002\u0d0a\u0cf8\u0003\u0002",
    "\u0002\u0002\u0d0a\u0cfb\u0003\u0002\u0002\u0002\u0d0a\u0d00\u0003\u0002",
    "\u0002\u0002\u0d0a\u0d05\u0003\u0002\u0002\u0002\u0d0b\u01bd\u0003\u0002",
    "\u0002\u0002\u0d0c\u0d0d\u0005> \u0002\u0d0d\u0d0e\u0007\u0002\u0002",
    "\u0003\u0d0e\u0d1a\u0003\u0002\u0002\u0002\u0d0f\u0d10\u0005@!\u0002",
    "\u0d10\u0d11\u0007V\u0002\u0002\u0d11\u0d12\u0005> \u0002\u0d12\u0d13",
    "\u0007\u0002\u0002\u0003\u0d13\u0d1a\u0003\u0002\u0002\u0002\u0d14\u0d15",
    "\u0005@!\u0002\u0d15\u0d16\u0007W\u0002\u0002\u0d16\u0d17\u0005> \u0002",
    "\u0d17\u0d18\u0007\u0002\u0002\u0003\u0d18\u0d1a\u0003\u0002\u0002\u0002",
    "\u0d19\u0d0c\u0003\u0002\u0002\u0002\u0d19\u0d0f\u0003\u0002\u0002\u0002",
    "\u0d19\u0d14\u0003\u0002\u0002\u0002\u0d1a\u01bf\u0003\u0002\u0002\u0002",
    "\u0d1b\u0d1c\u0005@!\u0002\u0d1c\u0d1d\u0007\u0002\u0002\u0003\u0d1d",
    "\u0d29\u0003\u0002\u0002\u0002\u0d1e\u0d1f\u0005B\"\u0002\u0d1f\u0d20",
    "\u0007k\u0002\u0002\u0d20\u0d21\u0005@!\u0002\u0d21\u0d22\u0007\u0002",
    "\u0002\u0003\u0d22\u0d29\u0003\u0002\u0002\u0002\u0d23\u0d24\u0005B",
    "\"\u0002\u0d24\u0d25\u0005\u0300\u0181\u0002\u0d25\u0d26\u0005@!\u0002",
    "\u0d26\u0d27\u0007\u0002\u0002\u0003\u0d27\u0d29\u0003\u0002\u0002\u0002",
    "\u0d28\u0d1b\u0003\u0002\u0002\u0002\u0d28\u0d1e\u0003\u0002\u0002\u0002",
    "\u0d28\u0d23\u0003\u0002\u0002\u0002\u0d29\u01c1\u0003\u0002\u0002\u0002",
    "\u0d2a\u0d2b\u0005B\"\u0002\u0d2b\u0d2c\u0007\u0002\u0002\u0003\u0d2c",
    "\u0d42\u0003\u0002\u0002\u0002\u0d2d\u0d2e\u0005D#\u0002\u0d2e\u0d2f",
    "\u0007a\u0002\u0002\u0d2f\u0d30\u0005B\"\u0002\u0d30\u0d31\u0007\u0002",
    "\u0002\u0003\u0d31\u0d42\u0003\u0002\u0002\u0002\u0d32\u0d33\u0005D",
    "#\u0002\u0d33\u0d34\u0007b\u0002\u0002\u0d34\u0d35\u0005B\"\u0002\u0d35",
    "\u0d36\u0007\u0002\u0002\u0003\u0d36\u0d42\u0003\u0002\u0002\u0002\u0d37",
    "\u0d38\u0005D#\u0002\u0d38\u0d39\u0007o\u0002\u0002\u0d39\u0d3a\u0005",
    "B\"\u0002\u0d3a\u0d3b\u0007\u0002\u0002\u0003\u0d3b\u0d42\u0003\u0002",
    "\u0002\u0002\u0d3c\u0d3d\u0005D#\u0002\u0d3d\u0d3e\u0007p\u0002\u0002",
    "\u0d3e\u0d3f\u0005B\"\u0002\u0d3f\u0d40\u0007\u0002\u0002\u0003\u0d40",
    "\u0d42\u0003\u0002\u0002\u0002\u0d41\u0d2a\u0003\u0002\u0002\u0002\u0d41",
    "\u0d2d\u0003\u0002\u0002\u0002\u0d41\u0d32\u0003\u0002\u0002\u0002\u0d41",
    "\u0d37\u0003\u0002\u0002\u0002\u0d41\u0d3c\u0003\u0002\u0002\u0002\u0d42",
    "\u01c3\u0003\u0002\u0002\u0002\u0d43\u0d44\u0005D#\u0002\u0d44\u0d45",
    "\u0007\u0002\u0002\u0003\u0d45\u0d51\u0003\u0002\u0002\u0002\u0d46\u0d47",
    "\u0005F$\u0002\u0d47\u0d48\u0007m\u0002\u0002\u0d48\u0d49\u0005D#\u0002",
    "\u0d49\u0d4a\u0007\u0002\u0002\u0003\u0d4a\u0d51\u0003\u0002\u0002\u0002",
    "\u0d4b\u0d4c\u0005F$\u0002\u0d4c\u0d4d\u0007n\u0002\u0002\u0d4d\u0d4e",
    "\u0005D#\u0002\u0d4e\u0d4f\u0007\u0002\u0002\u0003\u0d4f\u0d51\u0003",
    "\u0002\u0002\u0002\u0d50\u0d43\u0003\u0002\u0002\u0002\u0d50\u0d46\u0003",
    "\u0002\u0002\u0002\u0d50\u0d4b\u0003\u0002\u0002\u0002\u0d51\u01c5\u0003",
    "\u0002\u0002\u0002\u0d52\u0d53\u0005F$\u0002\u0d53\u0d54\u0007\u0002",
    "\u0002\u0003\u0d54\u0d5b\u0003\u0002\u0002\u0002\u0d55\u0d56\u0005H",
    "%\u0002\u0d56\u0d57\u0007\\\u0002\u0002\u0d57\u0d58\u0005F$\u0002\u0d58",
    "\u0d59\u0007\u0002\u0002\u0003\u0d59\u0d5b\u0003\u0002\u0002\u0002\u0d5a",
    "\u0d52\u0003\u0002\u0002\u0002\u0d5a\u0d55\u0003\u0002\u0002\u0002\u0d5b",
    "\u01c7\u0003\u0002\u0002\u0002\u0d5c\u0d5d\u0005H%\u0002\u0d5d\u0d5e",
    "\u0007\u0002\u0002\u0003\u0d5e\u0d65\u0003\u0002\u0002\u0002\u0d5f\u0d60",
    "\u0005J&\u0002\u0d60\u0d61\u0007[\u0002\u0002\u0d61\u0d62\u0005H%\u0002",
    "\u0d62\u0d63\u0007\u0002\u0002\u0003\u0d63\u0d65\u0003\u0002\u0002\u0002",
    "\u0d64\u0d5c\u0003\u0002\u0002\u0002\u0d64\u0d5f\u0003\u0002\u0002\u0002",
    "\u0d65\u01c9\u0003\u0002\u0002\u0002\u0d66\u0d67\u0005J&\u0002\u0d67",
    "\u0d68\u0007\u0002\u0002\u0003\u0d68\u0d6f\u0003\u0002\u0002\u0002\u0d69",
    "\u0d6a\u0005L\'\u0002\u0d6a\u0d6b\u0007]\u0002\u0002\u0d6b\u0d6c\u0005",
    "J&\u0002\u0d6c\u0d6d\u0007\u0002\u0002\u0003\u0d6d\u0d6f\u0003\u0002",
    "\u0002\u0002\u0d6e\u0d66\u0003\u0002\u0002\u0002\u0d6e\u0d69\u0003\u0002",
    "\u0002\u0002\u0d6f\u01cb\u0003\u0002\u0002\u0002\u0d70\u0d71\u0005L",
    "\'\u0002\u0d71\u0d72\u0007\u0002\u0002\u0003\u0d72\u0d79\u0003\u0002",
    "\u0002\u0002\u0d73\u0d74\u0005N(\u0002\u0d74\u0d75\u0007q\u0002\u0002",
    "\u0d75\u0d76\u0005L\'\u0002\u0d76\u0d77\u0007\u0002\u0002\u0003\u0d77",
    "\u0d79\u0003\u0002\u0002\u0002\u0d78\u0d70\u0003\u0002\u0002\u0002\u0d78",
    "\u0d73\u0003\u0002\u0002\u0002\u0d79\u01cd\u0003\u0002\u0002\u0002\u0d7a",
    "\u0d7b\u0005N(\u0002\u0d7b\u0d7c\u0007\u0002\u0002\u0003\u0d7c\u0d83",
    "\u0003\u0002\u0002\u0002\u0d7d\u0d7e\u0005P)\u0002\u0d7e\u0d7f\u0007",
    "r\u0002\u0002\u0d7f\u0d80\u0005N(\u0002\u0d80\u0d81\u0007\u0002\u0002",
    "\u0003\u0d81\u0d83\u0003\u0002\u0002\u0002\u0d82\u0d7a\u0003\u0002\u0002",
    "\u0002\u0d82\u0d7d\u0003\u0002\u0002\u0002\u0d83\u01cf\u0003\u0002\u0002",
    "\u0002\u0d84\u0d85\u0005P)\u0002\u0d85\u0d86\u0007\u0002\u0002\u0003",
    "\u0d86\u0d8f\u0003\u0002\u0002\u0002\u0d87\u0d88\u0005P)\u0002\u0d88",
    "\u0d89\u0007x\u0002\u0002\u0d89\u0d8a\u0005X-\u0002\u0d8a\u0d8b\u0007",
    "y\u0002\u0002\u0d8b\u0d8c\u0005T+\u0002\u0d8c\u0d8d\u0007\u0002\u0002",
    "\u0003\u0d8d\u0d8f\u0003\u0002\u0002\u0002\u0d8e\u0d84\u0003\u0002\u0002",
    "\u0002\u0d8e\u0d87\u0003\u0002\u0002\u0002\u0d8f\u01d1\u0003\u0002\u0002",
    "\u0002\u0d90\u0d91\u0005R*\u0002\u0d91\u0d92\u0007\u0002\u0002\u0003",
    "\u0d92\u0d9c\u0003\u0002\u0002\u0002\u0d93\u0d94\u0005P)\u0002\u0d94",
    "\u0d95\u0005V,\u0002\u0d95\u0d96\u0005\u0118\u008d\u0002\u0d96\u0d97",
    "\u0007\u0002\u0002\u0003\u0d97\u0d9c\u0003\u0002\u0002\u0002\u0d98\u0d99",
    "\u0005\u0178\u00bd\u0002\u0d99\u0d9a\u0007\u0002\u0002\u0003\u0d9a\u0d9c",
    "\u0003\u0002\u0002\u0002\u0d9b\u0d90\u0003\u0002\u0002\u0002\u0d9b\u0d93",
    "\u0003\u0002\u0002\u0002\u0d9b\u0d98\u0003\u0002\u0002\u0002\u0d9c\u01d3",
    "\u0003\u0002\u0002\u0002\u0d9d\u0d9e\u0007`\u0002\u0002\u0d9e\u0db5",
    "\u0007\u0002\u0002\u0003\u0d9f\u0da0\u0007e\u0002\u0002\u0da0\u0db5",
    "\u0007\u0002\u0002\u0003\u0da1\u0da2\u0007f\u0002\u0002\u0da2\u0db5",
    "\u0007\u0002\u0002\u0003\u0da3\u0da4\u0007g\u0002\u0002\u0da4\u0db5",
    "\u0007\u0002\u0002\u0003\u0da5\u0da6\u0007c\u0002\u0002\u0da6\u0db5",
    "\u0007\u0002\u0002\u0003\u0da7\u0da8\u0007d\u0002\u0002\u0da8\u0db5",
    "\u0007\u0002\u0002\u0003\u0da9\u0daa\u0005\u0302\u0182\u0002\u0daa\u0dab",
    "\u0007\u0002\u0002\u0003\u0dab\u0db5\u0003\u0002\u0002\u0002\u0dac\u0dad",
    "\u0007l\u0002\u0002\u0dad\u0db5\u0007\u0002\u0002\u0003\u0dae\u0daf",
    "\u0007i\u0002\u0002\u0daf\u0db5\u0007\u0002\u0002\u0003\u0db0\u0db1",
    "\u0007h\u0002\u0002\u0db1\u0db5\u0007\u0002\u0002\u0003\u0db2\u0db3",
    "\u0007j\u0002\u0002\u0db3\u0db5\u0007\u0002\u0002\u0003\u0db4\u0d9d",
    "\u0003\u0002\u0002\u0002\u0db4\u0d9f\u0003\u0002\u0002\u0002\u0db4\u0da1",
    "\u0003\u0002\u0002\u0002\u0db4\u0da3\u0003\u0002\u0002\u0002\u0db4\u0da5",
    "\u0003\u0002\u0002\u0002\u0db4\u0da7\u0003\u0002\u0002\u0002\u0db4\u0da9",
    "\u0003\u0002\u0002\u0002\u0db4\u0dac\u0003\u0002\u0002\u0002\u0db4\u0dae",
    "\u0003\u0002\u0002\u0002\u0db4\u0db0\u0003\u0002\u0002\u0002\u0db4\u0db2",
    "\u0003\u0002\u0002\u0002\u0db5\u01d5\u0003\u0002\u0002\u0002\u0db6\u0db7",
    "\u0005T+\u0002\u0db7\u0db8\u0007\u0002\u0002\u0003\u0db8\u0dbf\u0003",
    "\u0002\u0002\u0002\u0db9\u0dba\u0005X-\u0002\u0dba\u0dbb\u0007u\u0002",
    "\u0002\u0dbb\u0dbc\u0005T+\u0002\u0dbc\u0dbd\u0007\u0002\u0002\u0003",
    "\u0dbd\u0dbf\u0003\u0002\u0002\u0002\u0dbe\u0db6\u0003\u0002\u0002\u0002",
    "\u0dbe\u0db9\u0003\u0002\u0002\u0002\u0dbf\u01d7\u0003\u0002\u0002\u0002",
    "\u0dc0\u0dc1\u0005R*\u0002\u0dc1\u0dc2\u0007\u0002\u0002\u0003\u0dc2",
    "\u01d9\u0003\u0002\u0002\u0002\u0dc3\u0dc4\u0005^0\u0002\u0dc4\u0dc5",
    "\u0007\u0002\u0002\u0003\u0dc5\u0dee\u0003\u0002\u0002\u0002\u0dc6\u0dc8",
    "\u0005\u00d0i\u0002\u0dc7\u0dc6\u0003\u0002\u0002\u0002\u0dc7\u0dc8",
    "\u0003\u0002\u0002\u0002\u0dc8\u0dc9\u0003\u0002\u0002\u0002\u0dc9\u0dca",
    "\u0005`1\u0002\u0dca\u0dcb\u0007\u0002\u0002\u0003\u0dcb\u0dee\u0003",
    "\u0002\u0002\u0002\u0dcc\u0dce\u0005\u00d0i\u0002\u0dcd\u0dcc\u0003",
    "\u0002\u0002\u0002\u0dcd\u0dce\u0003\u0002\u0002\u0002\u0dce\u0dcf\u0003",
    "\u0002\u0002\u0002\u0dcf\u0dd0\u0005b2\u0002\u0dd0\u0dd1\u0007\u0002",
    "\u0002\u0003\u0dd1\u0dee\u0003\u0002\u0002\u0002\u0dd2\u0dd4\u0005\u00d0",
    "i\u0002\u0dd3\u0dd2\u0003\u0002\u0002\u0002\u0dd3\u0dd4\u0003\u0002",
    "\u0002\u0002\u0dd4\u0dd5\u0003\u0002\u0002\u0002\u0dd5\u0dd6\u0005f",
    "4\u0002\u0dd6\u0dd7\u0007\u0002\u0002\u0003\u0dd7\u0dee\u0003\u0002",
    "\u0002\u0002\u0dd8\u0dda\u0005\u00d0i\u0002\u0dd9\u0dd8\u0003\u0002",
    "\u0002\u0002\u0dd9\u0dda\u0003\u0002\u0002\u0002\u0dda\u0ddb\u0003\u0002",
    "\u0002\u0002\u0ddb\u0ddc\u0005j6\u0002\u0ddc\u0ddd\u0007\u0002\u0002",
    "\u0003\u0ddd\u0dee\u0003\u0002\u0002\u0002\u0dde\u0de0\u0005\u00d0i",
    "\u0002\u0ddf\u0dde\u0003\u0002\u0002\u0002\u0ddf\u0de0\u0003\u0002\u0002",
    "\u0002\u0de0\u0de1\u0003\u0002\u0002\u0002\u0de1\u0de2\u0005r:\u0002",
    "\u0de2\u0de3\u0007\u0002\u0002\u0003\u0de3\u0dee\u0003\u0002\u0002\u0002",
    "\u0de4\u0de5\u0005t;\u0002\u0de5\u0de6\u0007\u0002\u0002\u0003\u0de6",
    "\u0dee\u0003\u0002\u0002\u0002\u0de7\u0de9\u0005\u00d0i\u0002\u0de8",
    "\u0de7\u0003\u0002\u0002\u0002\u0de8\u0de9\u0003\u0002\u0002\u0002\u0de9",
    "\u0dea\u0003\u0002\u0002\u0002\u0dea\u0deb\u0005\u016e\u00b8\u0002\u0deb",
    "\u0dec\u0007\u0002\u0002\u0003\u0dec\u0dee\u0003\u0002\u0002\u0002\u0ded",
    "\u0dc3\u0003\u0002\u0002\u0002\u0ded\u0dc7\u0003\u0002\u0002\u0002\u0ded",
    "\u0dcd\u0003\u0002\u0002\u0002\u0ded\u0dd3\u0003\u0002\u0002\u0002\u0ded",
    "\u0dd9\u0003\u0002\u0002\u0002\u0ded\u0ddf\u0003\u0002\u0002\u0002\u0ded",
    "\u0de4\u0003\u0002\u0002\u0002\u0ded\u0de8\u0003\u0002\u0002\u0002\u0dee",
    "\u01db\u0003\u0002\u0002\u0002\u0def\u0df1\u0005\u00d0i\u0002\u0df0",
    "\u0def\u0003\u0002\u0002\u0002\u0df0\u0df1\u0003\u0002\u0002\u0002\u0df1",
    "\u0df2\u0003\u0002\u0002\u0002\u0df2\u0df3\u0007\u007f\u0002\u0002\u0df3",
    "\u0df4\u0007y\u0002\u0002\u0df4\u0df5\u0005\\/\u0002\u0df5\u0df6\u0007",
    "\u0002\u0002\u0003\u0df6\u0e09\u0003\u0002\u0002\u0002\u0df7\u0df9\u0005",
    "\u00d0i\u0002\u0df8\u0df7\u0003\u0002\u0002\u0002\u0df8\u0df9\u0003",
    "\u0002\u0002\u0002\u0df9\u0dfa\u0003\u0002\u0002\u0002\u0dfa\u0dfb\u0007",
    "\u000b\u0002\u0002\u0dfb\u0dfc\u0005Z.\u0002\u0dfc\u0dfd\u0007y\u0002",
    "\u0002\u0dfd\u0dfe\u0005\\/\u0002\u0dfe\u0dff\u0007\u0002\u0002\u0003",
    "\u0dff\u0e09\u0003\u0002\u0002\u0002\u0e00\u0e02\u0005\u00d0i\u0002",
    "\u0e01\u0e00\u0003\u0002\u0002\u0002\u0e01\u0e02\u0003\u0002\u0002\u0002",
    "\u0e02\u0e03\u0003\u0002\u0002\u0002\u0e03\u0e04\u0007\u0016\u0002\u0002",
    "\u0e04\u0e05\u0007y\u0002\u0002\u0e05\u0e06\u0005\\/\u0002\u0e06\u0e07",
    "\u0007\u0002\u0002\u0003\u0e07\u0e09\u0003\u0002\u0002\u0002\u0e08\u0df0",
    "\u0003\u0002\u0002\u0002\u0e08\u0df8\u0003\u0002\u0002\u0002\u0e08\u0e01",
    "\u0003\u0002\u0002\u0002\u0e09\u01dd\u0003\u0002\u0002\u0002\u0e0a\u0e0c",
    "\u0005X-\u0002\u0e0b\u0e0a\u0003\u0002\u0002\u0002\u0e0b\u0e0c\u0003",
    "\u0002\u0002\u0002\u0e0c\u0e0d\u0003\u0002\u0002\u0002\u0e0d\u0e0e\u0007",
    "{\u0002\u0002\u0e0e\u0e0f\u0007\u0002\u0002\u0003\u0e0f\u01df\u0003",
    "\u0002\u0002\u0002\u0e10\u0e12\u0007T\u0002\u0002\u0e11\u0e13\u0005",
    "d3\u0002\u0e12\u0e11\u0003\u0002\u0002\u0002\u0e12\u0e13\u0003\u0002",
    "\u0002\u0002\u0e13\u0e14\u0003\u0002\u0002\u0002\u0e14\u0e15\u0007U",
    "\u0002\u0002\u0e15\u0e16\u0007\u0002\u0002\u0003\u0e16\u01e1\u0003\u0002",
    "\u0002\u0002\u0e17\u0e18\u0005\\/\u0002\u0e18\u0e19\u0007\u0002\u0002",
    "\u0003\u0e19\u0e1f\u0003\u0002\u0002\u0002\u0e1a\u0e1b\u0005d3\u0002",
    "\u0e1b\u0e1c\u0005\\/\u0002\u0e1c\u0e1d\u0007\u0002\u0002\u0003\u0e1d",
    "\u0e1f\u0003\u0002\u0002\u0002\u0e1e\u0e17\u0003\u0002\u0002\u0002\u0e1e",
    "\u0e1a\u0003\u0002\u0002\u0002\u0e1f\u01e3\u0003\u0002\u0002\u0002\u0e20",
    "\u0e21\u0007&\u0002\u0002\u0e21\u0e22\u0007P\u0002\u0002\u0e22\u0e23",
    "\u0005h5\u0002\u0e23\u0e24\u0007Q\u0002\u0002\u0e24\u0e25\u0005\\/\u0002",
    "\u0e25\u0e26\u0007\u0002\u0002\u0003\u0e26\u0e38\u0003\u0002\u0002\u0002",
    "\u0e27\u0e28\u0007&\u0002\u0002\u0e28\u0e29\u0007P\u0002\u0002\u0e29",
    "\u0e2a\u0005h5\u0002\u0e2a\u0e2b\u0007Q\u0002\u0002\u0e2b\u0e2c\u0005",
    "\\/\u0002\u0e2c\u0e2d\u0007\u001b\u0002\u0002\u0e2d\u0e2e\u0005\\/\u0002",
    "\u0e2e\u0e2f\u0007\u0002\u0002\u0003\u0e2f\u0e38\u0003\u0002\u0002\u0002",
    "\u0e30\u0e31\u0007>\u0002\u0002\u0e31\u0e32\u0007P\u0002\u0002\u0e32",
    "\u0e33\u0005h5\u0002\u0e33\u0e34\u0007Q\u0002\u0002\u0e34\u0e35\u0005",
    "\\/\u0002\u0e35\u0e36\u0007\u0002\u0002\u0003\u0e36\u0e38\u0003\u0002",
    "\u0002\u0002\u0e37\u0e20\u0003\u0002\u0002\u0002\u0e37\u0e27\u0003\u0002",
    "\u0002\u0002\u0e37\u0e30\u0003\u0002\u0002\u0002\u0e38\u01e5\u0003\u0002",
    "\u0002\u0002\u0e39\u0e3a\u0005X-\u0002\u0e3a\u0e3b\u0007\u0002\u0002",
    "\u0003\u0e3b\u0e4e\u0003\u0002\u0002\u0002\u0e3c\u0e3e\u0005\u00d0i",
    "\u0002\u0e3d\u0e3c\u0003\u0002\u0002\u0002\u0e3d\u0e3e\u0003\u0002\u0002",
    "\u0002\u0e3e\u0e3f\u0003\u0002\u0002\u0002\u0e3f\u0e40\u0005\u0088E",
    "\u0002\u0e40\u0e41\u0005\u00eav\u0002\u0e41\u0e42\u0007`\u0002\u0002",
    "\u0e42\u0e43\u0005\u0118\u008d\u0002\u0e43\u0e44\u0007\u0002\u0002\u0003",
    "\u0e44\u0e4e\u0003\u0002\u0002\u0002\u0e45\u0e47\u0005\u00d0i\u0002",
    "\u0e46\u0e45\u0003\u0002\u0002\u0002\u0e46\u0e47\u0003\u0002\u0002\u0002",
    "\u0e47\u0e48\u0003\u0002\u0002\u0002\u0e48\u0e49\u0005\u0088E\u0002",
    "\u0e49\u0e4a\u0005\u00eav\u0002\u0e4a\u0e4b\u0005\u011c\u008f\u0002",
    "\u0e4b\u0e4c\u0007\u0002\u0002\u0003\u0e4c\u0e4e\u0003\u0002\u0002\u0002",
    "\u0e4d\u0e39\u0003\u0002\u0002\u0002\u0e4d\u0e3d\u0003\u0002\u0002\u0002",
    "\u0e4d\u0e46\u0003\u0002\u0002\u0002\u0e4e\u01e7\u0003\u0002\u0002\u0002",
    "\u0e4f\u0e50\u0007O\u0002\u0002\u0e50\u0e51\u0007P\u0002\u0002\u0e51",
    "\u0e52\u0005h5\u0002\u0e52\u0e53\u0007Q\u0002\u0002\u0e53\u0e54\u0005",
    "\\/\u0002\u0e54\u0e55\u0007\u0002\u0002\u0003\u0e55\u0e77\u0003\u0002",
    "\u0002\u0002\u0e56\u0e57\u0007\u0018\u0002\u0002\u0e57\u0e58\u0005\\",
    "/\u0002\u0e58\u0e59\u0007O\u0002\u0002\u0e59\u0e5a\u0007P\u0002\u0002",
    "\u0e5a\u0e5b\u0005X-\u0002\u0e5b\u0e5c\u0007Q\u0002\u0002\u0e5c\u0e5d",
    "\u0007{\u0002\u0002\u0e5d\u0e5e\u0007\u0002\u0002\u0003\u0e5e\u0e77",
    "\u0003\u0002\u0002\u0002\u0e5f\u0e60\u0007#\u0002\u0002\u0e60\u0e61",
    "\u0007P\u0002\u0002\u0e61\u0e63\u0005l7\u0002\u0e62\u0e64\u0005h5\u0002",
    "\u0e63\u0e62\u0003\u0002\u0002\u0002\u0e63\u0e64\u0003\u0002\u0002\u0002",
    "\u0e64\u0e65\u0003\u0002\u0002\u0002\u0e65\u0e67\u0007{\u0002\u0002",
    "\u0e66\u0e68\u0005X-\u0002\u0e67\u0e66\u0003\u0002\u0002\u0002\u0e67",
    "\u0e68\u0003\u0002\u0002\u0002\u0e68\u0e69\u0003\u0002\u0002\u0002\u0e69",
    "\u0e6a\u0007Q\u0002\u0002\u0e6a\u0e6b\u0005\\/\u0002\u0e6b\u0e6c\u0007",
    "\u0002\u0002\u0003\u0e6c\u0e77\u0003\u0002\u0002\u0002\u0e6d\u0e6e\u0007",
    "#\u0002\u0002\u0e6e\u0e6f\u0007P\u0002\u0002\u0e6f\u0e70\u0005n8\u0002",
    "\u0e70\u0e71\u0007y\u0002\u0002\u0e71\u0e72\u0005p9\u0002\u0e72\u0e73",
    "\u0007Q\u0002\u0002\u0e73\u0e74\u0005\\/\u0002\u0e74\u0e75\u0007\u0002",
    "\u0002\u0003\u0e75\u0e77\u0003\u0002\u0002\u0002\u0e76\u0e4f\u0003\u0002",
    "\u0002\u0002\u0e76\u0e56\u0003\u0002\u0002\u0002\u0e76\u0e5f\u0003\u0002",
    "\u0002\u0002\u0e76\u0e6d\u0003\u0002\u0002\u0002\u0e77\u01e9\u0003\u0002",
    "\u0002\u0002\u0e78\u0e79\u0005`1\u0002\u0e79\u0e7a\u0007\u0002\u0002",
    "\u0003\u0e7a\u0e7f\u0003\u0002\u0002\u0002\u0e7b\u0e7c\u0005~@\u0002",
    "\u0e7c\u0e7d\u0007\u0002\u0002\u0003\u0e7d\u0e7f\u0003\u0002\u0002\u0002",
    "\u0e7e\u0e78\u0003\u0002\u0002\u0002\u0e7e\u0e7b\u0003\u0002\u0002\u0002",
    "\u0e7f\u01eb\u0003\u0002\u0002\u0002\u0e80\u0e82\u0005\u00d0i\u0002",
    "\u0e81\u0e80\u0003\u0002\u0002\u0002\u0e81\u0e82\u0003\u0002\u0002\u0002",
    "\u0e82\u0e83\u0003\u0002\u0002\u0002\u0e83\u0e84\u0005\u0088E\u0002",
    "\u0e84\u0e85\u0005\u00eav\u0002\u0e85\u0e86\u0007\u0002\u0002\u0003",
    "\u0e86\u01ed\u0003\u0002\u0002\u0002\u0e87\u0e88\u0005X-\u0002\u0e88",
    "\u0e89\u0007\u0002\u0002\u0003\u0e89\u0e8e\u0003\u0002\u0002\u0002\u0e8a",
    "\u0e8b\u0005\u011c\u008f\u0002\u0e8b\u0e8c\u0007\u0002\u0002\u0003\u0e8c",
    "\u0e8e\u0003\u0002\u0002\u0002\u0e8d\u0e87\u0003\u0002\u0002\u0002\u0e8d",
    "\u0e8a\u0003\u0002\u0002\u0002\u0e8e\u01ef\u0003\u0002\u0002\u0002\u0e8f",
    "\u0e90\u0007\n\u0002\u0002\u0e90\u0e91\u0007{\u0002\u0002\u0e91\u0ea5",
    "\u0007\u0002\u0002\u0003\u0e92\u0e93\u0007\u0014\u0002\u0002\u0e93\u0e94",
    "\u0007{\u0002\u0002\u0e94\u0ea5\u0007\u0002\u0002\u0003\u0e95\u0e97",
    "\u00076\u0002\u0002\u0e96\u0e98\u0005X-\u0002\u0e97\u0e96\u0003\u0002",
    "\u0002\u0002\u0e97\u0e98\u0003\u0002\u0002\u0002\u0e98\u0e99\u0003\u0002",
    "\u0002\u0002\u0e99\u0e9a\u0007{\u0002\u0002\u0e9a\u0ea5\u0007\u0002",
    "\u0002\u0003\u0e9b\u0e9c\u00076\u0002\u0002\u0e9c\u0e9d\u0005\u011c",
    "\u008f\u0002\u0e9d\u0e9e\u0007{\u0002\u0002\u0e9e\u0e9f\u0007\u0002",
    "\u0002\u0003\u0e9f\u0ea5\u0003\u0002\u0002\u0002\u0ea0\u0ea1\u0007%",
    "\u0002\u0002\u0ea1\u0ea2\u0007\u007f\u0002\u0002\u0ea2\u0ea3\u0007{",
    "\u0002\u0002\u0ea3\u0ea5\u0007\u0002\u0002\u0003\u0ea4\u0e8f\u0003\u0002",
    "\u0002\u0002\u0ea4\u0e92\u0003\u0002\u0002\u0002\u0ea4\u0e95\u0003\u0002",
    "\u0002\u0002\u0ea4\u0e9b\u0003\u0002\u0002\u0002\u0ea4\u0ea0\u0003\u0002",
    "\u0002\u0002\u0ea5\u01f1\u0003\u0002\u0002\u0002\u0ea6\u0ea7\u0005z",
    ">\u0002\u0ea7\u0ea8\u0007\u0002\u0002\u0003\u0ea8\u01f3\u0003\u0002",
    "\u0002\u0002\u0ea9\u0eaa\u0005x=\u0002\u0eaa\u0eab\u0007\u0002\u0002",
    "\u0003\u0eab\u0eb1\u0003\u0002\u0002\u0002\u0eac\u0ead\u0005v<\u0002",
    "\u0ead\u0eae\u0005x=\u0002\u0eae\u0eaf\u0007\u0002\u0002\u0003\u0eaf",
    "\u0eb1\u0003\u0002\u0002\u0002\u0eb0\u0ea9\u0003\u0002\u0002\u0002\u0eb0",
    "\u0eac\u0003\u0002\u0002\u0002\u0eb1\u01f5\u0003\u0002\u0002\u0002\u0eb2",
    "\u0eb3\u0005z>\u0002\u0eb3\u0eb4\u0007\u0002\u0002\u0003\u0eb4\u0ece",
    "\u0003\u0002\u0002\u0002\u0eb5\u0eb6\u0005\u0110\u0089\u0002\u0eb6\u0eb7",
    "\u0007\u0002\u0002\u0003\u0eb7\u0ece\u0003\u0002\u0002\u0002\u0eb8\u0eb9",
    "\u0005\u0156\u00ac\u0002\u0eb9\u0eba\u0007\u0002\u0002\u0003\u0eba\u0ece",
    "\u0003\u0002\u0002\u0002\u0ebb\u0ebc\u0005\u016a\u00b6\u0002\u0ebc\u0ebd",
    "\u0007\u0002\u0002\u0003\u0ebd\u0ece\u0003\u0002\u0002\u0002\u0ebe\u0ebf",
    "\u0005\u016c\u00b7\u0002\u0ebf\u0ec0\u0007\u0002\u0002\u0003\u0ec0\u0ece",
    "\u0003\u0002\u0002\u0002\u0ec1\u0ec2\u0005\u00ceh\u0002\u0ec2\u0ec3",
    "\u0007\u0002\u0002\u0003\u0ec3\u0ece\u0003\u0002\u0002\u0002\u0ec4\u0ec5",
    "\u0005\u00b6\\\u0002\u0ec5\u0ec6\u0007\u0002\u0002\u0003\u0ec6\u0ece",
    "\u0003\u0002\u0002\u0002\u0ec7\u0ec8\u0005\u0082B\u0002\u0ec8\u0ec9",
    "\u0007\u0002\u0002\u0003\u0ec9\u0ece\u0003\u0002\u0002\u0002\u0eca\u0ecb",
    "\u0005\u0084C\u0002\u0ecb\u0ecc\u0007\u0002\u0002\u0003\u0ecc\u0ece",
    "\u0003\u0002\u0002\u0002\u0ecd\u0eb2\u0003\u0002\u0002\u0002\u0ecd\u0eb5",
    "\u0003\u0002\u0002\u0002\u0ecd\u0eb8\u0003\u0002\u0002\u0002\u0ecd\u0ebb",
    "\u0003\u0002\u0002\u0002\u0ecd\u0ebe\u0003\u0002\u0002\u0002\u0ecd\u0ec1",
    "\u0003\u0002\u0002\u0002\u0ecd\u0ec4\u0003\u0002\u0002\u0002\u0ecd\u0ec7",
    "\u0003\u0002\u0002\u0002\u0ecd\u0eca\u0003\u0002\u0002\u0002\u0ece\u01f7",
    "\u0003\u0002\u0002\u0002\u0ecf\u0ed0\u0005~@\u0002\u0ed0\u0ed1\u0007",
    "\u0002\u0002\u0003\u0ed1\u0ee8\u0003\u0002\u0002\u0002\u0ed2\u0ed3\u0005",
    "\u00ccg\u0002\u0ed3\u0ed4\u0007\u0002\u0002\u0003\u0ed4\u0ee8\u0003",
    "\u0002\u0002\u0002\u0ed5\u0ed6\u0005\u00c4c\u0002\u0ed6\u0ed7\u0007",
    "\u0002\u0002\u0003\u0ed7\u0ee8\u0003\u0002\u0002\u0002\u0ed8\u0ed9\u0005",
    "\u00c8e\u0002\u0ed9\u0eda\u0007\u0002\u0002\u0003\u0eda\u0ee8\u0003",
    "\u0002\u0002\u0002\u0edb\u0edc\u0005\u00caf\u0002\u0edc\u0edd\u0007",
    "\u0002\u0002\u0003\u0edd\u0ee8\u0003\u0002\u0002\u0002\u0ede\u0edf\u0005",
    "\u0080A\u0002\u0edf\u0ee0\u0007\u0002\u0002\u0003\u0ee0\u0ee8\u0003",
    "\u0002\u0002\u0002\u0ee1\u0ee2\u0005|?\u0002\u0ee2\u0ee3\u0007\u0002",
    "\u0002\u0003\u0ee3\u0ee8\u0003\u0002\u0002\u0002\u0ee4\u0ee5\u0005\u00a6",
    "T\u0002\u0ee5\u0ee6\u0007\u0002\u0002\u0003\u0ee6\u0ee8\u0003\u0002",
    "\u0002\u0002\u0ee7\u0ecf\u0003\u0002\u0002\u0002\u0ee7\u0ed2\u0003\u0002",
    "\u0002\u0002\u0ee7\u0ed5\u0003\u0002\u0002\u0002\u0ee7\u0ed8\u0003\u0002",
    "\u0002\u0002\u0ee7\u0edb\u0003\u0002\u0002\u0002\u0ee7\u0ede\u0003\u0002",
    "\u0002\u0002\u0ee7\u0ee1\u0003\u0002\u0002\u0002\u0ee7\u0ee4\u0003\u0002",
    "\u0002\u0002\u0ee8\u01f9\u0003\u0002\u0002\u0002\u0ee9\u0eea\u0007J",
    "\u0002\u0002\u0eea\u0eec\u0007\u007f\u0002\u0002\u0eeb\u0eed\u0005\u00d0",
    "i\u0002\u0eec\u0eeb\u0003\u0002\u0002\u0002\u0eec\u0eed\u0003\u0002",
    "\u0002\u0002\u0eed\u0eee\u0003\u0002\u0002\u0002\u0eee\u0eef\u0007`",
    "\u0002\u0002\u0eef\u0ef0\u0005\u00fe\u0080\u0002\u0ef0\u0ef1\u0007{",
    "\u0002\u0002\u0ef1\u0ef2\u0007\u0002\u0002\u0003\u0ef2\u01fb\u0003\u0002",
    "\u0002\u0002\u0ef3\u0ef5\u0005\u0088E\u0002\u0ef4\u0ef3\u0003\u0002",
    "\u0002\u0002\u0ef4\u0ef5\u0003\u0002\u0002\u0002\u0ef5\u0ef7\u0003\u0002",
    "\u0002\u0002\u0ef6\u0ef8\u0005\u00e6t\u0002\u0ef7\u0ef6\u0003\u0002",
    "\u0002\u0002\u0ef7\u0ef8\u0003\u0002\u0002\u0002\u0ef8\u0ef9\u0003\u0002",
    "\u0002\u0002\u0ef9\u0efa\u0007{\u0002\u0002\u0efa\u0f04\u0007\u0002",
    "\u0002\u0003\u0efb\u0efd\u0005\u00d0i\u0002\u0efc\u0efe\u0005\u0088",
    "E\u0002\u0efd\u0efc\u0003\u0002\u0002\u0002\u0efd\u0efe\u0003\u0002",
    "\u0002\u0002\u0efe\u0eff\u0003\u0002\u0002\u0002\u0eff\u0f00\u0005\u00e6",
    "t\u0002\u0f00\u0f01\u0007{\u0002\u0002\u0f01\u0f02\u0007\u0002\u0002",
    "\u0003\u0f02\u0f04\u0003\u0002\u0002\u0002\u0f03\u0ef4\u0003\u0002\u0002",
    "\u0002\u0f03\u0efb\u0003\u0002\u0002\u0002\u0f04\u01fd\u0003\u0002\u0002",
    "\u0002\u0f05\u0f06\u0007;\u0002\u0002\u0f06\u0f07\u0007P\u0002\u0002",
    "\u0f07\u0f08\u0005Z.\u0002\u0f08\u0f09\u0007u\u0002\u0002\u0f09\u0f0a",
    "\u0007\u0088\u0002\u0002\u0f0a\u0f0b\u0007Q\u0002\u0002\u0f0b\u0f0c",
    "\u0007{\u0002\u0002\u0f0c\u0f0d\u0007\u0002\u0002\u0003\u0f0d\u01ff",
    "\u0003\u0002\u0002\u0002\u0f0e\u0f0f\u0007{\u0002\u0002\u0f0f\u0f10",
    "\u0007\u0002\u0002\u0003\u0f10\u0201\u0003\u0002\u0002\u0002\u0f11\u0f12",
    "\u0005\u00d0i\u0002\u0f12\u0f13\u0007{\u0002\u0002\u0f13\u0f14\u0007",
    "\u0002\u0002\u0003\u0f14\u0203\u0003\u0002\u0002\u0002\u0f15\u0f16\u0005",
    "\u008aF\u0002\u0f16\u0f17\u0007\u0002\u0002\u0003\u0f17\u0f25\u0003",
    "\u0002\u0002\u0002\u0f18\u0f19\u0005\u0090I\u0002\u0f19\u0f1a\u0007",
    "\u0002\u0002\u0003\u0f1a\u0f25\u0003\u0002\u0002\u0002\u0f1b\u0f1c\u0005",
    "\u008cG\u0002\u0f1c\u0f1d\u0007\u0002\u0002\u0003\u0f1d\u0f25\u0003",
    "\u0002\u0002\u0002\u0f1e\u0f1f\u0007$\u0002\u0002\u0f1f\u0f25\u0007",
    "\u0002\u0002\u0003\u0f20\u0f21\u0007E\u0002\u0002\u0f21\u0f25\u0007",
    "\u0002\u0002\u0003\u0f22\u0f23\u0007\u0012\u0002\u0002\u0f23\u0f25\u0007",
    "\u0002\u0002\u0003\u0f24\u0f15\u0003\u0002\u0002\u0002\u0f24\u0f18\u0003",
    "\u0002\u0002\u0002\u0f24\u0f1b\u0003\u0002\u0002\u0002\u0f24\u0f1e\u0003",
    "\u0002\u0002\u0002\u0f24\u0f20\u0003\u0002\u0002\u0002\u0f24\u0f22\u0003",
    "\u0002\u0002\u0002\u0f25\u0205\u0003\u0002\u0002\u0002\u0f26\u0f28\u0005",
    "\u0086D\u0002\u0f27\u0f29\u0005\u00d0i\u0002\u0f28\u0f27\u0003\u0002",
    "\u0002\u0002\u0f28\u0f29\u0003\u0002\u0002\u0002\u0f29\u0f2a\u0003\u0002",
    "\u0002\u0002\u0f2a\u0f2b\u0007\u0002\u0002\u0003\u0f2b\u0f31\u0003\u0002",
    "\u0002\u0002\u0f2c\u0f2d\u0005\u0086D\u0002\u0f2d\u0f2e\u0005\u0088",
    "E\u0002\u0f2e\u0f2f\u0007\u0002\u0002\u0003\u0f2f\u0f31\u0003\u0002",
    "\u0002\u0002\u0f30\u0f26\u0003\u0002\u0002\u0002\u0f30\u0f2c\u0003\u0002",
    "\u0002\u0002\u0f31\u0207\u0003\u0002\u0002\u0002\u0f32\u0f33\u00074",
    "\u0002\u0002\u0f33\u0f3d\u0007\u0002\u0002\u0003\u0f34\u0f35\u0007:",
    "\u0002\u0002\u0f35\u0f3d\u0007\u0002\u0002\u0003\u0f36\u0f37\u0007A",
    "\u0002\u0002\u0f37\u0f3d\u0007\u0002\u0002\u0003\u0f38\u0f39\u0007\u001f",
    "\u0002\u0002\u0f39\u0f3d\u0007\u0002\u0002\u0003\u0f3a\u0f3b\u0007*",
    "\u0002\u0002\u0f3b\u0f3d\u0007\u0002\u0002\u0003\u0f3c\u0f32\u0003\u0002",
    "\u0002\u0002\u0f3c\u0f34\u0003\u0002\u0002\u0002\u0f3c\u0f36\u0003\u0002",
    "\u0002\u0002\u0f3c\u0f38\u0003\u0002\u0002\u0002\u0f3c\u0f3a\u0003\u0002",
    "\u0002\u0002\u0f3d\u0209\u0003\u0002\u0002\u0002\u0f3e\u0f3f\u0007\'",
    "\u0002\u0002\u0f3f\u0f45\u0007\u0002\u0002\u0003\u0f40\u0f41\u0007K",
    "\u0002\u0002\u0f41\u0f45\u0007\u0002\u0002\u0003\u0f42\u0f43\u0007\u001d",
    "\u0002\u0002\u0f43\u0f45\u0007\u0002\u0002\u0003\u0f44\u0f3e\u0003\u0002",
    "\u0002\u0002\u0f44\u0f40\u0003\u0002\u0002\u0002\u0f44\u0f42\u0003\u0002",
    "\u0002\u0002\u0f45\u020b\u0003\u0002\u0002\u0002\u0f46\u0f47\u0007\u007f",
    "\u0002\u0002\u0f47\u0f48\u0007\u0002\u0002\u0003\u0f48\u020d\u0003\u0002",
    "\u0002\u0002\u0f49\u0f4a\u0005\u0092J\u0002\u0f4a\u0f4b\u0007\u0002",
    "\u0002\u0003\u0f4b\u0f53\u0003\u0002\u0002\u0002\u0f4c\u0f4d\u0005\u0120",
    "\u0091\u0002\u0f4d\u0f4e\u0007\u0002\u0002\u0003\u0f4e\u0f53\u0003\u0002",
    "\u0002\u0002\u0f4f\u0f50\u0005\u00a2R\u0002\u0f50\u0f51\u0007\u0002",
    "\u0002\u0003\u0f51\u0f53\u0003\u0002\u0002\u0002\u0f52\u0f49\u0003\u0002",
    "\u0002\u0002\u0f52\u0f4c\u0003\u0002\u0002\u0002\u0f52\u0f4f\u0003\u0002",
    "\u0002\u0002\u0f53\u020f\u0003\u0002\u0002\u0002\u0f54\u0f55\u0005\u0098",
    "M\u0002\u0f55\u0f56\u0007\u0002\u0002\u0003\u0f56\u0f61\u0003\u0002",
    "\u0002\u0002\u0f57\u0f58\u0005\u009eP\u0002\u0f58\u0f59\u0007\u0002",
    "\u0002\u0003\u0f59\u0f61\u0003\u0002\u0002\u0002\u0f5a\u0f5b\u0005\u0168",
    "\u00b5\u0002\u0f5b\u0f5c\u0007\u0002\u0002\u0003\u0f5c\u0f61\u0003\u0002",
    "\u0002\u0002\u0f5d\u0f5e\u0005\u00f8}\u0002\u0f5e\u0f5f\u0007\u0002",
    "\u0002\u0003\u0f5f\u0f61\u0003\u0002\u0002\u0002\u0f60\u0f54\u0003\u0002",
    "\u0002\u0002\u0f60\u0f57\u0003\u0002\u0002\u0002\u0f60\u0f5a\u0003\u0002",
    "\u0002\u0002\u0f60\u0f5d\u0003\u0002\u0002\u0002\u0f61\u0211\u0003\u0002",
    "\u0002\u0002\u0f62\u0f64\u0005\u0090I\u0002\u0f63\u0f65\u0005\u00d0",
    "i\u0002\u0f64\u0f63\u0003\u0002\u0002\u0002\u0f64\u0f65\u0003\u0002",
    "\u0002\u0002\u0f65\u0f66\u0003\u0002\u0002\u0002\u0f66\u0f67\u0007\u0002",
    "\u0002\u0003\u0f67\u0f6d\u0003\u0002\u0002\u0002\u0f68\u0f69\u0005\u0090",
    "I\u0002\u0f69\u0f6a\u0005\u0094K\u0002\u0f6a\u0f6b\u0007\u0002\u0002",
    "\u0003\u0f6b\u0f6d\u0003\u0002\u0002\u0002\u0f6c\u0f62\u0003\u0002\u0002",
    "\u0002\u0f6c\u0f68\u0003\u0002\u0002\u0002\u0f6d\u0213\u0003\u0002\u0002",
    "\u0002\u0f6e\u0f70\u0005\u0092J\u0002\u0f6f\u0f71\u0005\u00d0i\u0002",
    "\u0f70\u0f6f\u0003\u0002\u0002\u0002\u0f70\u0f71\u0003\u0002\u0002\u0002",
    "\u0f71\u0f72\u0003\u0002\u0002\u0002\u0f72\u0f73\u0007\u0002\u0002\u0003",
    "\u0f73\u0f79\u0003\u0002\u0002\u0002\u0f74\u0f75\u0005\u0092J\u0002",
    "\u0f75\u0f76\u0005\u0096L\u0002\u0f76\u0f77\u0007\u0002\u0002\u0003",
    "\u0f77\u0f79\u0003\u0002\u0002\u0002\u0f78\u0f6e\u0003\u0002\u0002\u0002",
    "\u0f78\u0f74\u0003\u0002\u0002\u0002\u0f79\u0215\u0003\u0002\u0002\u0002",
    "\u0f7a\u0f7c\u0005\f\u0007\u0002\u0f7b\u0f7a\u0003\u0002\u0002\u0002",
    "\u0f7b\u0f7c\u0003\u0002\u0002\u0002\u0f7c\u0f7d\u0003\u0002\u0002\u0002",
    "\u0f7d\u0f7e\u0005\u009aN\u0002\u0f7e\u0f7f\u0007\u0002\u0002\u0003",
    "\u0f7f\u0fa5\u0003\u0002\u0002\u0002\u0f80\u0f81\u0005\f\u0007\u0002",
    "\u0f81\u0f82\u0007?\u0002\u0002\u0f82\u0f83\u0005\u015e\u00b0\u0002",
    "\u0f83\u0f84\u0007\u0002\u0002\u0003\u0f84\u0fa5\u0003\u0002\u0002\u0002",
    "\u0f85\u0f86\u0007\r\u0002\u0002\u0f86\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f87\u0f88\u0007\u000e\u0002\u0002\u0f88\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f89\u0f8a\u0007\u000f\u0002\u0002\u0f8a\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f8b\u0f8c\u0007N\u0002\u0002\u0f8c\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f8d\u0f8e\u0007\t\u0002\u0002\u0f8e\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f8f\u0f90\u00077\u0002\u0002\u0f90\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f91\u0f92\u0007(\u0002\u0002\u0f92\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f93\u0f94\u0007)\u0002\u0002\u0f94\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f95\u0f96\u00078\u0002\u0002\u0f96\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f97\u0f98\u0007I\u0002\u0002\u0f98\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f99\u0f9a\u0007\"\u0002\u0002\u0f9a\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f9b\u0f9c\u0007\u0019\u0002\u0002\u0f9c\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f9d\u0f9e\u0007L\u0002\u0002\u0f9e\u0fa5\u0007\u0002\u0002\u0003",
    "\u0f9f\u0fa0\u0007\b\u0002\u0002\u0fa0\u0fa5\u0007\u0002\u0002\u0003",
    "\u0fa1\u0fa2\u0005\u009cO\u0002\u0fa2\u0fa3\u0007\u0002\u0002\u0003",
    "\u0fa3\u0fa5\u0003\u0002\u0002\u0002\u0fa4\u0f7b\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f80\u0003\u0002\u0002\u0002\u0fa4\u0f85\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f87\u0003\u0002\u0002\u0002\u0fa4\u0f89\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f8b\u0003\u0002\u0002\u0002\u0fa4\u0f8d\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f8f\u0003\u0002\u0002\u0002\u0fa4\u0f91\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f93\u0003\u0002\u0002\u0002\u0fa4\u0f95\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f97\u0003\u0002\u0002\u0002\u0fa4\u0f99\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f9b\u0003\u0002\u0002\u0002\u0fa4\u0f9d\u0003\u0002\u0002\u0002",
    "\u0fa4\u0f9f\u0003\u0002\u0002\u0002\u0fa4\u0fa1\u0003\u0002\u0002\u0002",
    "\u0fa5\u0217\u0003\u0002\u0002\u0002\u0fa6\u0fa7\u0005\u011e\u0090\u0002",
    "\u0fa7\u0fa8\u0007\u0002\u0002\u0003\u0fa8\u0fb3\u0003\u0002\u0002\u0002",
    "\u0fa9\u0faa\u0005\u00a0Q\u0002\u0faa\u0fab\u0007\u0002\u0002\u0003",
    "\u0fab\u0fb3\u0003\u0002\u0002\u0002\u0fac\u0fad\u0005\u008eH\u0002",
    "\u0fad\u0fae\u0007\u0002\u0002\u0003\u0fae\u0fb3\u0003\u0002\u0002\u0002",
    "\u0faf\u0fb0\u0005\u015e\u00b0\u0002\u0fb0\u0fb1\u0007\u0002\u0002\u0003",
    "\u0fb1\u0fb3\u0003\u0002\u0002\u0002\u0fb2\u0fa6\u0003\u0002\u0002\u0002",
    "\u0fb2\u0fa9\u0003\u0002\u0002\u0002\u0fb2\u0fac\u0003\u0002\u0002\u0002",
    "\u0fb2\u0faf\u0003\u0002\u0002\u0002\u0fb3\u0219\u0003\u0002\u0002\u0002",
    "\u0fb4\u0fb5\u0007\u0015\u0002\u0002\u0fb5\u0fb6\u0007P\u0002\u0002",
    "\u0fb6\u0fb7\u0005X-\u0002\u0fb7\u0fb8\u0007Q\u0002\u0002\u0fb8\u0fb9",
    "\u0007\u0002\u0002\u0003\u0fb9\u0fc0\u0003\u0002\u0002\u0002\u0fba\u0fbb",
    "\u0007\u0015\u0002\u0002\u0fbb\u0fbc\u0007P\u0002\u0002\u0fbc\u0fbd",
    "\u0007\b\u0002\u0002\u0fbd\u0fbe\u0007Q\u0002\u0002\u0fbe\u0fc0\u0007",
    "\u0002\u0002\u0003\u0fbf\u0fb4\u0003\u0002\u0002\u0002\u0fbf\u0fba\u0003",
    "\u0002\u0002\u0002\u0fc0\u021b\u0003\u0002\u0002\u0002\u0fc1\u0fc3\u0005",
    "\u0128\u0095\u0002\u0fc2\u0fc4\u0005\u00d0i\u0002\u0fc3\u0fc2\u0003",
    "\u0002\u0002\u0002\u0fc3\u0fc4\u0003\u0002\u0002\u0002\u0fc4\u0fc6\u0003",
    "\u0002\u0002\u0002\u0fc5\u0fc7\u0005\f\u0007\u0002\u0fc6\u0fc5\u0003",
    "\u0002\u0002\u0002\u0fc6\u0fc7\u0003\u0002\u0002\u0002\u0fc7\u0fc8\u0003",
    "\u0002\u0002\u0002\u0fc8\u0fc9\u0007\u007f\u0002\u0002\u0fc9\u0fca\u0007",
    "\u0002\u0002\u0003\u0fca\u0fde\u0003\u0002\u0002\u0002\u0fcb\u0fcc\u0005",
    "\u0128\u0095\u0002\u0fcc\u0fcd\u0005\u015e\u00b0\u0002\u0fcd\u0fce\u0007",
    "\u0002\u0002\u0003\u0fce\u0fde\u0003\u0002\u0002\u0002\u0fcf\u0fd0\u0005",
    "\u0128\u0095\u0002\u0fd0\u0fd2\u0005\f\u0007\u0002\u0fd1\u0fd3\u0007",
    "?\u0002\u0002\u0fd2\u0fd1\u0003\u0002\u0002\u0002\u0fd2\u0fd3\u0003",
    "\u0002\u0002\u0002\u0fd3\u0fd4\u0003\u0002\u0002\u0002\u0fd4\u0fd5\u0005",
    "\u015e\u00b0\u0002\u0fd5\u0fd6\u0007\u0002\u0002\u0003\u0fd6\u0fde\u0003",
    "\u0002\u0002\u0002\u0fd7\u0fd9\u0007\u001c\u0002\u0002\u0fd8\u0fda\u0005",
    "\f\u0007\u0002\u0fd9\u0fd8\u0003\u0002\u0002\u0002\u0fd9\u0fda\u0003",
    "\u0002\u0002\u0002\u0fda\u0fdb\u0003\u0002\u0002\u0002\u0fdb\u0fdc\u0007",
    "\u007f\u0002\u0002\u0fdc\u0fde\u0007\u0002\u0002\u0003\u0fdd\u0fc1\u0003",
    "\u0002\u0002\u0002\u0fdd\u0fcb\u0003\u0002\u0002\u0002\u0fdd\u0fcf\u0003",
    "\u0002\u0002\u0002\u0fdd\u0fd7\u0003\u0002\u0002\u0002\u0fde\u021d\u0003",
    "\u0002\u0002\u0002\u0fdf\u0fe0\u0007\u007f\u0002\u0002\u0fe0\u0fe1\u0007",
    "\u0002\u0002\u0003\u0fe1\u021f\u0003\u0002\u0002\u0002\u0fe2\u0fe3\u0005",
    "\u00a4S\u0002\u0fe3\u0fe5\u0007T\u0002\u0002\u0fe4\u0fe6\u0005\u00ac",
    "W\u0002\u0fe5\u0fe4\u0003\u0002\u0002\u0002\u0fe5\u0fe6\u0003\u0002",
    "\u0002\u0002\u0fe6\u0fe7\u0003\u0002\u0002\u0002\u0fe7\u0fe8\u0007U",
    "\u0002\u0002\u0fe8\u0fe9\u0007\u0002\u0002\u0003\u0fe9\u0ff2\u0003\u0002",
    "\u0002\u0002\u0fea\u0feb\u0005\u00a4S\u0002\u0feb\u0fec\u0007T\u0002",
    "\u0002\u0fec\u0fed\u0005\u00acW\u0002\u0fed\u0fee\u0007u\u0002\u0002",
    "\u0fee\u0fef\u0007U\u0002\u0002\u0fef\u0ff0\u0007\u0002\u0002\u0003",
    "\u0ff0\u0ff2\u0003\u0002\u0002\u0002\u0ff1\u0fe2\u0003\u0002\u0002\u0002",
    "\u0ff1\u0fea\u0003\u0002\u0002\u0002\u0ff2\u0221\u0003\u0002\u0002\u0002",
    "\u0ff3\u0ff5\u0005\u00a8U\u0002\u0ff4\u0ff6\u0005\u00d0i\u0002\u0ff5",
    "\u0ff4\u0003\u0002\u0002\u0002\u0ff5\u0ff6\u0003\u0002\u0002\u0002\u0ff6",
    "\u0ff8\u0003\u0002\u0002\u0002\u0ff7\u0ff9\u0007\u007f\u0002\u0002\u0ff8",
    "\u0ff7\u0003\u0002\u0002\u0002\u0ff8\u0ff9\u0003\u0002\u0002\u0002\u0ff9",
    "\u0ffb\u0003\u0002\u0002\u0002\u0ffa\u0ffc\u0005\u00aaV\u0002\u0ffb",
    "\u0ffa\u0003\u0002\u0002\u0002\u0ffb\u0ffc\u0003\u0002\u0002\u0002\u0ffc",
    "\u0ffd\u0003\u0002\u0002\u0002\u0ffd\u0ffe\u0007\u0002\u0002\u0003\u0ffe",
    "\u100b\u0003\u0002\u0002\u0002\u0fff\u1001\u0005\u00a8U\u0002\u1000",
    "\u1002\u0005\u00d0i\u0002\u1001\u1000\u0003\u0002\u0002\u0002\u1001",
    "\u1002\u0003\u0002\u0002\u0002\u1002\u1003\u0003\u0002\u0002\u0002\u1003",
    "\u1004\u0005\f\u0007\u0002\u1004\u1006\u0007\u007f\u0002\u0002\u1005",
    "\u1007\u0005\u00aaV\u0002\u1006\u1005\u0003\u0002\u0002\u0002\u1006",
    "\u1007\u0003\u0002\u0002\u0002\u1007\u1008\u0003\u0002\u0002\u0002\u1008",
    "\u1009\u0007\u0002\u0002\u0003\u1009\u100b\u0003\u0002\u0002\u0002\u100a",
    "\u0ff3\u0003\u0002\u0002\u0002\u100a\u0fff\u0003\u0002\u0002\u0002\u100b",
    "\u0223\u0003\u0002\u0002\u0002\u100c\u100e\u0005\u00a8U\u0002\u100d",
    "\u100f\u0005\u00d0i\u0002\u100e\u100d\u0003\u0002\u0002\u0002\u100e",
    "\u100f\u0003\u0002\u0002\u0002\u100f\u1010\u0003\u0002\u0002\u0002\u1010",
    "\u1012\u0007\u007f\u0002\u0002\u1011\u1013\u0005\u00aaV\u0002\u1012",
    "\u1011\u0003\u0002\u0002\u0002\u1012\u1013\u0003\u0002\u0002\u0002\u1013",
    "\u1014\u0003\u0002\u0002\u0002\u1014\u1015\u0007{\u0002\u0002\u1015",
    "\u1016\u0007\u0002\u0002\u0003\u1016\u0225\u0003\u0002\u0002\u0002\u1017",
    "\u1018\u0007\u001c\u0002\u0002\u1018\u1020\u0007\u0002\u0002\u0003\u1019",
    "\u101a\u0007\u001c\u0002\u0002\u101a\u101b\u0007\u0010\u0002\u0002\u101b",
    "\u1020\u0007\u0002\u0002\u0003\u101c\u101d\u0007\u001c\u0002\u0002\u101d",
    "\u101e\u0007=\u0002\u0002\u101e\u1020\u0007\u0002\u0002\u0003\u101f",
    "\u1017\u0003\u0002\u0002\u0002\u101f\u1019\u0003\u0002\u0002\u0002\u101f",
    "\u101c\u0003\u0002\u0002\u0002\u1020\u0227\u0003\u0002\u0002\u0002\u1021",
    "\u1022\u0007y\u0002\u0002\u1022\u1023\u0005\u0094K\u0002\u1023\u1024",
    "\u0007\u0002\u0002\u0003\u1024\u0229\u0003\u0002\u0002\u0002\u1025\u1026",
    "\u0005\u00aeX\u0002\u1026\u1027\u0007\u0002\u0002\u0003\u1027\u102e",
    "\u0003\u0002\u0002\u0002\u1028\u1029\u0005\u00acW\u0002\u1029\u102a",
    "\u0007u\u0002\u0002\u102a\u102b\u0005\u00aeX\u0002\u102b\u102c\u0007",
    "\u0002\u0002\u0003\u102c\u102e\u0003\u0002\u0002\u0002\u102d\u1025\u0003",
    "\u0002\u0002\u0002\u102d\u1028\u0003\u0002\u0002\u0002\u102e\u022b\u0003",
    "\u0002\u0002\u0002\u102f\u1030\u0005\u00b0Y\u0002\u1030\u1031\u0007",
    "\u0002\u0002\u0003\u1031\u1038\u0003\u0002\u0002\u0002\u1032\u1033\u0005",
    "\u00b0Y\u0002\u1033\u1034\u0007`\u0002\u0002\u1034\u1035\u0005Z.\u0002",
    "\u1035\u1036\u0007\u0002\u0002\u0003\u1036\u1038\u0003\u0002\u0002\u0002",
    "\u1037\u102f\u0003\u0002\u0002\u0002\u1037\u1032\u0003\u0002\u0002\u0002",
    "\u1038\u022d\u0003\u0002\u0002\u0002\u1039\u103a\u0007\u007f\u0002\u0002",
    "\u103a\u103b\u0007\u0002\u0002\u0003\u103b\u022f\u0003\u0002\u0002\u0002",
    "\u103c\u103d\u0005\u00b4[\u0002\u103d\u103e\u0007\u0002\u0002\u0003",
    "\u103e\u1043\u0003\u0002\u0002\u0002\u103f\u1040\u0005\u00c2b\u0002",
    "\u1040\u1041\u0007\u0002\u0002\u0003\u1041\u1043\u0003\u0002\u0002\u0002",
    "\u1042\u103c\u0003\u0002\u0002\u0002\u1042\u103f\u0003\u0002\u0002\u0002",
    "\u1043\u0231\u0003\u0002\u0002\u0002\u1044\u1045\u0007\u007f\u0002\u0002",
    "\u1045\u1046\u0007\u0002\u0002\u0003\u1046\u0233\u0003\u0002\u0002\u0002",
    "\u1047\u1048\u0005\u00b8]\u0002\u1048\u1049\u0007\u0002\u0002\u0003",
    "\u1049\u104e\u0003\u0002\u0002\u0002\u104a\u104b\u0005\u00be`\u0002",
    "\u104b\u104c\u0007\u0002\u0002\u0003\u104c\u104e\u0003\u0002\u0002\u0002",
    "\u104d\u1047\u0003\u0002\u0002\u0002\u104d\u104a\u0003\u0002\u0002\u0002",
    "\u104e\u0235\u0003\u0002\u0002\u0002\u104f\u1050\u0005\u00ba^\u0002",
    "\u1050\u1051\u0007\u0002\u0002\u0003\u1051\u1056\u0003\u0002\u0002\u0002",
    "\u1052\u1053\u0005\u00bc_\u0002\u1053\u1054\u0007\u0002\u0002\u0003",
    "\u1054\u1056\u0003\u0002\u0002\u0002\u1055\u104f\u0003\u0002\u0002\u0002",
    "\u1055\u1052\u0003\u0002\u0002\u0002\u1056\u0237\u0003\u0002\u0002\u0002",
    "\u1057\u1059\u0007\'\u0002\u0002\u1058\u1057\u0003\u0002\u0002\u0002",
    "\u1058\u1059\u0003\u0002\u0002\u0002\u1059\u105a\u0003\u0002\u0002\u0002",
    "\u105a\u105b\u0007+\u0002\u0002\u105b\u105c\u0007\u007f\u0002\u0002",
    "\u105c\u105d\u0007T\u0002\u0002\u105d\u105e\u0005\u00c0a\u0002\u105e",
    "\u105f\u0007U\u0002\u0002\u105f\u1060\u0007\u0002\u0002\u0003\u1060",
    "\u0239\u0003\u0002\u0002\u0002\u1061\u1063\u0007\'\u0002\u0002\u1062",
    "\u1061\u0003\u0002\u0002\u0002\u1062\u1063\u0003\u0002\u0002\u0002\u1063",
    "\u1064\u0003\u0002\u0002\u0002\u1064\u1065\u0007+\u0002\u0002\u1065",
    "\u1066\u0005\u00b4[\u0002\u1066\u1067\u0007T\u0002\u0002\u1067\u1068",
    "\u0005\u00c0a\u0002\u1068\u1069\u0007U\u0002\u0002\u1069\u106a\u0007",
    "\u0002\u0002\u0003\u106a\u023b\u0003\u0002\u0002\u0002\u106b\u106d\u0007",
    "\'\u0002\u0002\u106c\u106b\u0003\u0002\u0002\u0002\u106c\u106d\u0003",
    "\u0002\u0002\u0002\u106d\u106e\u0003\u0002\u0002\u0002\u106e\u106f\u0007",
    "+\u0002\u0002\u106f\u1070\u0007T\u0002\u0002\u1070\u1071\u0005\u00c0",
    "a\u0002\u1071\u1072\u0007U\u0002\u0002\u1072\u1073\u0007\u0002\u0002",
    "\u0003\u1073\u023d\u0003\u0002\u0002\u0002\u1074\u1076\u0005v<\u0002",
    "\u1075\u1074\u0003\u0002\u0002\u0002\u1075\u1076\u0003\u0002\u0002\u0002",
    "\u1076\u1077\u0003\u0002\u0002\u0002\u1077\u1078\u0007\u0002\u0002\u0003",
    "\u1078\u023f\u0003\u0002\u0002\u0002\u1079\u107a\u0007\u007f\u0002\u0002",
    "\u107a\u107b\u0007\u0002\u0002\u0003\u107b\u0241\u0003\u0002\u0002\u0002",
    "\u107c\u107d\u0007+\u0002\u0002\u107d\u107e\u0007\u007f\u0002\u0002",
    "\u107e\u107f\u0007`\u0002\u0002\u107f\u1080\u0005\u00c6d\u0002\u1080",
    "\u1081\u0007{\u0002\u0002\u1081\u1082\u0007\u0002\u0002\u0003\u1082",
    "\u0243\u0003\u0002\u0002\u0002\u1083\u1085\u0005\f\u0007\u0002\u1084",
    "\u1083\u0003\u0002\u0002\u0002\u1084\u1085\u0003\u0002\u0002\u0002\u1085",
    "\u1086\u0003\u0002\u0002\u0002\u1086\u1087\u0005\u00b2Z\u0002\u1087",
    "\u1088\u0007\u0002\u0002\u0003\u1088\u0245\u0003\u0002\u0002\u0002\u1089",
    "\u108b\u0007J\u0002\u0002\u108a\u108c\u0007G\u0002\u0002\u108b\u108a",
    "\u0003\u0002\u0002\u0002\u108b\u108c\u0003\u0002\u0002\u0002\u108c\u108d",
    "\u0003\u0002\u0002\u0002\u108d\u108e\u0005\f\u0007\u0002\u108e\u108f",
    "\u0005\b\u0005\u0002\u108f\u1090\u0007{\u0002\u0002\u1090\u1091\u0007",
    "\u0002\u0002\u0003\u1091\u1099\u0003\u0002\u0002\u0002\u1092\u1093\u0007",
    "J\u0002\u0002\u1093\u1094\u0007z\u0002\u0002\u1094\u1095\u0005\b\u0005",
    "\u0002\u1095\u1096\u0007{\u0002\u0002\u1096\u1097\u0007\u0002\u0002",
    "\u0003\u1097\u1099\u0003\u0002\u0002\u0002\u1098\u1089\u0003\u0002\u0002",
    "\u0002\u1098\u1092\u0003\u0002\u0002\u0002\u1099\u0247\u0003\u0002\u0002",
    "\u0002\u109a\u109c\u0005\u00d0i\u0002\u109b\u109a\u0003\u0002\u0002",
    "\u0002\u109b\u109c\u0003\u0002\u0002\u0002\u109c\u109d\u0003\u0002\u0002",
    "\u0002\u109d\u109e\u0007J\u0002\u0002\u109e\u10a0\u0007+\u0002\u0002",
    "\u109f\u10a1\u0005\f\u0007\u0002\u10a0\u109f\u0003\u0002\u0002\u0002",
    "\u10a0\u10a1\u0003\u0002\u0002\u0002\u10a1\u10a2\u0003\u0002\u0002\u0002",
    "\u10a2\u10a3\u0005\u00b2Z\u0002\u10a3\u10a4\u0007{\u0002\u0002\u10a4",
    "\u10a5\u0007\u0002\u0002\u0003\u10a5\u0249\u0003\u0002\u0002\u0002\u10a6",
    "\u10a7\u0007\u0007\u0002\u0002\u10a7\u10a8\u0007P\u0002\u0002\u10a8",
    "\u10a9\u0007\u0088\u0002\u0002\u10a9\u10aa\u0007Q\u0002\u0002\u10aa",
    "\u10ab\u0007{\u0002\u0002\u10ab\u10ac\u0007\u0002\u0002\u0003\u10ac",
    "\u024b\u0003\u0002\u0002\u0002\u10ad\u10ae\u0007\u001f\u0002\u0002\u10ae",
    "\u10af\u0007\u0088\u0002\u0002\u10af\u10b1\u0007T\u0002\u0002\u10b0",
    "\u10b2\u0005v<\u0002\u10b1\u10b0\u0003\u0002\u0002\u0002\u10b1\u10b2",
    "\u0003\u0002\u0002\u0002\u10b2\u10b3\u0003\u0002\u0002\u0002\u10b3\u10b4",
    "\u0007U\u0002\u0002\u10b4\u10bb\u0007\u0002\u0002\u0003\u10b5\u10b6",
    "\u0007\u001f\u0002\u0002\u10b6\u10b7\u0007\u0088\u0002\u0002\u10b7\u10b8",
    "\u0005x=\u0002\u10b8\u10b9\u0007\u0002\u0002\u0003\u10b9\u10bb\u0003",
    "\u0002\u0002\u0002\u10ba\u10ad\u0003\u0002\u0002\u0002\u10ba\u10b5\u0003",
    "\u0002\u0002\u0002\u10bb\u024d\u0003\u0002\u0002\u0002\u10bc\u10bd\u0005",
    "\u00d2j\u0002\u10bd\u10be\u0007\u0002\u0002\u0003\u10be\u10c4\u0003",
    "\u0002\u0002\u0002\u10bf\u10c0\u0005\u00d0i\u0002\u10c0\u10c1\u0005",
    "\u00d2j\u0002\u10c1\u10c2\u0007\u0002\u0002\u0003\u10c2\u10c4\u0003",
    "\u0002\u0002\u0002\u10c3\u10bc\u0003\u0002\u0002\u0002\u10c3\u10bf\u0003",
    "\u0002\u0002\u0002\u10c4\u024f\u0003\u0002\u0002\u0002\u10c5\u10c6\u0007",
    "R\u0002\u0002\u10c6\u10c7\u0007R\u0002\u0002\u10c7\u10c8\u0005\u00d6",
    "l\u0002\u10c8\u10c9\u0007S\u0002\u0002\u10c9\u10ca\u0007S\u0002\u0002",
    "\u10ca\u10cb\u0007\u0002\u0002\u0003\u10cb\u10d0\u0003\u0002\u0002\u0002",
    "\u10cc\u10cd\u0005\u00d4k\u0002\u10cd\u10ce\u0007\u0002\u0002\u0003",
    "\u10ce\u10d0\u0003\u0002\u0002\u0002\u10cf\u10c5\u0003\u0002\u0002\u0002",
    "\u10cf\u10cc\u0003\u0002\u0002\u0002\u10d0\u0251\u0003\u0002\u0002\u0002",
    "\u10d1\u10d2\u0007\u0005\u0002\u0002\u10d2\u10d3\u0007P\u0002\u0002",
    "\u10d3\u10d5\u0005\u00fe\u0080\u0002\u10d4\u10d6\u0007~\u0002\u0002",
    "\u10d5\u10d4\u0003\u0002\u0002\u0002\u10d5\u10d6\u0003\u0002\u0002\u0002",
    "\u10d6\u10d7\u0003\u0002\u0002\u0002\u10d7\u10d8\u0007Q\u0002\u0002",
    "\u10d8\u10d9\u0007\u0002\u0002\u0003\u10d9\u10e4\u0003\u0002\u0002\u0002",
    "\u10da\u10db\u0007\u0005\u0002\u0002\u10db\u10dc\u0007P\u0002\u0002",
    "\u10dc\u10de\u0005Z.\u0002\u10dd\u10df\u0007~\u0002\u0002\u10de\u10dd",
    "\u0003\u0002\u0002\u0002\u10de\u10df\u0003\u0002\u0002\u0002\u10df\u10e0",
    "\u0003\u0002\u0002\u0002\u10e0\u10e1\u0007Q\u0002\u0002\u10e1\u10e2",
    "\u0007\u0002\u0002\u0003\u10e2\u10e4\u0003\u0002\u0002\u0002\u10e3\u10d1",
    "\u0003\u0002\u0002\u0002\u10e3\u10da\u0003\u0002\u0002\u0002\u10e4\u0253",
    "\u0003\u0002\u0002\u0002\u10e5\u10e7\u0005\u00d8m\u0002\u10e6\u10e5",
    "\u0003\u0002\u0002\u0002\u10e6\u10e7\u0003\u0002\u0002\u0002\u10e7\u10e8",
    "\u0003\u0002\u0002\u0002\u10e8\u10fb\u0007\u0002\u0002\u0003\u10e9\u10ea",
    "\u0005\u00d6l\u0002\u10ea\u10ec\u0007u\u0002\u0002\u10eb\u10ed\u0005",
    "\u00d8m\u0002\u10ec\u10eb\u0003\u0002\u0002\u0002\u10ec\u10ed\u0003",
    "\u0002\u0002\u0002\u10ed\u10ee\u0003\u0002\u0002\u0002\u10ee\u10ef\u0007",
    "\u0002\u0002\u0003\u10ef\u10fb\u0003\u0002\u0002\u0002\u10f0\u10f1\u0005",
    "\u00d8m\u0002\u10f1\u10f2\u0007~\u0002\u0002\u10f2\u10f3\u0007\u0002",
    "\u0002\u0003\u10f3\u10fb\u0003\u0002\u0002\u0002\u10f4\u10f5\u0005\u00d6",
    "l\u0002\u10f5\u10f6\u0007u\u0002\u0002\u10f6\u10f7\u0005\u00d8m\u0002",
    "\u10f7\u10f8\u0007~\u0002\u0002\u10f8\u10f9\u0007\u0002\u0002\u0003",
    "\u10f9\u10fb\u0003\u0002\u0002\u0002\u10fa\u10e6\u0003\u0002\u0002\u0002",
    "\u10fa\u10e9\u0003\u0002\u0002\u0002\u10fa\u10f0\u0003\u0002\u0002\u0002",
    "\u10fa\u10f4\u0003\u0002\u0002\u0002\u10fb\u0255\u0003\u0002\u0002\u0002",
    "\u10fc\u10fe\u0005\u00dan\u0002\u10fd\u10ff\u0005\u00e0q\u0002\u10fe",
    "\u10fd\u0003\u0002\u0002\u0002\u10fe\u10ff\u0003\u0002\u0002\u0002\u10ff",
    "\u1100\u0003\u0002\u0002\u0002\u1100\u1101\u0007\u0002\u0002\u0003\u1101",
    "\u0257\u0003\u0002\u0002\u0002\u1102\u1103\u0007\u007f\u0002\u0002\u1103",
    "\u1108\u0007\u0002\u0002\u0003\u1104\u1105\u0005\u00dco\u0002\u1105",
    "\u1106\u0007\u0002\u0002\u0003\u1106\u1108\u0003\u0002\u0002\u0002\u1107",
    "\u1102\u0003\u0002\u0002\u0002\u1107\u1104\u0003\u0002\u0002\u0002\u1108",
    "\u0259\u0003\u0002\u0002\u0002\u1109\u110a\u0005\u00dep\u0002\u110a",
    "\u110b\u0007z\u0002\u0002\u110b\u110c\u0007\u007f\u0002\u0002\u110c",
    "\u110d\u0007\u0002\u0002\u0003\u110d\u025b\u0003\u0002\u0002\u0002\u110e",
    "\u110f\u0007\u007f\u0002\u0002\u110f\u1110\u0007\u0002\u0002\u0003\u1110",
    "\u025d\u0003\u0002\u0002\u0002\u1111\u1112\u0007P\u0002\u0002\u1112",
    "\u1113\u0005\u00e2r\u0002\u1113\u1114\u0007Q\u0002\u0002\u1114\u1115",
    "\u0007\u0002\u0002\u0003\u1115\u025f\u0003\u0002\u0002\u0002\u1116\u1118",
    "\u0005\u00e4s\u0002\u1117\u1116\u0003\u0002\u0002\u0002\u1117\u1118",
    "\u0003\u0002\u0002\u0002\u1118\u1119\u0003\u0002\u0002\u0002\u1119\u111f",
    "\u0007\u0002\u0002\u0003\u111a\u111b\u0005\u00e2r\u0002\u111b\u111c",
    "\u0005\u00e4s\u0002\u111c\u111d\u0007\u0002\u0002\u0003\u111d\u111f",
    "\u0003\u0002\u0002\u0002\u111e\u1117\u0003\u0002\u0002\u0002\u111e\u111a",
    "\u0003\u0002\u0002\u0002\u111f\u0261\u0003\u0002\u0002\u0002\u1120\u1121",
    "\u0007P\u0002\u0002\u1121\u1122\u0005\u00e2r\u0002\u1122\u1123\u0007",
    "Q\u0002\u0002\u1123\u1124\u0007\u0002\u0002\u0003\u1124\u1130\u0003",
    "\u0002\u0002\u0002\u1125\u1126\u0007R\u0002\u0002\u1126\u1127\u0005",
    "\u00e2r\u0002\u1127\u1128\u0007S\u0002\u0002\u1128\u1129\u0007\u0002",
    "\u0002\u0003\u1129\u1130\u0003\u0002\u0002\u0002\u112a\u112b\u0007T",
    "\u0002\u0002\u112b\u112c\u0005\u00e2r\u0002\u112c\u112d\u0007U\u0002",
    "\u0002\u112d\u112e\u0007\u0002\u0002\u0003\u112e\u1130\u0003\u0002\u0002",
    "\u0002\u112f\u1120\u0003\u0002\u0002\u0002\u112f\u1125\u0003\u0002\u0002",
    "\u0002\u112f\u112a\u0003\u0002\u0002\u0002\u1130\u0263\u0003\u0002\u0002",
    "\u0002\u1131\u1132\u0005\u00e8u\u0002\u1132\u1133\u0007\u0002\u0002",
    "\u0003\u1133\u113a\u0003\u0002\u0002\u0002\u1134\u1135\u0005\u00e6t",
    "\u0002\u1135\u1136\u0007u\u0002\u0002\u1136\u1137\u0005\u00e8u\u0002",
    "\u1137\u1138\u0007\u0002\u0002\u0003\u1138\u113a\u0003\u0002\u0002\u0002",
    "\u1139\u1131\u0003\u0002\u0002\u0002\u1139\u1134\u0003\u0002\u0002\u0002",
    "\u113a\u0265\u0003\u0002\u0002\u0002\u113b\u113d\u0005\u00eav\u0002",
    "\u113c\u113e\u0005\u0114\u008b\u0002\u113d\u113c\u0003\u0002\u0002\u0002",
    "\u113d\u113e\u0003\u0002\u0002\u0002\u113e\u113f\u0003\u0002\u0002\u0002",
    "\u113f\u1140\u0007\u0002\u0002\u0003\u1140\u0267\u0003\u0002\u0002\u0002",
    "\u1141\u1142\u0005\u00ecw\u0002\u1142\u1143\u0007\u0002\u0002\u0003",
    "\u1143\u114a\u0003\u0002\u0002\u0002\u1144\u1145\u0005\u00eex\u0002",
    "\u1145\u1146\u0005\u00f0y\u0002\u1146\u1147\u0005\u00f2z\u0002\u1147",
    "\u1148\u0007\u0002\u0002\u0003\u1148\u114a\u0003\u0002\u0002\u0002\u1149",
    "\u1141\u0003\u0002\u0002\u0002\u1149\u1144\u0003\u0002\u0002\u0002\u114a",
    "\u0269\u0003\u0002\u0002\u0002\u114b\u114c\u0005\u00eex\u0002\u114c",
    "\u114d\u0007\u0002\u0002\u0003\u114d\u1153\u0003\u0002\u0002\u0002\u114e",
    "\u114f\u0005\u00f4{\u0002\u114f\u1150\u0005\u00ecw\u0002\u1150\u1151",
    "\u0007\u0002\u0002\u0003\u1151\u1153\u0003\u0002\u0002\u0002\u1152\u114b",
    "\u0003\u0002\u0002\u0002\u1152\u114e\u0003\u0002\u0002\u0002\u1153\u026b",
    "\u0003\u0002\u0002\u0002\u1154\u1156\u0005\u00fc\u007f\u0002\u1155\u1157",
    "\u0005\u00d0i\u0002\u1156\u1155\u0003\u0002\u0002\u0002\u1156\u1157",
    "\u0003\u0002\u0002\u0002\u1157\u1158\u0003\u0002\u0002\u0002\u1158\u1159",
    "\u0007\u0002\u0002\u0003\u1159\u116f\u0003\u0002\u0002\u0002\u115a\u115b",
    "\u0005\u00eex\u0002\u115b\u115c\u0005\u00f0y\u0002\u115c\u115d\u0007",
    "\u0002\u0002\u0003\u115d\u116f\u0003\u0002\u0002\u0002\u115e\u115f\u0005",
    "\u00eex\u0002\u115f\u1161\u0007R\u0002\u0002\u1160\u1162\u0005Z.\u0002",
    "\u1161\u1160\u0003\u0002\u0002\u0002\u1161\u1162\u0003\u0002\u0002\u0002",
    "\u1162\u1163\u0003\u0002\u0002\u0002\u1163\u1165\u0007S\u0002\u0002",
    "\u1164\u1166\u0005\u00d0i\u0002\u1165\u1164\u0003\u0002\u0002\u0002",
    "\u1165\u1166\u0003\u0002\u0002\u0002\u1166\u1167\u0003\u0002\u0002\u0002",
    "\u1167\u1168\u0007\u0002\u0002\u0003\u1168\u116f\u0003\u0002\u0002\u0002",
    "\u1169\u116a\u0007P\u0002\u0002\u116a\u116b\u0005\u00ecw\u0002\u116b",
    "\u116c\u0007Q\u0002\u0002\u116c\u116d\u0007\u0002\u0002\u0003\u116d",
    "\u116f\u0003\u0002\u0002\u0002\u116e\u1154\u0003\u0002\u0002\u0002\u116e",
    "\u115a\u0003\u0002\u0002\u0002\u116e\u115e\u0003\u0002\u0002\u0002\u116e",
    "\u1169\u0003\u0002\u0002\u0002\u116f\u026d\u0003\u0002\u0002\u0002\u1170",
    "\u1171\u0007P\u0002\u0002\u1171\u1172\u0005\u010a\u0086\u0002\u1172",
    "\u1174\u0007Q\u0002\u0002\u1173\u1175\u0005\u00f6|\u0002\u1174\u1173",
    "\u0003\u0002\u0002\u0002\u1174\u1175\u0003\u0002\u0002\u0002\u1175\u1177",
    "\u0003\u0002\u0002\u0002\u1176\u1178\u0005\u00fa~\u0002\u1177\u1176",
    "\u0003\u0002\u0002\u0002\u1177\u1178\u0003\u0002\u0002\u0002\u1178\u1179",
    "\u0003\u0002\u0002\u0002\u1179\u117b\u0007\u0002\u0002\u0003\u117a\u117c",
    "\u0005\u017a\u00be\u0002\u117b\u117a\u0003\u0002\u0002\u0002\u117b\u117c",
    "\u0003\u0002\u0002\u0002\u117c\u117e\u0003\u0002\u0002\u0002\u117d\u117f",
    "\u0005\u00d0i\u0002\u117e\u117d\u0003\u0002\u0002\u0002\u117e\u117f",
    "\u0003\u0002\u0002\u0002\u117f\u1180\u0003\u0002\u0002\u0002\u1180\u1181",
    "\u0007\u0002\u0002\u0003\u1181\u026f\u0003\u0002\u0002\u0002\u1182\u1183",
    "\u0007w\u0002\u0002\u1183\u1185\u0005\u0096L\u0002\u1184\u1186\u0005",
    "\u0100\u0081\u0002\u1185\u1184\u0003\u0002\u0002\u0002\u1185\u1186\u0003",
    "\u0002\u0002\u0002\u1186\u1187\u0003\u0002\u0002\u0002\u1187\u1188\u0007",
    "\u0002\u0002\u0003\u1188\u0271\u0003\u0002\u0002\u0002\u1189\u118b\u0007",
    "X\u0002\u0002\u118a\u118c\u0005\u00d0i\u0002\u118b\u118a\u0003\u0002",
    "\u0002\u0002\u118b\u118c\u0003\u0002\u0002\u0002\u118c\u118e\u0003\u0002",
    "\u0002\u0002\u118d\u118f\u0005\u00f6|\u0002\u118e\u118d\u0003\u0002",
    "\u0002\u0002\u118e\u118f\u0003\u0002\u0002\u0002\u118f\u1190\u0003\u0002",
    "\u0002\u0002\u1190\u11a6\u0007\u0002\u0002\u0003\u1191\u1193\u0007\\",
    "\u0002\u0002\u1192\u1194\u0005\u00d0i\u0002\u1193\u1192\u0003\u0002",
    "\u0002\u0002\u1193\u1194\u0003\u0002\u0002\u0002\u1194\u1195\u0003\u0002",
    "\u0002\u0002\u1195\u11a6\u0007\u0002\u0002\u0003\u1196\u1198\u0007q",
    "\u0002\u0002\u1197\u1199\u0005\u00d0i\u0002\u1198\u1197\u0003\u0002",
    "\u0002\u0002\u1198\u1199\u0003\u0002\u0002\u0002\u1199\u119a\u0003\u0002",
    "\u0002\u0002\u119a\u11a6\u0007\u0002\u0002\u0003\u119b\u119c\u0005\f",
    "\u0007\u0002\u119c\u119e\u0007X\u0002\u0002\u119d\u119f\u0005\u00d0",
    "i\u0002\u119e\u119d\u0003\u0002\u0002\u0002\u119e\u119f\u0003\u0002",
    "\u0002\u0002\u119f\u11a1\u0003\u0002\u0002\u0002\u11a0\u11a2\u0005\u00f6",
    "|\u0002\u11a1\u11a0\u0003\u0002\u0002\u0002\u11a1\u11a2\u0003\u0002",
    "\u0002\u0002\u11a2\u11a3\u0003\u0002\u0002\u0002\u11a3\u11a4\u0007\u0002",
    "\u0002\u0003\u11a4\u11a6\u0003\u0002\u0002\u0002\u11a5\u1189\u0003\u0002",
    "\u0002\u0002\u11a5\u1191\u0003\u0002\u0002\u0002\u11a5\u1196\u0003\u0002",
    "\u0002\u0002\u11a5\u119b\u0003\u0002\u0002\u0002\u11a6\u0273\u0003\u0002",
    "\u0002\u0002\u11a7\u11a9\u0005\u00f8}\u0002\u11a8\u11aa\u0005\u00f6",
    "|\u0002\u11a9\u11a8\u0003\u0002\u0002\u0002\u11a9\u11aa\u0003\u0002",
    "\u0002\u0002\u11aa\u11ab\u0003\u0002\u0002\u0002\u11ab\u11ac\u0007\u0002",
    "\u0002\u0003\u11ac\u0275\u0003\u0002\u0002\u0002\u11ad\u11ae\u0007\u0011",
    "\u0002\u0002\u11ae\u11b2\u0007\u0002\u0002\u0003\u11af\u11b0\u0007M",
    "\u0002\u0002\u11b0\u11b2\u0007\u0002\u0002\u0003\u11b1\u11ad\u0003\u0002",
    "\u0002\u0002\u11b1\u11af\u0003\u0002\u0002\u0002\u11b2\u0277\u0003\u0002",
    "\u0002\u0002\u11b3\u11b4\u0007\\\u0002\u0002\u11b4\u11b8\u0007\u0002",
    "\u0002\u0003\u11b5\u11b6\u0007q\u0002\u0002\u11b6\u11b8\u0007\u0002",
    "\u0002\u0003\u11b7\u11b3\u0003\u0002\u0002\u0002\u11b7\u11b5\u0003\u0002",
    "\u0002\u0002\u11b8\u0279\u0003\u0002\u0002\u0002\u11b9\u11bb\u0007~",
    "\u0002\u0002\u11ba\u11b9\u0003\u0002\u0002\u0002\u11ba\u11bb\u0003\u0002",
    "\u0002\u0002\u11bb\u11bc\u0003\u0002\u0002\u0002\u11bc\u11bd\u0005\u0006",
    "\u0004\u0002\u11bd\u11be\u0007\u0002\u0002\u0003\u11be\u027b\u0003\u0002",
    "\u0002\u0002\u11bf\u11c1\u0005\u0094K\u0002\u11c0\u11c2\u0005\u0100",
    "\u0081\u0002\u11c1\u11c0\u0003\u0002\u0002\u0002\u11c1\u11c2\u0003\u0002",
    "\u0002\u0002\u11c2\u11c3\u0003\u0002\u0002\u0002\u11c3\u11c4\u0007\u0002",
    "\u0002\u0003\u11c4\u027d\u0003\u0002\u0002\u0002\u11c5\u11c6\u0005\u0102",
    "\u0082\u0002\u11c6\u11c7\u0007\u0002\u0002\u0003\u11c7\u11d3\u0003\u0002",
    "\u0002\u0002\u11c8\u11ca\u0005\u0104\u0083\u0002\u11c9\u11c8\u0003\u0002",
    "\u0002\u0002\u11c9\u11ca\u0003\u0002\u0002\u0002\u11ca\u11cb\u0003\u0002",
    "\u0002\u0002\u11cb\u11cc\u0005\u00f0y\u0002\u11cc\u11cd\u0005\u00f2",
    "z\u0002\u11cd\u11ce\u0007\u0002\u0002\u0003\u11ce\u11d3\u0003\u0002",
    "\u0002\u0002\u11cf\u11d0\u0005\u0106\u0084\u0002\u11d0\u11d1\u0007\u0002",
    "\u0002\u0003\u11d1\u11d3\u0003\u0002\u0002\u0002\u11d2\u11c5\u0003\u0002",
    "\u0002\u0002\u11d2\u11c9\u0003\u0002\u0002\u0002\u11d2\u11cf\u0003\u0002",
    "\u0002\u0002\u11d3\u027f\u0003\u0002\u0002\u0002\u11d4\u11d5\u0005\u0104",
    "\u0083\u0002\u11d5\u11d6\u0007\u0002\u0002\u0003\u11d6\u11de\u0003\u0002",
    "\u0002\u0002\u11d7\u11d9\u0005\u00f4{\u0002\u11d8\u11da\u0005\u0102",
    "\u0082\u0002\u11d9\u11d8\u0003\u0002\u0002\u0002\u11d9\u11da\u0003\u0002",
    "\u0002\u0002\u11da\u11db\u0003\u0002\u0002\u0002\u11db\u11dc\u0007\u0002",
    "\u0002\u0003\u11dc\u11de\u0003\u0002\u0002\u0002\u11dd\u11d4\u0003\u0002",
    "\u0002\u0002\u11dd\u11d7\u0003\u0002\u0002\u0002\u11de\u0281\u0003\u0002",
    "\u0002\u0002\u11df\u11e0\u0005\u0104\u0083\u0002\u11e0\u11e1\u0005\u00f0",
    "y\u0002\u11e1\u11e2\u0007\u0002\u0002\u0003\u11e2\u1200\u0003\u0002",
    "\u0002\u0002\u11e3\u11e4\u0005\u00f0y\u0002\u11e4\u11e5\u0007\u0002",
    "\u0002\u0003\u11e5\u1200\u0003\u0002\u0002\u0002\u11e6\u11e7\u0005\u0104",
    "\u0083\u0002\u11e7\u11e9\u0007R\u0002\u0002\u11e8\u11ea\u0005Z.\u0002",
    "\u11e9\u11e8\u0003\u0002\u0002\u0002\u11e9\u11ea\u0003\u0002\u0002\u0002",
    "\u11ea\u11eb\u0003\u0002\u0002\u0002\u11eb\u11ed\u0007S\u0002\u0002",
    "\u11ec\u11ee\u0005\u00d0i\u0002\u11ed\u11ec\u0003\u0002\u0002\u0002",
    "\u11ed\u11ee\u0003\u0002\u0002\u0002\u11ee\u11ef\u0003\u0002\u0002\u0002",
    "\u11ef\u11f0\u0007\u0002\u0002\u0003\u11f0\u1200\u0003\u0002\u0002\u0002",
    "\u11f1\u11f3\u0007R\u0002\u0002\u11f2\u11f4\u0005Z.\u0002\u11f3\u11f2",
    "\u0003\u0002\u0002\u0002\u11f3\u11f4\u0003\u0002\u0002\u0002\u11f4\u11f5",
    "\u0003\u0002\u0002\u0002\u11f5\u11f7\u0007S\u0002\u0002\u11f6\u11f8",
    "\u0005\u00d0i\u0002\u11f7\u11f6\u0003\u0002\u0002\u0002\u11f7\u11f8",
    "\u0003\u0002\u0002\u0002\u11f8\u11f9\u0003\u0002\u0002\u0002\u11f9\u1200",
    "\u0007\u0002\u0002\u0003\u11fa\u11fb\u0007P\u0002\u0002\u11fb\u11fc",
    "\u0005\u0102\u0082\u0002\u11fc\u11fd\u0007Q\u0002\u0002\u11fd\u11fe",
    "\u0007\u0002\u0002\u0003\u11fe\u1200\u0003\u0002\u0002\u0002\u11ff\u11df",
    "\u0003\u0002\u0002\u0002\u11ff\u11e3\u0003\u0002\u0002\u0002\u11ff\u11e6",
    "\u0003\u0002\u0002\u0002\u11ff\u11f1\u0003\u0002\u0002\u0002\u11ff\u11fa",
    "\u0003\u0002\u0002\u0002\u1200\u0283\u0003\u0002\u0002\u0002\u1201\u1202",
    "\u0005\u0108\u0085\u0002\u1202\u1203\u0007\u0002\u0002\u0003\u1203\u1209",
    "\u0003\u0002\u0002\u0002\u1204\u1205\u0005\u00f4{\u0002\u1205\u1206",
    "\u0005\u0106\u0084\u0002\u1206\u1207\u0007\u0002\u0002\u0003\u1207\u1209",
    "\u0003\u0002\u0002\u0002\u1208\u1201\u0003\u0002\u0002\u0002\u1208\u1204",
    "\u0003\u0002\u0002\u0002\u1209\u0285\u0003\u0002\u0002\u0002\u120a\u120b",
    "\u0005\u0108\u0085\u0002\u120b\u120c\u0005\u00f0y\u0002\u120c\u120d",
    "\u0007\u0002\u0002\u0003\u120d\u121d\u0003\u0002\u0002\u0002\u120e\u120f",
    "\u0005\u0108\u0085\u0002\u120f\u1211\u0007R\u0002\u0002\u1210\u1212",
    "\u0005Z.\u0002\u1211\u1210\u0003\u0002\u0002\u0002\u1211\u1212\u0003",
    "\u0002\u0002\u0002\u1212\u1213\u0003\u0002\u0002\u0002\u1213\u1214\u0007",
    "S\u0002\u0002\u1214\u1216\u0007\u0002\u0002\u0003\u1215\u1217\u0005",
    "\u00d0i\u0002\u1216\u1215\u0003\u0002\u0002\u0002\u1216\u1217\u0003",
    "\u0002\u0002\u0002\u1217\u1218\u0003\u0002\u0002\u0002\u1218\u1219\u0007",
    "\u0002\u0002\u0003\u1219\u121d\u0003\u0002\u0002\u0002\u121a\u121b\u0007",
    "~\u0002\u0002\u121b\u121d\u0007\u0002\u0002\u0003\u121c\u120a\u0003",
    "\u0002\u0002\u0002\u121c\u120e\u0003\u0002\u0002\u0002\u121c\u121a\u0003",
    "\u0002\u0002\u0002\u121d\u0287\u0003\u0002\u0002\u0002\u121e\u1220\u0005",
    "\u010c\u0087\u0002\u121f\u121e\u0003\u0002\u0002\u0002\u121f\u1220\u0003",
    "\u0002\u0002\u0002\u1220\u1222\u0003\u0002\u0002\u0002\u1221\u1223\u0007",
    "~\u0002\u0002\u1222\u1221\u0003\u0002\u0002\u0002\u1222\u1223\u0003",
    "\u0002\u0002\u0002\u1223\u1224\u0003\u0002\u0002\u0002\u1224\u122b\u0007",
    "\u0002\u0002\u0003\u1225\u1226\u0005\u010c\u0087\u0002\u1226\u1227\u0007",
    "u\u0002\u0002\u1227\u1228\u0007~\u0002\u0002\u1228\u1229\u0007\u0002",
    "\u0002\u0003\u1229\u122b\u0003\u0002\u0002\u0002\u122a\u121f\u0003\u0002",
    "\u0002\u0002\u122a\u1225\u0003\u0002\u0002\u0002\u122b\u0289\u0003\u0002",
    "\u0002\u0002\u122c\u122d\u0005\u010e\u0088\u0002\u122d\u122e\u0007\u0002",
    "\u0002\u0003\u122e\u1235\u0003\u0002\u0002\u0002\u122f\u1230\u0005\u010c",
    "\u0087\u0002\u1230\u1231\u0007u\u0002\u0002\u1231\u1232\u0005\u010e",
    "\u0088\u0002\u1232\u1233\u0007\u0002\u0002\u0003\u1233\u1235\u0003\u0002",
    "\u0002\u0002\u1234\u122c\u0003\u0002\u0002\u0002\u1234\u122f\u0003\u0002",
    "\u0002\u0002\u1235\u028b\u0003\u0002\u0002\u0002\u1236\u1238\u0005\u00d0",
    "i\u0002\u1237\u1236\u0003\u0002\u0002\u0002\u1237\u1238\u0003\u0002",
    "\u0002\u0002\u1238\u1239\u0003\u0002\u0002\u0002\u1239\u123a\u0005\u0088",
    "E\u0002\u123a\u123b\u0005\u00eav\u0002\u123b\u123c\u0007\u0002\u0002",
    "\u0003\u123c\u125c\u0003\u0002\u0002\u0002\u123d\u123f\u0005\u00d0i",
    "\u0002\u123e\u123d\u0003\u0002\u0002\u0002\u123e\u123f\u0003\u0002\u0002",
    "\u0002\u123f\u1240\u0003\u0002\u0002\u0002\u1240\u1241\u0005\u0088E",
    "\u0002\u1241\u1242\u0005\u00eav\u0002\u1242\u1243\u0007`\u0002\u0002",
    "\u1243\u1244\u0005\u0118\u008d\u0002\u1244\u1245\u0007\u0002\u0002\u0003",
    "\u1245\u125c\u0003\u0002\u0002\u0002\u1246\u1248\u0005\u00d0i\u0002",
    "\u1247\u1246\u0003\u0002\u0002\u0002\u1247\u1248\u0003\u0002\u0002\u0002",
    "\u1248\u1249\u0003\u0002\u0002\u0002\u1249\u124b\u0005\u0088E\u0002",
    "\u124a\u124c\u0005\u0100\u0081\u0002\u124b\u124a\u0003\u0002\u0002\u0002",
    "\u124b\u124c\u0003\u0002\u0002\u0002\u124c\u124d\u0003\u0002\u0002\u0002",
    "\u124d\u124e\u0007\u0002\u0002\u0003\u124e\u125c\u0003\u0002\u0002\u0002",
    "\u124f\u1251\u0005\u00d0i\u0002\u1250\u124f\u0003\u0002\u0002\u0002",
    "\u1250\u1251\u0003\u0002\u0002\u0002\u1251\u1252\u0003\u0002\u0002\u0002",
    "\u1252\u1254\u0005\u0088E\u0002\u1253\u1255\u0005\u0100\u0081\u0002",
    "\u1254\u1253\u0003\u0002\u0002\u0002\u1254\u1255\u0003\u0002\u0002\u0002",
    "\u1255\u1256\u0003\u0002\u0002\u0002\u1256\u1257\u0007`\u0002\u0002",
    "\u1257\u1258\u0007\u0002\u0002\u0003\u1258\u1259\u0005\u0118\u008d\u0002",
    "\u1259\u125a\u0007\u0002\u0002\u0003\u125a\u125c\u0003\u0002\u0002\u0002",
    "\u125b\u1237\u0003\u0002\u0002\u0002\u125b\u123e\u0003\u0002\u0002\u0002",
    "\u125b\u1247\u0003\u0002\u0002\u0002\u125b\u1250\u0003\u0002\u0002\u0002",
    "\u125c\u028d\u0003\u0002\u0002\u0002\u125d\u125f\u0005\u00d0i\u0002",
    "\u125e\u125d\u0003\u0002\u0002\u0002\u125e\u125f\u0003\u0002\u0002\u0002",
    "\u125f\u1261\u0003\u0002\u0002\u0002\u1260\u1262\u0005\u0088E\u0002",
    "\u1261\u1260\u0003\u0002\u0002\u0002\u1261\u1262\u0003\u0002\u0002\u0002",
    "\u1262\u1263\u0003\u0002\u0002\u0002\u1263\u1265\u0005\u00eav\u0002",
    "\u1264\u1266\u0005\u0132\u009a\u0002\u1265\u1264\u0003\u0002\u0002\u0002",
    "\u1265\u1266\u0003\u0002\u0002\u0002\u1266\u1267\u0003\u0002\u0002\u0002",
    "\u1267\u1268\u0007\u0002\u0002\u0003\u1268\u1269\u0005\u0112\u008a\u0002",
    "\u1269\u126a\u0007\u0002\u0002\u0003\u126a\u028f\u0003\u0002\u0002\u0002",
    "\u126b\u126d\u0005\u014a\u00a6\u0002\u126c\u126b\u0003\u0002\u0002\u0002",
    "\u126c\u126d\u0003\u0002\u0002\u0002\u126d\u126e\u0003\u0002\u0002\u0002",
    "\u126e\u126f\u0005b2\u0002\u126f\u1270\u0007\u0002\u0002\u0003\u1270",
    "\u127d\u0003\u0002\u0002\u0002\u1271\u1272\u0005\u0170\u00b9\u0002\u1272",
    "\u1273\u0007\u0002\u0002\u0003\u1273\u127d\u0003\u0002\u0002\u0002\u1274",
    "\u1275\u0007`\u0002\u0002\u1275\u1276\u0007\u0016\u0002\u0002\u1276",
    "\u1277\u0007{\u0002\u0002\u1277\u127d\u0007\u0002\u0002\u0003\u1278",
    "\u1279\u0007`\u0002\u0002\u1279\u127a\u0007\u0017\u0002\u0002\u127a",
    "\u127b\u0007{\u0002\u0002\u127b\u127d\u0007\u0002\u0002\u0003\u127c",
    "\u126c\u0003\u0002\u0002\u0002\u127c\u1271\u0003\u0002\u0002\u0002\u127c",
    "\u1274\u0003\u0002\u0002\u0002\u127c\u1278\u0003\u0002\u0002\u0002\u127d",
    "\u0291\u0003\u0002\u0002\u0002\u127e\u127f\u0005\u0116\u008c\u0002\u127f",
    "\u1280\u0007\u0002\u0002\u0003\u1280\u1287\u0003\u0002\u0002\u0002\u1281",
    "\u1282\u0007P\u0002\u0002\u1282\u1283\u0005\"\u0012\u0002\u1283\u1284",
    "\u0007Q\u0002\u0002\u1284\u1285\u0007\u0002\u0002\u0003\u1285\u1287",
    "\u0003\u0002\u0002\u0002\u1286\u127e\u0003\u0002\u0002\u0002\u1286\u1281",
    "\u0003\u0002\u0002\u0002\u1287\u0293\u0003\u0002\u0002\u0002\u1288\u1289",
    "\u0007`\u0002\u0002\u1289\u128a\u0005\u0118\u008d\u0002\u128a\u128b",
    "\u0007\u0002\u0002\u0003\u128b\u1290\u0003\u0002\u0002\u0002\u128c\u128d",
    "\u0005\u011c\u008f\u0002\u128d\u128e\u0007\u0002\u0002\u0003\u128e\u1290",
    "\u0003\u0002\u0002\u0002\u128f\u1288\u0003\u0002\u0002\u0002\u128f\u128c",
    "\u0003\u0002\u0002\u0002\u1290\u0295\u0003\u0002\u0002\u0002\u1291\u1292",
    "\u0005T+\u0002\u1292\u1293\u0007\u0002\u0002\u0003\u1293\u1298\u0003",
    "\u0002\u0002\u0002\u1294\u1295\u0005\u011c\u008f\u0002\u1295\u1296\u0007",
    "\u0002\u0002\u0003\u1296\u1298\u0003\u0002\u0002\u0002\u1297\u1291\u0003",
    "\u0002\u0002\u0002\u1297\u1294\u0003\u0002\u0002\u0002\u1298\u0297\u0003",
    "\u0002\u0002\u0002\u1299\u129b\u0005\u0118\u008d\u0002\u129a\u129c\u0007",
    "~\u0002\u0002\u129b\u129a\u0003\u0002\u0002\u0002\u129b\u129c\u0003",
    "\u0002\u0002\u0002\u129c\u129d\u0003\u0002\u0002\u0002\u129d\u129e\u0007",
    "\u0002\u0002\u0003\u129e\u12a8\u0003\u0002\u0002\u0002\u129f\u12a0\u0005",
    "\u011a\u008e\u0002\u12a0\u12a1\u0007u\u0002\u0002\u12a1\u12a3\u0005",
    "\u0118\u008d\u0002\u12a2\u12a4\u0007~\u0002\u0002\u12a3\u12a2\u0003",
    "\u0002\u0002\u0002\u12a3\u12a4\u0003\u0002\u0002\u0002\u12a4\u12a5\u0003",
    "\u0002\u0002\u0002\u12a5\u12a6\u0007\u0002\u0002\u0003\u12a6\u12a8\u0003",
    "\u0002\u0002\u0002\u12a7\u1299\u0003\u0002\u0002\u0002\u12a7\u129f\u0003",
    "\u0002\u0002\u0002\u12a8\u0299\u0003\u0002\u0002\u0002\u12a9\u12aa\u0007",
    "T\u0002\u0002\u12aa\u12ac\u0005\u011a\u008e\u0002\u12ab\u12ad\u0007",
    "u\u0002\u0002\u12ac\u12ab\u0003\u0002\u0002\u0002\u12ac\u12ad\u0003",
    "\u0002\u0002\u0002\u12ad\u12ae\u0003\u0002\u0002\u0002\u12ae\u12af\u0007",
    "U\u0002\u0002\u12af\u12b0\u0007\u0002\u0002\u0003\u12b0\u12b5\u0003",
    "\u0002\u0002\u0002\u12b1\u12b2\u0007T\u0002\u0002\u12b2\u12b3\u0007",
    "U\u0002\u0002\u12b3\u12b5\u0007\u0002\u0002\u0003\u12b4\u12a9\u0003",
    "\u0002\u0002\u0002\u12b4\u12b1\u0003\u0002\u0002\u0002\u12b5\u029b\u0003",
    "\u0002\u0002\u0002\u12b6\u12b7\u0007\u007f\u0002\u0002\u12b7\u12bc\u0007",
    "\u0002\u0002\u0003\u12b8\u12b9\u0005\u015e\u00b0\u0002\u12b9\u12ba\u0007",
    "\u0002\u0002\u0003\u12ba\u12bc\u0003\u0002\u0002\u0002\u12bb\u12b6\u0003",
    "\u0002\u0002\u0002\u12bb\u12b8\u0003\u0002\u0002\u0002\u12bc\u029d\u0003",
    "\u0002\u0002\u0002\u12bd\u12be\u0005\u0122\u0092\u0002\u12be\u12c0\u0007",
    "T\u0002\u0002\u12bf\u12c1\u0005\u012a\u0096\u0002\u12c0\u12bf\u0003",
    "\u0002\u0002\u0002\u12c0\u12c1\u0003\u0002\u0002\u0002\u12c1\u12c2\u0003",
    "\u0002\u0002\u0002\u12c2\u12c3\u0007U\u0002\u0002\u12c3\u12c4\u0007",
    "\u0002\u0002\u0003\u12c4\u029f\u0003\u0002\u0002\u0002\u12c5\u12c7\u0005",
    "\u0128\u0095\u0002\u12c6\u12c8\u0005\u00d0i\u0002\u12c7\u12c6\u0003",
    "\u0002\u0002\u0002\u12c7\u12c8\u0003\u0002\u0002\u0002\u12c8\u12c9\u0003",
    "\u0002\u0002\u0002\u12c9\u12cb\u0005\u0124\u0093\u0002\u12ca\u12cc\u0005",
    "\u0126\u0094\u0002\u12cb\u12ca\u0003\u0002\u0002\u0002\u12cb\u12cc\u0003",
    "\u0002\u0002\u0002\u12cc\u12ce\u0003\u0002\u0002\u0002\u12cd\u12cf\u0005",
    "\u0138\u009d\u0002\u12ce\u12cd\u0003\u0002\u0002\u0002\u12ce\u12cf\u0003",
    "\u0002\u0002\u0002\u12cf\u12d0\u0003\u0002\u0002\u0002\u12d0\u12d1\u0007",
    "\u0002\u0002\u0003\u12d1\u12dc\u0003\u0002\u0002\u0002\u12d2\u12d4\u0005",
    "\u0128\u0095\u0002\u12d3\u12d5\u0005\u00d0i\u0002\u12d4\u12d3\u0003",
    "\u0002\u0002\u0002\u12d4\u12d5\u0003\u0002\u0002\u0002\u12d5\u12d7\u0003",
    "\u0002\u0002\u0002\u12d6\u12d8\u0005\u0138\u009d\u0002\u12d7\u12d6\u0003",
    "\u0002\u0002\u0002\u12d7\u12d8\u0003\u0002\u0002\u0002\u12d8\u12d9\u0003",
    "\u0002\u0002\u0002\u12d9\u12da\u0007\u0002\u0002\u0003\u12da\u12dc\u0003",
    "\u0002\u0002\u0002\u12db\u12c5\u0003\u0002\u0002\u0002\u12db\u12d2\u0003",
    "\u0002\u0002\u0002\u12dc\u02a1\u0003\u0002\u0002\u0002\u12dd\u12df\u0005",
    "\f\u0007\u0002\u12de\u12dd\u0003\u0002\u0002\u0002\u12de\u12df\u0003",
    "\u0002\u0002\u0002\u12df\u12e0\u0003\u0002\u0002\u0002\u12e0\u12e1\u0005",
    "\u011e\u0090\u0002\u12e1\u12e2\u0007\u0002\u0002\u0003\u12e2\u02a3\u0003",
    "\u0002\u0002\u0002\u12e3\u12e4\u0007!\u0002\u0002\u12e4\u12e5\u0007",
    "\u0002\u0002\u0003\u12e5\u02a5\u0003\u0002\u0002\u0002\u12e6\u12e7\u0007",
    "\u0010\u0002\u0002\u12e7\u12ed\u0007\u0002\u0002\u0003\u12e8\u12e9\u0007",
    "=\u0002\u0002\u12e9\u12ed\u0007\u0002\u0002\u0003\u12ea\u12eb\u0007",
    "H\u0002\u0002\u12eb\u12ed\u0007\u0002\u0002\u0003\u12ec\u12e6\u0003",
    "\u0002\u0002\u0002\u12ec\u12e8\u0003\u0002\u0002\u0002\u12ec\u12ea\u0003",
    "\u0002\u0002\u0002\u12ed\u02a7\u0003\u0002\u0002\u0002\u12ee\u12f0\u0005",
    "\u012c\u0097\u0002\u12ef\u12f1\u0005\u012a\u0096\u0002\u12f0\u12ef\u0003",
    "\u0002\u0002\u0002\u12f0\u12f1\u0003\u0002\u0002\u0002\u12f1\u12f2\u0003",
    "\u0002\u0002\u0002\u12f2\u12f3\u0007\u0002\u0002\u0003\u12f3\u12fc\u0003",
    "\u0002\u0002\u0002\u12f4\u12f5\u0005\u0142\u00a2\u0002\u12f5\u12f7\u0007",
    "y\u0002\u0002\u12f6\u12f8\u0005\u012a\u0096\u0002\u12f7\u12f6\u0003",
    "\u0002\u0002\u0002\u12f7\u12f8\u0003\u0002\u0002\u0002\u12f8\u12f9\u0003",
    "\u0002\u0002\u0002\u12f9\u12fa\u0007\u0002\u0002\u0003\u12fa\u12fc\u0003",
    "\u0002\u0002\u0002\u12fb\u12ee\u0003\u0002\u0002\u0002\u12fb\u12f4\u0003",
    "\u0002\u0002\u0002\u12fc\u02a9\u0003\u0002\u0002\u0002\u12fd\u12ff\u0005",
    "\u00d0i\u0002\u12fe\u12fd\u0003\u0002\u0002\u0002\u12fe\u12ff\u0003",
    "\u0002\u0002\u0002\u12ff\u1301\u0003\u0002\u0002\u0002\u1300\u1302\u0005",
    "\u0088E\u0002\u1301\u1300\u0003\u0002\u0002\u0002\u1301\u1302\u0003",
    "\u0002\u0002\u0002\u1302\u1304\u0003\u0002\u0002\u0002\u1303\u1305\u0005",
    "\u012e\u0098\u0002\u1304\u1303\u0003\u0002\u0002\u0002\u1304\u1305\u0003",
    "\u0002\u0002\u0002\u1305\u1306\u0003\u0002\u0002\u0002\u1306\u1307\u0007",
    "{\u0002\u0002\u1307\u131b\u0007\u0002\u0002\u0003\u1308\u1309\u0005",
    "\u0110\u0089\u0002\u1309\u130a\u0007\u0002\u0002\u0003\u130a\u131b\u0003",
    "\u0002\u0002\u0002\u130b\u130c\u0005\u00c8e\u0002\u130c\u130d\u0007",
    "\u0002\u0002\u0003\u130d\u131b\u0003\u0002\u0002\u0002\u130e\u130f\u0005",
    "\u0080A\u0002\u130f\u1310\u0007\u0002\u0002\u0003\u1310\u131b\u0003",
    "\u0002\u0002\u0002\u1311\u1312\u0005\u0156\u00ac\u0002\u1312\u1313\u0007",
    "\u0002\u0002\u0003\u1313\u131b\u0003\u0002\u0002\u0002\u1314\u1315\u0005",
    "|?\u0002\u1315\u1316\u0007\u0002\u0002\u0003\u1316\u131b\u0003\u0002",
    "\u0002\u0002\u1317\u1318\u0005\u0082B\u0002\u1318\u1319\u0007\u0002",
    "\u0002\u0003\u1319\u131b\u0003\u0002\u0002\u0002\u131a\u12fe\u0003\u0002",
    "\u0002\u0002\u131a\u1308\u0003\u0002\u0002\u0002\u131a\u130b\u0003\u0002",
    "\u0002\u0002\u131a\u130e\u0003\u0002\u0002\u0002\u131a\u1311\u0003\u0002",
    "\u0002\u0002\u131a\u1314\u0003\u0002\u0002\u0002\u131a\u1317\u0003\u0002",
    "\u0002\u0002\u131b\u02ab\u0003\u0002\u0002\u0002\u131c\u131d\u0005\u0130",
    "\u0099\u0002\u131d\u131e\u0007\u0002\u0002\u0003\u131e\u1325\u0003\u0002",
    "\u0002\u0002\u131f\u1320\u0005\u012e\u0098\u0002\u1320\u1321\u0007u",
    "\u0002\u0002\u1321\u1322\u0005\u0130\u0099\u0002\u1322\u1323\u0007\u0002",
    "\u0002\u0003\u1323\u1325\u0003\u0002\u0002\u0002\u1324\u131c\u0003\u0002",
    "\u0002\u0002\u1324\u131f\u0003\u0002\u0002\u0002\u1325\u02ad\u0003\u0002",
    "\u0002\u0002\u1326\u1328\u0005\u00eav\u0002\u1327\u1329\u0005\u0132",
    "\u009a\u0002\u1328\u1327\u0003\u0002\u0002\u0002\u1328\u1329\u0003\u0002",
    "\u0002\u0002\u1329\u132b\u0003\u0002\u0002\u0002\u132a\u132c\u0005\u0136",
    "\u009c\u0002\u132b\u132a\u0003\u0002\u0002\u0002\u132b\u132c\u0003\u0002",
    "\u0002\u0002\u132c\u132d\u0003\u0002\u0002\u0002\u132d\u132e\u0007\u0002",
    "\u0002\u0003\u132e\u1340\u0003\u0002\u0002\u0002\u132f\u1331\u0005\u00ea",
    "v\u0002\u1330\u1332\u0005\u0116\u008c\u0002\u1331\u1330\u0003\u0002",
    "\u0002\u0002\u1331\u1332\u0003\u0002\u0002\u0002\u1332\u1333\u0003\u0002",
    "\u0002\u0002\u1333\u1334\u0007\u0002\u0002\u0003\u1334\u1340\u0003\u0002",
    "\u0002\u0002\u1335\u1337\u0007\u007f\u0002\u0002\u1336\u1335\u0003\u0002",
    "\u0002\u0002\u1336\u1337\u0003\u0002\u0002\u0002\u1337\u1339\u0003\u0002",
    "\u0002\u0002\u1338\u133a\u0005\u00d0i\u0002\u1339\u1338\u0003\u0002",
    "\u0002\u0002\u1339\u133a\u0003\u0002\u0002\u0002\u133a\u133b\u0003\u0002",
    "\u0002\u0002\u133b\u133c\u0007y\u0002\u0002\u133c\u133d\u0005Z.\u0002",
    "\u133d\u133e\u0007\u0002\u0002\u0003\u133e\u1340\u0003\u0002\u0002\u0002",
    "\u133f\u1326\u0003\u0002\u0002\u0002\u133f\u132f\u0003\u0002\u0002\u0002",
    "\u133f\u1336\u0003\u0002\u0002\u0002\u1340\u02af\u0003\u0002\u0002\u0002",
    "\u1341\u1342\u0005\u0134\u009b\u0002\u1342\u1343\u0007\u0002\u0002\u0003",
    "\u1343\u1349\u0003\u0002\u0002\u0002\u1344\u1345\u0005\u0132\u009a\u0002",
    "\u1345\u1346\u0005\u0134\u009b\u0002\u1346\u1347\u0007\u0002\u0002\u0003",
    "\u1347\u1349\u0003\u0002\u0002\u0002\u1348\u1341\u0003\u0002\u0002\u0002",
    "\u1348\u1344\u0003\u0002\u0002\u0002\u1349\u02b1\u0003\u0002\u0002\u0002",
    "\u134a\u134b\u00070\u0002\u0002\u134b\u134f\u0007\u0002\u0002\u0003",
    "\u134c\u134d\u0007!\u0002\u0002\u134d\u134f\u0007\u0002\u0002\u0003",
    "\u134e\u134a\u0003\u0002\u0002\u0002\u134e\u134c\u0003\u0002\u0002\u0002",
    "\u134f\u02b3\u0003\u0002\u0002\u0002\u1350\u1351\u0007`\u0002\u0002",
    "\u1351\u1352\u0007\u0082\u0002\u0002\u1352\u1353\u0007\u0002\u0002\u0003",
    "\u1353\u1354\b\u015b\u0001\u0002\u1354\u1355\u0007\u0002\u0002\u0003",
    "\u1355\u02b5\u0003\u0002\u0002\u0002\u1356\u1357\u0007y\u0002\u0002",
    "\u1357\u1358\u0005\u013a\u009e\u0002\u1358\u1359\u0007\u0002\u0002\u0003",
    "\u1359\u02b7\u0003\u0002\u0002\u0002\u135a\u135c\u0005\u013c\u009f\u0002",
    "\u135b\u135d\u0007~\u0002\u0002\u135c\u135b\u0003\u0002\u0002\u0002",
    "\u135c\u135d\u0003\u0002\u0002\u0002\u135d\u135e\u0003\u0002\u0002\u0002",
    "\u135e\u135f\u0007\u0002\u0002\u0003\u135f\u1369\u0003\u0002\u0002\u0002",
    "\u1360\u1361\u0005\u013a\u009e\u0002\u1361\u1362\u0007u\u0002\u0002",
    "\u1362\u1364\u0005\u013c\u009f\u0002\u1363\u1365\u0007~\u0002\u0002",
    "\u1364\u1363\u0003\u0002\u0002\u0002\u1364\u1365\u0003\u0002\u0002\u0002",
    "\u1365\u1366\u0003\u0002\u0002\u0002\u1366\u1367\u0007\u0002\u0002\u0003",
    "\u1367\u1369\u0003\u0002\u0002\u0002\u1368\u135a\u0003\u0002\u0002\u0002",
    "\u1368\u1360\u0003\u0002\u0002\u0002\u1369\u02b9\u0003\u0002\u0002\u0002",
    "\u136a\u136c\u0005\u00d0i\u0002\u136b\u136a\u0003\u0002\u0002\u0002",
    "\u136b\u136c\u0003\u0002\u0002\u0002\u136c\u136d\u0003\u0002\u0002\u0002",
    "\u136d\u136e\u0005\u0140\u00a1\u0002\u136e\u136f\u0007\u0002\u0002\u0003",
    "\u136f\u1385\u0003\u0002\u0002\u0002\u1370\u1372\u0005\u00d0i\u0002",
    "\u1371\u1370\u0003\u0002\u0002\u0002\u1371\u1372\u0003\u0002\u0002\u0002",
    "\u1372\u1373\u0003\u0002\u0002\u0002\u1373\u1375\u0007K\u0002\u0002",
    "\u1374\u1376\u0005\u0142\u00a2\u0002\u1375\u1374\u0003\u0002\u0002\u0002",
    "\u1375\u1376\u0003\u0002\u0002\u0002\u1376\u1377\u0003\u0002\u0002\u0002",
    "\u1377\u1378\u0005\u0140\u00a1\u0002\u1378\u1379\u0007\u0002\u0002\u0003",
    "\u1379\u1385\u0003\u0002\u0002\u0002\u137a\u137c\u0005\u00d0i\u0002",
    "\u137b\u137a\u0003\u0002\u0002\u0002\u137b\u137c\u0003\u0002\u0002\u0002",
    "\u137c\u137d\u0003\u0002\u0002\u0002\u137d\u137f\u0005\u0142\u00a2\u0002",
    "\u137e\u1380\u0007K\u0002\u0002\u137f\u137e\u0003\u0002\u0002\u0002",
    "\u137f\u1380\u0003\u0002\u0002\u0002\u1380\u1381\u0003\u0002\u0002\u0002",
    "\u1381\u1382\u0005\u0140\u00a1\u0002\u1382\u1383\u0007\u0002\u0002\u0003",
    "\u1383\u1385\u0003\u0002\u0002\u0002\u1384\u136b\u0003\u0002\u0002\u0002",
    "\u1384\u1371\u0003\u0002\u0002\u0002\u1384\u137b\u0003\u0002\u0002\u0002",
    "\u1385\u02bb\u0003\u0002\u0002\u0002\u1386\u1388\u0005\f\u0007\u0002",
    "\u1387\u1386\u0003\u0002\u0002\u0002\u1387\u1388\u0003\u0002\u0002\u0002",
    "\u1388\u1389\u0003\u0002\u0002\u0002\u1389\u138a\u0005\u011e\u0090\u0002",
    "\u138a\u138b\u0007\u0002\u0002\u0003\u138b\u1390\u0003\u0002\u0002\u0002",
    "\u138c\u138d\u0005\u009cO\u0002\u138d\u138e\u0007\u0002\u0002\u0003",
    "\u138e\u1390\u0003\u0002\u0002\u0002\u138f\u1387\u0003\u0002\u0002\u0002",
    "\u138f\u138c\u0003\u0002\u0002\u0002\u1390\u02bd\u0003\u0002\u0002\u0002",
    "\u1391\u1392\u0005\u013e\u00a0\u0002\u1392\u1393\u0007\u0002\u0002\u0003",
    "\u1393\u02bf\u0003\u0002\u0002\u0002\u1394\u1395\u00071\u0002\u0002",
    "\u1395\u139b\u0007\u0002\u0002\u0003\u1396\u1397\u00072\u0002\u0002",
    "\u1397\u139b\u0007\u0002\u0002\u0003\u1398\u1399\u00073\u0002\u0002",
    "\u1399\u139b\u0007\u0002\u0002\u0003\u139a\u1394\u0003\u0002\u0002\u0002",
    "\u139a\u1396\u0003\u0002\u0002\u0002\u139a\u1398\u0003\u0002\u0002\u0002",
    "\u139b\u02c1\u0003\u0002\u0002\u0002\u139c\u139d\u0007/\u0002\u0002",
    "\u139d\u139e\u0005\u0146\u00a4\u0002\u139e\u139f\u0007\u0002\u0002\u0003",
    "\u139f\u02c3\u0003\u0002\u0002\u0002\u13a0\u13a2\u0005\u0094K\u0002",
    "\u13a1\u13a3\u0005\u0148\u00a5\u0002\u13a2\u13a1\u0003\u0002\u0002\u0002",
    "\u13a2\u13a3\u0003\u0002\u0002\u0002\u13a3\u13a4\u0003\u0002\u0002\u0002",
    "\u13a4\u13a5\u0007\u0002\u0002\u0003\u13a5\u02c5\u0003\u0002\u0002\u0002",
    "\u13a6\u13a8\u0005\u00f4{\u0002\u13a7\u13a9\u0005\u0148\u00a5\u0002",
    "\u13a8\u13a7\u0003\u0002\u0002\u0002\u13a8\u13a9\u0003\u0002\u0002\u0002",
    "\u13a9\u13aa\u0003\u0002\u0002\u0002\u13aa\u13ab\u0007\u0002\u0002\u0003",
    "\u13ab\u02c7\u0003\u0002\u0002\u0002\u13ac\u13ad\u0007y\u0002\u0002",
    "\u13ad\u13ae\u0005\u014c\u00a7\u0002\u13ae\u13af\u0007\u0002\u0002\u0003",
    "\u13af\u02c9\u0003\u0002\u0002\u0002\u13b0\u13b2\u0005\u014e\u00a8\u0002",
    "\u13b1\u13b3\u0007~\u0002\u0002\u13b2\u13b1\u0003\u0002\u0002\u0002",
    "\u13b2\u13b3\u0003\u0002\u0002\u0002\u13b3\u13b4\u0003\u0002\u0002\u0002",
    "\u13b4\u13b5\u0007\u0002\u0002\u0003\u13b5\u13bf\u0003\u0002\u0002\u0002",
    "\u13b6\u13b8\u0005\u014e\u00a8\u0002\u13b7\u13b9\u0007~\u0002\u0002",
    "\u13b8\u13b7\u0003\u0002\u0002\u0002\u13b8\u13b9\u0003\u0002\u0002\u0002",
    "\u13b9\u13ba\u0003\u0002\u0002\u0002\u13ba\u13bb\u0007u\u0002\u0002",
    "\u13bb\u13bc\u0005\u014c\u00a7\u0002\u13bc\u13bd\u0007\u0002\u0002\u0003",
    "\u13bd\u13bf\u0003\u0002\u0002\u0002\u13be\u13b0\u0003\u0002\u0002\u0002",
    "\u13be\u13b6\u0003\u0002\u0002\u0002\u13bf\u02cb\u0003\u0002\u0002\u0002",
    "\u13c0\u13c1\u0005\u0150\u00a9\u0002\u13c1\u13c3\u0007P\u0002\u0002",
    "\u13c2\u13c4\u0005\"\u0012\u0002\u13c3\u13c2\u0003\u0002\u0002\u0002",
    "\u13c3\u13c4\u0003\u0002\u0002\u0002\u13c4\u13c5\u0003\u0002\u0002\u0002",
    "\u13c5\u13c6\u0007Q\u0002\u0002\u13c6\u13c7\u0007\u0002\u0002\u0003",
    "\u13c7\u13cd\u0003\u0002\u0002\u0002\u13c8\u13c9\u0005\u0150\u00a9\u0002",
    "\u13c9\u13ca\u0005\u011c\u008f\u0002\u13ca\u13cb\u0007\u0002\u0002\u0003",
    "\u13cb\u13cd\u0003\u0002\u0002\u0002\u13cc\u13c0\u0003\u0002\u0002\u0002",
    "\u13cc\u13c8\u0003\u0002\u0002\u0002\u13cd\u02cd\u0003\u0002\u0002\u0002",
    "\u13ce\u13cf\u0005\u013e\u00a0\u0002\u13cf\u13d0\u0007\u0002\u0002\u0003",
    "\u13d0\u13d4\u0003\u0002\u0002\u0002\u13d1\u13d2\u0007\u007f\u0002\u0002",
    "\u13d2\u13d4\u0007\u0002\u0002\u0003\u13d3\u13ce\u0003\u0002\u0002\u0002",
    "\u13d3\u13d1\u0003\u0002\u0002\u0002\u13d4\u02cf\u0003\u0002\u0002\u0002",
    "\u13d5\u13d6\u0007/\u0002\u0002\u13d6\u13d7\u0005\u0304\u0183\u0002",
    "\u13d7\u13d8\u0007\u0002\u0002\u0003\u13d8\u02d1\u0003\u0002\u0002\u0002",
    "\u13d9\u13da\u0007/\u0002\u0002\u13da\u13db\u0007\u0088\u0002\u0002",
    "\u13db\u13dc\u0007\u007f\u0002\u0002\u13dc\u13e1\u0007\u0002\u0002\u0003",
    "\u13dd\u13de\u0007/\u0002\u0002\u13de\u13df\u0007\u008b\u0002\u0002",
    "\u13df\u13e1\u0007\u0002\u0002\u0003\u13e0\u13d9\u0003\u0002\u0002\u0002",
    "\u13e0\u13dd\u0003\u0002\u0002\u0002\u13e1\u02d3\u0003\u0002\u0002\u0002",
    "\u13e2\u13e3\u0007?\u0002\u0002\u13e3\u13e4\u0007a\u0002\u0002\u13e4",
    "\u13e5\u0005\u0158\u00ad\u0002\u13e5\u13e6\u0007b\u0002\u0002\u13e6",
    "\u13e7\u0005x=\u0002\u13e7\u13e8\u0007\u0002\u0002\u0003\u13e8\u02d5",
    "\u0003\u0002\u0002\u0002\u13e9\u13ea\u0005\u015a\u00ae\u0002\u13ea\u13eb",
    "\u0007\u0002\u0002\u0003\u13eb\u13f2\u0003\u0002\u0002\u0002\u13ec\u13ed",
    "\u0005\u0158\u00ad\u0002\u13ed\u13ee\u0007u\u0002\u0002\u13ee\u13ef",
    "\u0005\u015a\u00ae\u0002\u13ef\u13f0\u0007\u0002\u0002\u0003\u13f0\u13f2",
    "\u0003\u0002\u0002\u0002\u13f1\u13e9\u0003\u0002\u0002\u0002\u13f1\u13ec",
    "\u0003\u0002\u0002\u0002\u13f2\u02d7\u0003\u0002\u0002\u0002\u13f3\u13f4",
    "\u0005\u015c\u00af\u0002\u13f4\u13f5\u0007\u0002\u0002\u0003\u13f5\u13fa",
    "\u0003\u0002\u0002\u0002\u13f6\u13f7\u0005\u010e\u0088\u0002\u13f7\u13f8",
    "\u0007\u0002\u0002\u0003\u13f8\u13fa\u0003\u0002\u0002\u0002\u13f9\u13f3",
    "\u0003\u0002\u0002\u0002\u13f9\u13f6\u0003\u0002\u0002\u0002\u13fa\u02d9",
    "\u0003\u0002\u0002\u0002\u13fb\u13fd\u0007\u0010\u0002\u0002\u13fc\u13fe",
    "\u0007~\u0002\u0002\u13fd\u13fc\u0003\u0002\u0002\u0002\u13fd\u13fe",
    "\u0003\u0002\u0002\u0002\u13fe\u1400\u0003\u0002\u0002\u0002\u13ff\u1401",
    "\u0007\u007f\u0002\u0002\u1400\u13ff\u0003\u0002\u0002\u0002\u1400\u1401",
    "\u0003\u0002\u0002\u0002\u1401\u1402\u0003\u0002\u0002\u0002\u1402\u1435",
    "\u0007\u0002\u0002\u0003\u1403\u1405\u0007\u0010\u0002\u0002\u1404\u1406",
    "\u0007\u007f\u0002\u0002\u1405\u1404\u0003\u0002\u0002\u0002\u1405\u1406",
    "\u0003\u0002\u0002\u0002\u1406\u1407\u0003\u0002\u0002\u0002\u1407\u1408",
    "\u0007`\u0002\u0002\u1408\u1409\u0005\u00fe\u0080\u0002\u1409\u140a",
    "\u0007\u0002\u0002\u0003\u140a\u1435\u0003\u0002\u0002\u0002\u140b\u140d",
    "\u0007G\u0002\u0002\u140c\u140e\u0007~\u0002\u0002\u140d\u140c\u0003",
    "\u0002\u0002\u0002\u140d\u140e\u0003\u0002\u0002\u0002\u140e\u1410\u0003",
    "\u0002\u0002\u0002\u140f\u1411\u0007\u007f\u0002\u0002\u1410\u140f\u0003",
    "\u0002\u0002\u0002\u1410\u1411\u0003\u0002\u0002\u0002\u1411\u1412\u0003",
    "\u0002\u0002\u0002\u1412\u1435\u0007\u0002\u0002\u0003\u1413\u1415\u0007",
    "G\u0002\u0002\u1414\u1416\u0007\u007f\u0002\u0002\u1415\u1414\u0003",
    "\u0002\u0002\u0002\u1415\u1416\u0003\u0002\u0002\u0002\u1416\u1417\u0003",
    "\u0002\u0002\u0002\u1417\u1418\u0007`\u0002\u0002\u1418\u1419\u0005",
    "\u00fe\u0080\u0002\u1419\u141a\u0007\u0002\u0002\u0003\u141a\u1435\u0003",
    "\u0002\u0002\u0002\u141b\u141c\u0007?\u0002\u0002\u141c\u141d\u0007",
    "a\u0002\u0002\u141d\u141e\u0005\u0158\u00ad\u0002\u141e\u141f\u0007",
    "b\u0002\u0002\u141f\u1421\u0007\u0010\u0002\u0002\u1420\u1422\u0007",
    "~\u0002\u0002\u1421\u1420\u0003\u0002\u0002\u0002\u1421\u1422\u0003",
    "\u0002\u0002\u0002\u1422\u1424\u0003\u0002\u0002\u0002\u1423\u1425\u0007",
    "\u007f\u0002\u0002\u1424\u1423\u0003\u0002\u0002\u0002\u1424\u1425\u0003",
    "\u0002\u0002\u0002\u1425\u1426\u0003\u0002\u0002\u0002\u1426\u1427\u0007",
    "\u0002\u0002\u0003\u1427\u1435\u0003\u0002\u0002\u0002\u1428\u1429\u0007",
    "?\u0002\u0002\u1429\u142a\u0007a\u0002\u0002\u142a\u142b\u0005\u0158",
    "\u00ad\u0002\u142b\u142c\u0007b\u0002\u0002\u142c\u142e\u0007\u0010",
    "\u0002\u0002\u142d\u142f\u0007\u007f\u0002\u0002\u142e\u142d\u0003\u0002",
    "\u0002\u0002\u142e\u142f\u0003\u0002\u0002\u0002\u142f\u1430\u0003\u0002",
    "\u0002\u0002\u1430\u1431\u0007`\u0002\u0002\u1431\u1432\u0005\u0006",
    "\u0004\u0002\u1432\u1433\u0007\u0002\u0002\u0003\u1433\u1435\u0003\u0002",
    "\u0002\u0002\u1434\u13fb\u0003\u0002\u0002\u0002\u1434\u1403\u0003\u0002",
    "\u0002\u0002\u1434\u140b\u0003\u0002\u0002\u0002\u1434\u1413\u0003\u0002",
    "\u0002\u0002\u1434\u141b\u0003\u0002\u0002\u0002\u1434\u1428\u0003\u0002",
    "\u0002\u0002\u1435\u02db\u0003\u0002\u0002\u0002\u1436\u1437\u0005\u0162",
    "\u00b2\u0002\u1437\u1439\u0007a\u0002\u0002\u1438\u143a\u0005\u0164",
    "\u00b3\u0002\u1439\u1438\u0003\u0002\u0002\u0002\u1439\u143a\u0003\u0002",
    "\u0002\u0002\u143a\u143b\u0003\u0002\u0002\u0002\u143b\u143c\u0007b",
    "\u0002\u0002\u143c\u143d\u0007\u0002\u0002\u0003\u143d\u02dd\u0003\u0002",
    "\u0002\u0002\u143e\u143f\u0005\u015e\u00b0\u0002\u143f\u1440\u0007\u0002",
    "\u0002\u0003\u1440\u1452\u0003\u0002\u0002\u0002\u1441\u1442\u0005\u0152",
    "\u00aa\u0002\u1442\u1444\u0007a\u0002\u0002\u1443\u1445\u0005\u0164",
    "\u00b3\u0002\u1444\u1443\u0003\u0002\u0002\u0002\u1444\u1445\u0003\u0002",
    "\u0002\u0002\u1445\u1446\u0003\u0002\u0002\u0002\u1446\u1447\u0007b",
    "\u0002\u0002\u1447\u1448\u0007\u0002\u0002\u0003\u1448\u1452\u0003\u0002",
    "\u0002\u0002\u1449\u144a\u0005\u0154\u00ab\u0002\u144a\u144c\u0007a",
    "\u0002\u0002\u144b\u144d\u0005\u0164\u00b3\u0002\u144c\u144b\u0003\u0002",
    "\u0002\u0002\u144c\u144d\u0003\u0002\u0002\u0002\u144d\u144e\u0003\u0002",
    "\u0002\u0002\u144e\u144f\u0007b\u0002\u0002\u144f\u1450\u0007\u0002",
    "\u0002\u0003\u1450\u1452\u0003\u0002\u0002\u0002\u1451\u143e\u0003\u0002",
    "\u0002\u0002\u1451\u1441\u0003\u0002\u0002\u0002\u1451\u1449\u0003\u0002",
    "\u0002\u0002\u1452\u02df\u0003\u0002\u0002\u0002\u1453\u1454\u0007\u007f",
    "\u0002\u0002\u1454\u1455\u0007\u0002\u0002\u0003\u1455\u02e1\u0003\u0002",
    "\u0002\u0002\u1456\u1458\u0005\u0166\u00b4\u0002\u1457\u1459\u0007~",
    "\u0002\u0002\u1458\u1457\u0003\u0002\u0002\u0002\u1458\u1459\u0003\u0002",
    "\u0002\u0002\u1459\u145a\u0003\u0002\u0002\u0002\u145a\u145b\u0007\u0002",
    "\u0002\u0003\u145b\u1465\u0003\u0002\u0002\u0002\u145c\u145d\u0005\u0164",
    "\u00b3\u0002\u145d\u145e\u0007u\u0002\u0002\u145e\u1460\u0005\u0166",
    "\u00b4\u0002\u145f\u1461\u0007~\u0002\u0002\u1460\u145f\u0003\u0002",
    "\u0002\u0002\u1460\u1461\u0003\u0002\u0002\u0002\u1461\u1462\u0003\u0002",
    "\u0002\u0002\u1462\u1463\u0007\u0002\u0002\u0003\u1463\u1465\u0003\u0002",
    "\u0002\u0002\u1464\u1456\u0003\u0002\u0002\u0002\u1464\u145c\u0003\u0002",
    "\u0002\u0002\u1465\u02e3\u0003\u0002\u0002\u0002\u1466\u1467\u0005\u00fe",
    "\u0080\u0002\u1467\u1468\u0007\u0002\u0002\u0003\u1468\u1470\u0003\u0002",
    "\u0002\u0002\u1469\u146a\u0005Z.\u0002\u146a\u146b\u0007\u0002\u0002",
    "\u0003\u146b\u1470\u0003\u0002\u0002\u0002\u146c\u146d\u0005\u0006\u0004",
    "\u0002\u146d\u146e\u0007\u0002\u0002\u0003\u146e\u1470\u0003\u0002\u0002",
    "\u0002\u146f\u1466\u0003\u0002\u0002\u0002\u146f\u1469\u0003\u0002\u0002",
    "\u0002\u146f\u146c\u0003\u0002\u0002\u0002\u1470\u02e5\u0003\u0002\u0002",
    "\u0002\u1471\u1472\u0007G\u0002\u0002\u1472\u1473\u0005\f\u0007\u0002",
    "\u1473\u1474\u0007\u007f\u0002\u0002\u1474\u1475\u0007\u0002\u0002\u0003",
    "\u1475\u147f\u0003\u0002\u0002\u0002\u1476\u1477\u0007G\u0002\u0002",
    "\u1477\u1479\u0005\f\u0007\u0002\u1478\u147a\u0007?\u0002\u0002\u1479",
    "\u1478\u0003\u0002\u0002\u0002\u1479\u147a\u0003\u0002\u0002\u0002\u147a",
    "\u147b\u0003\u0002\u0002\u0002\u147b\u147c\u0005\u015e\u00b0\u0002\u147c",
    "\u147d\u0007\u0002\u0002\u0003\u147d\u147f\u0003\u0002\u0002\u0002\u147e",
    "\u1471\u0003\u0002\u0002\u0002\u147e\u1476\u0003\u0002\u0002\u0002\u147f",
    "\u02e7\u0003\u0002\u0002\u0002\u1480\u1482\u0007\u001f\u0002\u0002\u1481",
    "\u1480\u0003\u0002\u0002\u0002\u1481\u1482\u0003\u0002\u0002\u0002\u1482",
    "\u1483\u0003\u0002\u0002\u0002\u1483\u1484\u0007?\u0002\u0002\u1484",
    "\u1485\u0005x=\u0002\u1485\u1486\u0007\u0002\u0002\u0003\u1486\u02e9",
    "\u0003\u0002\u0002\u0002\u1487\u1488\u0007?\u0002\u0002\u1488\u1489",
    "\u0007a\u0002\u0002\u1489\u148a\u0007b\u0002\u0002\u148a\u148b\u0005",
    "x=\u0002\u148b\u148c\u0007\u0002\u0002\u0003\u148c\u02eb\u0003\u0002",
    "\u0002\u0002\u148d\u148e\u0007D\u0002\u0002\u148e\u148f\u0005b2\u0002",
    "\u148f\u1490\u0005\u0172\u00ba\u0002\u1490\u1491\u0007\u0002\u0002\u0003",
    "\u1491\u02ed\u0003\u0002\u0002\u0002\u1492\u1494\u0007D\u0002\u0002",
    "\u1493\u1495\u0005\u014a\u00a6\u0002\u1494\u1493\u0003\u0002\u0002\u0002",
    "\u1494\u1495\u0003\u0002\u0002\u0002\u1495\u1496\u0003\u0002\u0002\u0002",
    "\u1496\u1497\u0005b2\u0002\u1497\u1498\u0005\u0172\u00ba\u0002\u1498",
    "\u1499\u0007\u0002\u0002\u0003\u1499\u02ef\u0003\u0002\u0002\u0002\u149a",
    "\u149c\u0005\u0174\u00bb\u0002\u149b\u149d\u0005\u0172\u00ba\u0002\u149c",
    "\u149b\u0003\u0002\u0002\u0002\u149c\u149d\u0003\u0002\u0002\u0002\u149d",
    "\u149e\u0003\u0002\u0002\u0002\u149e\u149f\u0007\u0002\u0002\u0003\u149f",
    "\u02f1\u0003\u0002\u0002\u0002\u14a0\u14a1\u0007\f\u0002\u0002\u14a1",
    "\u14a2\u0007P\u0002\u0002\u14a2\u14a3\u0005\u0176\u00bc\u0002\u14a3",
    "\u14a4\u0007Q\u0002\u0002\u14a4\u14a5\u0005b2\u0002\u14a5\u14a6\u0007",
    "\u0002\u0002\u0003\u14a6\u02f3\u0003\u0002\u0002\u0002\u14a7\u14a9\u0005",
    "\u00d0i\u0002\u14a8\u14a7\u0003\u0002\u0002\u0002\u14a8\u14a9\u0003",
    "\u0002\u0002\u0002\u14a9\u14aa\u0003\u0002\u0002\u0002\u14aa\u14ab\u0005",
    "\u0094K\u0002\u14ab\u14ac\u0005\u00eav\u0002\u14ac\u14ad\u0007\u0002",
    "\u0002\u0003\u14ad\u14ba\u0003\u0002\u0002\u0002\u14ae\u14b0\u0005\u00d0",
    "i\u0002\u14af\u14ae\u0003\u0002\u0002\u0002\u14af\u14b0\u0003\u0002",
    "\u0002\u0002\u14b0\u14b1\u0003\u0002\u0002\u0002\u14b1\u14b3\u0005\u0094",
    "K\u0002\u14b2\u14b4\u0005\u0100\u0081\u0002\u14b3\u14b2\u0003\u0002",
    "\u0002\u0002\u14b3\u14b4\u0003\u0002\u0002\u0002\u14b4\u14b5\u0003\u0002",
    "\u0002\u0002\u14b5\u14b6\u0007\u0002\u0002\u0003\u14b6\u14ba\u0003\u0002",
    "\u0002\u0002\u14b7\u14b8\u0007~\u0002\u0002\u14b8\u14ba\u0007\u0002",
    "\u0002\u0003\u14b9\u14a8\u0003\u0002\u0002\u0002\u14b9\u14af\u0003\u0002",
    "\u0002\u0002\u14b9\u14b7\u0003\u0002\u0002\u0002\u14ba\u02f5\u0003\u0002",
    "\u0002\u0002\u14bb\u14bd\u0007B\u0002\u0002\u14bc\u14be\u0005T+\u0002",
    "\u14bd\u14bc\u0003\u0002\u0002\u0002\u14bd\u14be\u0003\u0002\u0002\u0002",
    "\u14be\u14bf\u0003\u0002\u0002\u0002\u14bf\u14c0\u0007\u0002\u0002\u0003",
    "\u14c0\u02f7\u0003\u0002\u0002\u0002\u14c1\u14c2\u0005\u017c\u00bf\u0002",
    "\u14c2\u14c3\u0007\u0002\u0002\u0003\u14c3\u14c8\u0003\u0002\u0002\u0002",
    "\u14c4\u14c5\u0005\u0180\u00c1\u0002\u14c5\u14c6\u0007\u0002\u0002\u0003",
    "\u14c6\u14c8\u0003\u0002\u0002\u0002\u14c7\u14c1\u0003\u0002\u0002\u0002",
    "\u14c7\u14c4\u0003\u0002\u0002\u0002\u14c8\u02f9\u0003\u0002\u0002\u0002",
    "\u14c9\u14ca\u0007B\u0002\u0002\u14ca\u14cc\u0007P\u0002\u0002\u14cb",
    "\u14cd\u0005\u017e\u00c0\u0002\u14cc\u14cb\u0003\u0002\u0002\u0002\u14cc",
    "\u14cd\u0003\u0002\u0002\u0002\u14cd\u14ce\u0003\u0002\u0002\u0002\u14ce",
    "\u14cf\u0007Q\u0002\u0002\u14cf\u14d0\u0007\u0002\u0002\u0003\u14d0",
    "\u02fb\u0003\u0002\u0002\u0002\u14d1\u14d3\u0005\u00fe\u0080\u0002\u14d2",
    "\u14d4\u0007~\u0002\u0002\u14d3\u14d2\u0003\u0002\u0002\u0002\u14d3",
    "\u14d4\u0003\u0002\u0002\u0002\u14d4\u14d5\u0003\u0002\u0002\u0002\u14d5",
    "\u14d6\u0007\u0002\u0002\u0003\u14d6\u14e0\u0003\u0002\u0002\u0002\u14d7",
    "\u14d8\u0005\u017e\u00c0\u0002\u14d8\u14d9\u0007u\u0002\u0002\u14d9",
    "\u14db\u0005\u00fe\u0080\u0002\u14da\u14dc\u0007~\u0002\u0002\u14db",
    "\u14da\u0003\u0002\u0002\u0002\u14db\u14dc\u0003\u0002\u0002\u0002\u14dc",
    "\u14dd\u0003\u0002\u0002\u0002\u14dd\u14de\u0007\u0002\u0002\u0003\u14de",
    "\u14e0\u0003\u0002\u0002\u0002\u14df\u14d1\u0003\u0002\u0002\u0002\u14df",
    "\u14d7\u0003\u0002\u0002\u0002\u14e0\u02fd\u0003\u0002\u0002\u0002\u14e1",
    "\u14e2\u0007-\u0002\u0002\u14e2\u14e3\u0007P\u0002\u0002\u14e3\u14e4",
    "\u0005Z.\u0002\u14e4\u14e5\u0007Q\u0002\u0002\u14e5\u14e6\u0007\u0002",
    "\u0002\u0003\u14e6\u14ea\u0003\u0002\u0002\u0002\u14e7\u14e8\u0007-",
    "\u0002\u0002\u14e8\u14ea\u0007\u0002\u0002\u0003\u14e9\u14e1\u0003\u0002",
    "\u0002\u0002\u14e9\u14e7\u0003\u0002\u0002\u0002\u14ea\u02ff\u0003\u0002",
    "\u0002\u0002\u14eb\u14ec\u0007b\u0002\u0002\u14ec\u14ed\u0007b\u0002",
    "\u0002\u14ed\u0301\u0003\u0002\u0002\u0002\u14ee\u14ef\u0007b\u0002",
    "\u0002\u14ef\u14f0\u0007b\u0002\u0002\u14f0\u14f1\u0007`\u0002\u0002",
    "\u14f1\u0303\u0003\u0002\u0002\u0002\u14f2\u1523\u0007,\u0002\u0002",
    "\u14f3\u1523\u0007\u0017\u0002\u0002\u14f4\u14f5\u0007,\u0002\u0002",
    "\u14f5\u14f6\u0007R\u0002\u0002\u14f6\u1523\u0007S\u0002\u0002\u14f7",
    "\u14f8\u0007\u0017\u0002\u0002\u14f8\u14f9\u0007R\u0002\u0002\u14f9",
    "\u1523\u0007S\u0002\u0002\u14fa\u1523\u0007V\u0002\u0002\u14fb\u1523",
    "\u0007W\u0002\u0002\u14fc\u1523\u0007X\u0002\u0002\u14fd\u1523\u0007",
    "Y\u0002\u0002\u14fe\u1523\u0007Z\u0002\u0002\u14ff\u1523\u0007[\u0002",
    "\u0002\u1500\u1523\u0007\\\u0002\u0002\u1501\u1523\u0007]\u0002\u0002",
    "\u1502\u1523\u0007^\u0002\u0002\u1503\u1523\u0007_\u0002\u0002\u1504",
    "\u1523\u0007`\u0002\u0002\u1505\u1523\u0007a\u0002\u0002\u1506\u1523",
    "\u0007b\u0002\u0002\u1507\u1523\u0007c\u0002\u0002\u1508\u1523\u0007",
    "d\u0002\u0002\u1509\u1523\u0007e\u0002\u0002\u150a\u1523\u0007f\u0002",
    "\u0002\u150b\u1523\u0007g\u0002\u0002\u150c\u1523\u0007h\u0002\u0002",
    "\u150d\u1523\u0007i\u0002\u0002\u150e\u1523\u0007j\u0002\u0002\u150f",
    "\u1523\u0007k\u0002\u0002\u1510\u1523\u0005\u0300\u0181\u0002\u1511",
    "\u1523\u0005\u0302\u0182\u0002\u1512\u1523\u0007l\u0002\u0002\u1513",
    "\u1523\u0007m\u0002\u0002\u1514\u1523\u0007n\u0002\u0002\u1515\u1523",
    "\u0007o\u0002\u0002\u1516\u1523\u0007p\u0002\u0002\u1517\u1523\u0007",
    "q\u0002\u0002\u1518\u1523\u0007r\u0002\u0002\u1519\u1523\u0007s\u0002",
    "\u0002\u151a\u1523\u0007t\u0002\u0002\u151b\u1523\u0007u\u0002\u0002",
    "\u151c\u1523\u0007v\u0002\u0002\u151d\u1523\u0007w\u0002\u0002\u151e",
    "\u151f\u0007P\u0002\u0002\u151f\u1523\u0007Q\u0002\u0002\u1520\u1521",
    "\u0007R\u0002\u0002\u1521\u1523\u0007S\u0002\u0002\u1522\u14f2\u0003",
    "\u0002\u0002\u0002\u1522\u14f3\u0003\u0002\u0002\u0002\u1522\u14f4\u0003",
    "\u0002\u0002\u0002\u1522\u14f7\u0003\u0002\u0002\u0002\u1522\u14fa\u0003",
    "\u0002\u0002\u0002\u1522\u14fb\u0003\u0002\u0002\u0002\u1522\u14fc\u0003",
    "\u0002\u0002\u0002\u1522\u14fd\u0003\u0002\u0002\u0002\u1522\u14fe\u0003",
    "\u0002\u0002\u0002\u1522\u14ff\u0003\u0002\u0002\u0002\u1522\u1500\u0003",
    "\u0002\u0002\u0002\u1522\u1501\u0003\u0002\u0002\u0002\u1522\u1502\u0003",
    "\u0002\u0002\u0002\u1522\u1503\u0003\u0002\u0002\u0002\u1522\u1504\u0003",
    "\u0002\u0002\u0002\u1522\u1505\u0003\u0002\u0002\u0002\u1522\u1506\u0003",
    "\u0002\u0002\u0002\u1522\u1507\u0003\u0002\u0002\u0002\u1522\u1508\u0003",
    "\u0002\u0002\u0002\u1522\u1509\u0003\u0002\u0002\u0002\u1522\u150a\u0003",
    "\u0002\u0002\u0002\u1522\u150b\u0003\u0002\u0002\u0002\u1522\u150c\u0003",
    "\u0002\u0002\u0002\u1522\u150d\u0003\u0002\u0002\u0002\u1522\u150e\u0003",
    "\u0002\u0002\u0002\u1522\u150f\u0003\u0002\u0002\u0002\u1522\u1510\u0003",
    "\u0002\u0002\u0002\u1522\u1511\u0003\u0002\u0002\u0002\u1522\u1512\u0003",
    "\u0002\u0002\u0002\u1522\u1513\u0003\u0002\u0002\u0002\u1522\u1514\u0003",
    "\u0002\u0002\u0002\u1522\u1515\u0003\u0002\u0002\u0002\u1522\u1516\u0003",
    "\u0002\u0002\u0002\u1522\u1517\u0003\u0002\u0002\u0002\u1522\u1518\u0003",
    "\u0002\u0002\u0002\u1522\u1519\u0003\u0002\u0002\u0002\u1522\u151a\u0003",
    "\u0002\u0002\u0002\u1522\u151b\u0003\u0002\u0002\u0002\u1522\u151c\u0003",
    "\u0002\u0002\u0002\u1522\u151d\u0003\u0002\u0002\u0002\u1522\u151e\u0003",
    "\u0002\u0002\u0002\u1522\u1520\u0003\u0002\u0002\u0002\u1523\u0305\u0003",
    "\u0002\u0002\u0002\u1524\u152c\u0007\u0080\u0002\u0002\u1525\u152c\u0007",
    "\u0086\u0002\u0002\u1526\u152c\u0007\u0087\u0002\u0002\u1527\u152c\u0007",
    "\u0088\u0002\u0002\u1528\u152c\u0005\u0308\u0185\u0002\u1529\u152c\u0005",
    "\u030a\u0186\u0002\u152a\u152c\u0005\u030c\u0187\u0002\u152b\u1524\u0003",
    "\u0002\u0002\u0002\u152b\u1525\u0003\u0002\u0002\u0002\u152b\u1526\u0003",
    "\u0002\u0002\u0002\u152b\u1527\u0003\u0002\u0002\u0002\u152b\u1528\u0003",
    "\u0002\u0002\u0002\u152b\u1529\u0003\u0002\u0002\u0002\u152b\u152a\u0003",
    "\u0002\u0002\u0002\u152c\u0307\u0003\u0002\u0002\u0002\u152d\u152e\t",
    "\u000b\u0002\u0002\u152e\u0309\u0003\u0002\u0002\u0002\u152f\u1530\u0007",
    ".\u0002\u0002\u1530\u030b\u0003\u0002\u0002\u0002\u1531\u1532\t\f\u0002",
    "\u0002\u1532\u030d\u0003\u0002\u0002\u0002\u026d\u030f\u031b\u031f\u032a",
    "\u032e\u033d\u0344\u0349\u034b\u0350\u0356\u0360\u0367\u036d\u0371\u0376",
    "\u037c\u0383\u0389\u038c\u038f\u0392\u0399\u03a0\u03d4\u03e3\u03e9\u03ef",
    "\u03fc\u03fe\u0404\u0413\u0419\u0437\u043c\u0440\u0444\u0447\u044b\u0451",
    "\u0453\u045b\u045f\u0462\u0469\u0470\u0474\u0479\u047d\u0480\u0485\u048b",
    "\u0498\u04a3\u04a5\u04b4\u04b6\u04c2\u04c4\u04d1\u04d3\u04e5\u04e7\u04f3",
    "\u04f5\u0500\u050b\u0516\u0521\u052c\u0536\u053e\u054b\u0555\u055c\u0560",
    "\u0564\u0568\u056c\u0571\u0574\u0577\u057d\u0585\u058a\u058d\u0593\u059e",
    "\u05b5\u05b9\u05c1\u05c7\u05db\u05df\u05ec\u05f0\u05f3\u05fa\u0602\u060c",
    "\u0617\u0623\u062d\u0632\u0639\u063c\u0641\u0646\u065b\u065f\u0664\u066f",
    "\u0675\u0679\u067e\u0682\u0687\u068a\u06a0\u06a6\u06b1\u06b5\u06b8\u06c2",
    "\u06c8\u06cb\u06d2\u06dc\u06e0\u06e3\u06e6\u06ea\u06ef\u06f1\u06f5\u06f9",
    "\u0702\u070f\u0717\u071d\u0723\u0727\u072a\u0733\u073c\u0744\u074f\u0755",
    "\u0760\u0763\u0768\u0777\u077d\u0786\u0790\u0796\u079e\u07a2\u07a6\u07ab",
    "\u07b0\u07b7\u07b9\u07be\u07c2\u07d0\u07d6\u07e5\u07ef\u07f4\u07fb\u0801",
    "\u0806\u080c\u0813\u0817\u0819\u081b\u0822\u0825\u0828\u082b\u0830\u0834",
    "\u0837\u083b\u083f\u0844\u0847\u0849\u084d\u0854\u085a\u085e\u0864\u0869",
    "\u086b\u0871\u0875\u087b\u0882\u0886\u0888\u088a\u0891\u089b\u089f\u08a1",
    "\u08a3\u08a7\u08aa\u08b0\u08ba\u08be\u08c4\u08cc\u08d0\u08d3\u08d7\u08dc",
    "\u08df\u08e2\u08e6\u08eb\u08f5\u08fc\u0901\u0905\u090a\u0910\u0914\u091a",
    "\u0920\u0924\u0929\u092f\u0933\u0936\u093a\u093d\u093f\u0942\u094c\u0951",
    "\u0953\u0956\u0959\u095c\u0965\u096f\u0974\u0977\u097b\u097e\u0981\u0985",
    "\u098e\u099d\u09a3\u09a7\u09ab\u09af\u09b3\u09b7\u09bb\u09bf\u09c2\u09c6",
    "\u09d1\u09d5\u09dc\u09e0\u09e5\u09ea\u09f1\u09f5\u09ff\u0a0f\u0a14\u0a18",
    "\u0a1b\u0a1f\u0a25\u0a28\u0a2c\u0a36\u0a39\u0a41\u0a46\u0a4b\u0a53\u0a5a",
    "\u0a5e\u0a65\u0a6b\u0a6f\u0a75\u0a7e\u0a82\u0a85\u0a95\u0a9c\u0aa5\u0aab",
    "\u0aaf\u0ab2\u0ab6\u0aba\u0abf\u0ac6\u0acc\u0ad0\u0ad9\u0aeb\u0af3\u0b0b",
    "\u0b0f\u0b29\u0b2f\u0b33\u0b3a\u0b4a\u0b50\u0b54\u0b5c\u0b60\u0b68\u0b71",
    "\u0b7c\u0b82\u0b85\u0b89\u0b8c\u0ba2\u0baa\u0bb2\u0bc2\u0bca\u0c11\u0c17",
    "\u0c28\u0c32\u0c62\u0c72\u0c75\u0c79\u0c7d\u0c82\u0c86\u0c8c\u0c90\u0c99",
    "\u0c9f\u0ca6\u0cac\u0cb5\u0cb9\u0cbd\u0cc4\u0cc7\u0cce\u0cd6\u0ce7\u0cf6",
    "\u0d0a\u0d19\u0d28\u0d41\u0d50\u0d5a\u0d64\u0d6e\u0d78\u0d82\u0d8e\u0d9b",
    "\u0db4\u0dbe\u0dc7\u0dcd\u0dd3\u0dd9\u0ddf\u0de8\u0ded\u0df0\u0df8\u0e01",
    "\u0e08\u0e0b\u0e12\u0e1e\u0e37\u0e3d\u0e46\u0e4d\u0e63\u0e67\u0e76\u0e7e",
    "\u0e81\u0e8d\u0e97\u0ea4\u0eb0\u0ecd\u0ee7\u0eec\u0ef4\u0ef7\u0efd\u0f03",
    "\u0f24\u0f28\u0f30\u0f3c\u0f44\u0f52\u0f60\u0f64\u0f6c\u0f70\u0f78\u0f7b",
    "\u0fa4\u0fb2\u0fbf\u0fc3\u0fc6\u0fd2\u0fd9\u0fdd\u0fe5\u0ff1\u0ff5\u0ff8",
    "\u0ffb\u1001\u1006\u100a\u100e\u1012\u101f\u102d\u1037\u1042\u104d\u1055",
    "\u1058\u1062\u106c\u1075\u1084\u108b\u1098\u109b\u10a0\u10b1\u10ba\u10c3",
    "\u10cf\u10d5\u10de\u10e3\u10e6\u10ec\u10fa\u10fe\u1107\u1117\u111e\u112f",
    "\u1139\u113d\u1149\u1152\u1156\u1161\u1165\u116e\u1174\u1177\u117b\u117e",
    "\u1185\u118b\u118e\u1193\u1198\u119e\u11a1\u11a5\u11a9\u11b1\u11b7\u11ba",
    "\u11c1\u11c9\u11d2\u11d9\u11dd\u11e9\u11ed\u11f3\u11f7\u11ff\u1208\u1211",
    "\u1216\u121c\u121f\u1222\u122a\u1234\u1237\u123e\u1247\u124b\u1250\u1254",
    "\u125b\u125e\u1261\u1265\u126c\u127c\u1286\u128f\u1297\u129b\u12a3\u12a7",
    "\u12ac\u12b4\u12bb\u12c0\u12c7\u12cb\u12ce\u12d4\u12d7\u12db\u12de\u12ec",
    "\u12f0\u12f7\u12fb\u12fe\u1301\u1304\u131a\u1324\u1328\u132b\u1331\u1336",
    "\u1339\u133f\u1348\u134e\u135c\u1364\u1368\u136b\u1371\u1375\u137b\u137f",
    "\u1384\u1387\u138f\u139a\u13a2\u13a8\u13b2\u13b8\u13be\u13c3\u13cc\u13d3",
    "\u13e0\u13f1\u13f9\u13fd\u1400\u1405\u140d\u1410\u1415\u1421\u1424\u142e",
    "\u1434\u1439\u1444\u144c\u1451\u1458\u1460\u1464\u146f\u1479\u147e\u1481",
    "\u1494\u149c\u14a8\u14af\u14b3\u14b9\u14bd\u14c7\u14cc\u14d3\u14db\u14df",
    "\u14e9\u1522\u152b"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [ null, null, null, "'alignas'", "'alignof'", "'asm'", 
                     "'auto'", "'bool'", "'break'", "'case'", "'catch'", 
                     "'char'", "'char16_t'", "'char32_t'", "'class'", "'const'", 
                     "'constexpr'", "'const_cast'", "'continue'", "'decltype'", 
                     "'default'", "'delete'", "'do'", "'double'", "'dynamic_cast'", 
                     "'else'", "'enum'", "'explicit'", "'export'", "'extern'", 
                     "'false'", "'final'", "'float'", "'for'", "'friend'", 
                     "'goto'", "'if'", "'inline'", "'int'", "'long'", "'mutable'", 
                     "'namespace'", "'new'", "'noexcept'", "'nullptr'", 
                     "'operator'", "'override'", "'private'", "'protected'", 
                     "'public'", "'register'", "'reinterpret_cast'", "'return'", 
                     "'short'", "'signed'", "'sizeof'", "'static'", "'static_assert'", 
                     "'static_cast'", "'struct'", "'switch'", "'template'", 
                     "'this'", "'thread_local'", "'throw'", "'true'", "'try'", 
                     "'typedef'", "'typeid'", "'typename'", "'union'", "'unsigned'", 
                     "'using'", "'virtual'", "'void'", "'volatile'", "'wchar_t'", 
                     "'while'", "'('", "')'", "'['", "']'", "'{'", "'}'", 
                     "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "'&'", "'|'", 
                     "'~'", "'!'", "'='", "'<'", "'>'", "'+='", "'-='", 
                     "'*='", "'/='", "'%='", "'^='", "'&='", "'|='", "'<<'", 
                     "'<<='", "'=='", "'!='", "'<='", "'>='", "'&&'", "'||'", 
                     "'++'", "'--'", "','", "'->*'", "'->'", "'?'", "':'", 
                     "'::'", "';'", "'.'", "'.*'", "'...'" ];

var symbolicNames = [ null, "MultiLineMacro", "Directive", "Alignas", "Alignof", 
                      "Asm", "Auto", "Bool", "Break", "Case", "Catch", "Char", 
                      "Char16", "Char32", "Class", "Const", "Constexpr", 
                      "Const_cast", "Continue", "Decltype", "Default", "Delete", 
                      "Do", "Double", "Dynamic_cast", "Else", "Enum", "Explicit", 
                      "Export", "Extern", "False", "Final", "Float", "For", 
                      "Friend", "Goto", "If", "Inline", "Int", "Long", "Mutable", 
                      "Namespace", "New", "Noexcept", "Nullptr", "Operator", 
                      "Override", "Private", "Protected", "Public", "Register", 
                      "Reinterpret_cast", "Return", "Short", "Signed", "Sizeof", 
                      "Static", "Static_assert", "Static_cast", "Struct", 
                      "Switch", "Template", "This", "Thread_local", "Throw", 
                      "True", "Try", "Typedef", "Typeid", "Typename", "Union", 
                      "Unsigned", "Using", "Virtual", "Void", "Volatile", 
                      "Wchar", "While", "LeftParen", "RightParen", "LeftBracket", 
                      "RightBracket", "LeftBrace", "RightBrace", "Plus", 
                      "Minus", "Star", "Div", "Mod", "Caret", "And", "Or", 
                      "Tilde", "Not", "Assign", "Less", "Greater", "PlusAssign", 
                      "MinusAssign", "StarAssign", "DivAssign", "ModAssign", 
                      "XorAssign", "AndAssign", "OrAssign", "LeftShift", 
                      "LeftShiftAssign", "Equal", "NotEqual", "LessEqual", 
                      "GreaterEqual", "AndAnd", "OrOr", "PlusPlus", "MinusMinus", 
                      "Comma", "ArrowStar", "Arrow", "Question", "Colon", 
                      "Doublecolon", "Semi", "Dot", "DotStar", "Ellipsis", 
                      "Identifier", "Integerliteral", "Decimalliteral", 
                      "Octalliteral", "Hexadecimalliteral", "Binaryliteral", 
                      "Integersuffix", "Characterliteral", "Floatingliteral", 
                      "Stringliteral", "Userdefinedintegerliteral", "Userdefinedfloatingliteral", 
                      "Userdefinedstringliteral", "Userdefinedcharacterliteral", 
                      "Whitespace", "Newline", "BlockComment", "LineComment" ];

var ruleNames =  [ "translationunit", "primaryexpression", "idexpression", 
                   "unqualifiedid", "qualifiedid", "nestednamespecifier", 
                   "lambdaexpression", "lambdaintroducer", "lambdacapture", 
                   "capturedefault", "capturelist", "capture", "simplecapture", 
                   "initcapture", "lambdadeclarator", "postfixexpression", 
                   "expressionlist", "pseudodestructorname", "unaryexpression", 
                   "unaryoperator", "newexpression", "newplacement", "newtypeid", 
                   "newdeclarator", "noptrnewdeclarator", "newinitializer", 
                   "deleteexpression", "noexceptexpression", "castexpression", 
                   "pmexpression", "multiplicativeexpression", "additiveexpression", 
                   "shiftexpression", "relationalexpression", "equalityexpression", 
                   "andexpression", "exclusiveorexpression", "inclusiveorexpression", 
                   "logicalandexpression", "logicalorexpression", "conditionalexpression", 
                   "assignmentexpression", "assignmentoperator", "expression", 
                   "constantexpression", "statement", "labeledstatement", 
                   "expressionstatement", "compoundstatement", "statementseq", 
                   "selectionstatement", "condition", "iterationstatement", 
                   "forinitstatement", "forrangedeclaration", "forrangeinitializer", 
                   "jumpstatement", "declarationstatement", "declarationseq", 
                   "declaration", "blockdeclaration", "aliasdeclaration", 
                   "simpledeclaration", "static_assertdeclaration", "emptydeclaration", 
                   "attributedeclaration", "declspecifier", "declspecifierseq", 
                   "storageclassspecifier", "functionspecifier", "typedefname", 
                   "typespecifier", "trailingtypespecifier", "typespecifierseq", 
                   "trailingtypespecifierseq", "simpletypespecifier", "typename", 
                   "decltypespecifier", "elaboratedtypespecifier", "enumname", 
                   "enumspecifier", "enumhead", "opaqueenumdeclaration", 
                   "enumkey", "enumbase", "enumeratorlist", "enumeratordefinition", 
                   "enumerator", "namespacename", "originalnamespacename", 
                   "namespacedefinition", "namednamespacedefinition", "originalnamespacedefinition", 
                   "extensionnamespacedefinition", "unnamednamespacedefinition", 
                   "namespacebody", "namespacealias", "namespacealiasdefinition", 
                   "qualifiednamespacespecifier", "usingdeclaration", "usingdirective", 
                   "asmdefinition", "linkagespecification", "attributespecifierseq", 
                   "attributespecifier", "alignmentspecifier", "attributelist", 
                   "attribute", "attributetoken", "attributescopedtoken", 
                   "attributenamespace", "attributeargumentclause", "balancedtokenseq", 
                   "balancedtoken", "initdeclaratorlist", "initdeclarator", 
                   "declarator", "ptrdeclarator", "noptrdeclarator", "parametersandqualifiers", 
                   "trailingreturntype", "ptroperator", "cvqualifierseq", 
                   "cvqualifier", "refqualifier", "declaratorid", "typeid", 
                   "abstractdeclarator", "ptrabstractdeclarator", "noptrabstractdeclarator", 
                   "abstractpackdeclarator", "noptrabstractpackdeclarator", 
                   "parameterdeclarationclause", "parameterdeclarationlist", 
                   "parameterdeclaration", "functiondefinition", "functionbody", 
                   "initializer", "braceorequalinitializer", "initializerclause", 
                   "initializerlist", "bracedinitlist", "classname", "classspecifier", 
                   "classhead", "classheadname", "classvirtspecifier", "classkey", 
                   "memberspecification", "memberdeclaration", "memberdeclaratorlist", 
                   "memberdeclarator", "virtspecifierseq", "virtspecifier", 
                   "purespecifier", "baseclause", "basespecifierlist", "basespecifier", 
                   "classordecltype", "basetypespecifier", "accessspecifier", 
                   "conversionfunctionid", "conversiontypeid", "conversiondeclarator", 
                   "ctorinitializer", "meminitializerlist", "meminitializer", 
                   "meminitializerid", "operatorfunctionid", "literaloperatorid", 
                   "templatedeclaration", "templateparameterlist", "templateparameter", 
                   "typeparameter", "simpletemplateid", "templateid", "templatename", 
                   "templateargumentlist", "templateargument", "typenamespecifier", 
                   "explicitinstantiation", "explicitspecialization", "tryblock", 
                   "functiontryblock", "handlerseq", "handler", "exceptiondeclaration", 
                   "throwexpression", "exceptionspecification", "dynamicexceptionspecification", 
                   "typeidlist", "noexceptspecification", "primaryexpression_DropletFile", 
                   "idexpression_DropletFile", "unqualifiedid_DropletFile", 
                   "qualifiedid_DropletFile", "nestednamespecifier_DropletFile", 
                   "lambdaexpression_DropletFile", "lambdaintroducer_DropletFile", 
                   "lambdacapture_DropletFile", "capturedefault_DropletFile", 
                   "capturelist_DropletFile", "capture_DropletFile", "simplecapture_DropletFile", 
                   "initcapture_DropletFile", "lambdadeclarator_DropletFile", 
                   "postfixexpression_DropletFile", "expressionlist_DropletFile", 
                   "pseudodestructorname_DropletFile", "unaryexpression_DropletFile", 
                   "unaryoperator_DropletFile", "newexpression_DropletFile", 
                   "newplacement_DropletFile", "newtypeid_DropletFile", 
                   "newdeclarator_DropletFile", "noptrnewdeclarator_DropletFile", 
                   "newinitializer_DropletFile", "deleteexpression_DropletFile", 
                   "noexceptexpression_DropletFile", "castexpression_DropletFile", 
                   "pmexpression_DropletFile", "multiplicativeexpression_DropletFile", 
                   "additiveexpression_DropletFile", "shiftexpression_DropletFile", 
                   "relationalexpression_DropletFile", "equalityexpression_DropletFile", 
                   "andexpression_DropletFile", "exclusiveorexpression_DropletFile", 
                   "inclusiveorexpression_DropletFile", "logicalandexpression_DropletFile", 
                   "logicalorexpression_DropletFile", "conditionalexpression_DropletFile", 
                   "assignmentexpression_DropletFile", "assignmentoperator_DropletFile", 
                   "expression_DropletFile", "constantexpression_DropletFile", 
                   "statement_DropletFile", "labeledstatement_DropletFile", 
                   "expressionstatement_DropletFile", "compoundstatement_DropletFile", 
                   "statementseq_DropletFile", "selectionstatement_DropletFile", 
                   "condition_DropletFile", "iterationstatement_DropletFile", 
                   "forinitstatement_DropletFile", "forrangedeclaration_DropletFile", 
                   "forrangeinitializer_DropletFile", "jumpstatement_DropletFile", 
                   "declarationstatement_DropletFile", "declarationseq_DropletFile", 
                   "declaration_DropletFile", "blockdeclaration_DropletFile", 
                   "aliasdeclaration_DropletFile", "simpledeclaration_DropletFile", 
                   "static_assertdeclaration_DropletFile", "emptydeclaration_DropletFile", 
                   "attributedeclaration_DropletFile", "declspecifier_DropletFile", 
                   "declspecifierseq_DropletFile", "storageclassspecifier_DropletFile", 
                   "functionspecifier_DropletFile", "typedefname_DropletFile", 
                   "typespecifier_DropletFile", "trailingtypespecifier_DropletFile", 
                   "typespecifierseq_DropletFile", "trailingtypespecifierseq_DropletFile", 
                   "simpletypespecifier_DropletFile", "typename_DropletFile", 
                   "decltypespecifier_DropletFile", "elaboratedtypespecifier_DropletFile", 
                   "enumname_DropletFile", "enumspecifier_DropletFile", 
                   "enumhead_DropletFile", "opaqueenumdeclaration_DropletFile", 
                   "enumkey_DropletFile", "enumbase_DropletFile", "enumeratorlist_DropletFile", 
                   "enumeratordefinition_DropletFile", "enumerator_DropletFile", 
                   "namespacename_DropletFile", "originalnamespacename_DropletFile", 
                   "namespacedefinition_DropletFile", "namednamespacedefinition_DropletFile", 
                   "originalnamespacedefinition_DropletFile", "extensionnamespacedefinition_DropletFile", 
                   "unnamednamespacedefinition_DropletFile", "namespacebody_DropletFile", 
                   "namespacealias_DropletFile", "namespacealiasdefinition_DropletFile", 
                   "qualifiednamespacespecifier_DropletFile", "usingdeclaration_DropletFile", 
                   "usingdirective_DropletFile", "asmdefinition_DropletFile", 
                   "linkagespecification_DropletFile", "attributespecifierseq_DropletFile", 
                   "attributespecifier_DropletFile", "alignmentspecifier_DropletFile", 
                   "attributelist_DropletFile", "attribute_DropletFile", 
                   "attributetoken_DropletFile", "attributescopedtoken_DropletFile", 
                   "attributenamespace_DropletFile", "attributeargumentclause_DropletFile", 
                   "balancedtokenseq_DropletFile", "balancedtoken_DropletFile", 
                   "initdeclaratorlist_DropletFile", "initdeclarator_DropletFile", 
                   "declarator_DropletFile", "ptrdeclarator_DropletFile", 
                   "noptrdeclarator_DropletFile", "parametersandqualifiers_DropletFile", 
                   "trailingreturntype_DropletFile", "ptroperator_DropletFile", 
                   "cvqualifierseq_DropletFile", "cvqualifier_DropletFile", 
                   "refqualifier_DropletFile", "declaratorid_DropletFile", 
                   "typeid_DropletFile", "abstractdeclarator_DropletFile", 
                   "ptrabstractdeclarator_DropletFile", "noptrabstractdeclarator_DropletFile", 
                   "abstractpackdeclarator_DropletFile", "noptrabstractpackdeclarator_DropletFile", 
                   "parameterdeclarationclause_DropletFile", "parameterdeclarationlist_DropletFile", 
                   "parameterdeclaration_DropletFile", "functiondefinition_DropletFile", 
                   "functionbody_DropletFile", "initializer_DropletFile", 
                   "braceorequalinitializer_DropletFile", "initializerclause_DropletFile", 
                   "initializerlist_DropletFile", "bracedinitlist_DropletFile", 
                   "classname_DropletFile", "classspecifier_DropletFile", 
                   "classhead_DropletFile", "classheadname_DropletFile", 
                   "classvirtspecifier_DropletFile", "classkey_DropletFile", 
                   "memberspecification_DropletFile", "memberdeclaration_DropletFile", 
                   "memberdeclaratorlist_DropletFile", "memberdeclarator_DropletFile", 
                   "virtspecifierseq_DropletFile", "virtspecifier_DropletFile", 
                   "purespecifier_DropletFile", "baseclause_DropletFile", 
                   "basespecifierlist_DropletFile", "basespecifier_DropletFile", 
                   "classordecltype_DropletFile", "basetypespecifier_DropletFile", 
                   "accessspecifier_DropletFile", "conversionfunctionid_DropletFile", 
                   "conversiontypeid_DropletFile", "conversiondeclarator_DropletFile", 
                   "ctorinitializer_DropletFile", "meminitializerlist_DropletFile", 
                   "meminitializer_DropletFile", "meminitializerid_DropletFile", 
                   "operatorfunctionid_DropletFile", "literaloperatorid_DropletFile", 
                   "templatedeclaration_DropletFile", "templateparameterlist_DropletFile", 
                   "templateparameter_DropletFile", "typeparameter_DropletFile", 
                   "simpletemplateid_DropletFile", "templateid_DropletFile", 
                   "templatename_DropletFile", "templateargumentlist_DropletFile", 
                   "templateargument_DropletFile", "typenamespecifier_DropletFile", 
                   "explicitinstantiation_DropletFile", "explicitspecialization_DropletFile", 
                   "tryblock_DropletFile", "functiontryblock_DropletFile", 
                   "handlerseq_DropletFile", "handler_DropletFile", "exceptiondeclaration_DropletFile", 
                   "throwexpression_DropletFile", "exceptionspecification_DropletFile", 
                   "dynamicexceptionspecification_DropletFile", "typeidlist_DropletFile", 
                   "noexceptspecification_DropletFile", "rightShift", "rightShiftAssign", 
                   "operator", "literal", "booleanliteral", "pointerliteral", 
                   "userdefinedliteral" ];

function CPP14Parser (input) {
	antlr4.Parser.call(this, input);
    this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
    this.ruleNames = ruleNames;
    this.literalNames = literalNames;
    this.symbolicNames = symbolicNames;
    return this;
}

CPP14Parser.prototype = Object.create(antlr4.Parser.prototype);
CPP14Parser.prototype.constructor = CPP14Parser;

Object.defineProperty(CPP14Parser.prototype, "atn", {
	get : function() {
		return atn;
	}
});

CPP14Parser.EOF = antlr4.Token.EOF;
CPP14Parser.MultiLineMacro = 1;
CPP14Parser.Directive = 2;
CPP14Parser.Alignas = 3;
CPP14Parser.Alignof = 4;
CPP14Parser.Asm = 5;
CPP14Parser.Auto = 6;
CPP14Parser.Bool = 7;
CPP14Parser.Break = 8;
CPP14Parser.Case = 9;
CPP14Parser.Catch = 10;
CPP14Parser.Char = 11;
CPP14Parser.Char16 = 12;
CPP14Parser.Char32 = 13;
CPP14Parser.Class = 14;
CPP14Parser.Const = 15;
CPP14Parser.Constexpr = 16;
CPP14Parser.Const_cast = 17;
CPP14Parser.Continue = 18;
CPP14Parser.Decltype = 19;
CPP14Parser.Default = 20;
CPP14Parser.Delete = 21;
CPP14Parser.Do = 22;
CPP14Parser.Double = 23;
CPP14Parser.Dynamic_cast = 24;
CPP14Parser.Else = 25;
CPP14Parser.Enum = 26;
CPP14Parser.Explicit = 27;
CPP14Parser.Export = 28;
CPP14Parser.Extern = 29;
CPP14Parser.False = 30;
CPP14Parser.Final = 31;
CPP14Parser.Float = 32;
CPP14Parser.For = 33;
CPP14Parser.Friend = 34;
CPP14Parser.Goto = 35;
CPP14Parser.If = 36;
CPP14Parser.Inline = 37;
CPP14Parser.Int = 38;
CPP14Parser.Long = 39;
CPP14Parser.Mutable = 40;
CPP14Parser.Namespace = 41;
CPP14Parser.New = 42;
CPP14Parser.Noexcept = 43;
CPP14Parser.Nullptr = 44;
CPP14Parser.Operator = 45;
CPP14Parser.Override = 46;
CPP14Parser.Private = 47;
CPP14Parser.Protected = 48;
CPP14Parser.Public = 49;
CPP14Parser.Register = 50;
CPP14Parser.Reinterpret_cast = 51;
CPP14Parser.Return = 52;
CPP14Parser.Short = 53;
CPP14Parser.Signed = 54;
CPP14Parser.Sizeof = 55;
CPP14Parser.Static = 56;
CPP14Parser.Static_assert = 57;
CPP14Parser.Static_cast = 58;
CPP14Parser.Struct = 59;
CPP14Parser.Switch = 60;
CPP14Parser.Template = 61;
CPP14Parser.This = 62;
CPP14Parser.Thread_local = 63;
CPP14Parser.Throw = 64;
CPP14Parser.True = 65;
CPP14Parser.Try = 66;
CPP14Parser.Typedef = 67;
CPP14Parser.Typeid = 68;
CPP14Parser.Typename = 69;
CPP14Parser.Union = 70;
CPP14Parser.Unsigned = 71;
CPP14Parser.Using = 72;
CPP14Parser.Virtual = 73;
CPP14Parser.Void = 74;
CPP14Parser.Volatile = 75;
CPP14Parser.Wchar = 76;
CPP14Parser.While = 77;
CPP14Parser.LeftParen = 78;
CPP14Parser.RightParen = 79;
CPP14Parser.LeftBracket = 80;
CPP14Parser.RightBracket = 81;
CPP14Parser.LeftBrace = 82;
CPP14Parser.RightBrace = 83;
CPP14Parser.Plus = 84;
CPP14Parser.Minus = 85;
CPP14Parser.Star = 86;
CPP14Parser.Div = 87;
CPP14Parser.Mod = 88;
CPP14Parser.Caret = 89;
CPP14Parser.And = 90;
CPP14Parser.Or = 91;
CPP14Parser.Tilde = 92;
CPP14Parser.Not = 93;
CPP14Parser.Assign = 94;
CPP14Parser.Less = 95;
CPP14Parser.Greater = 96;
CPP14Parser.PlusAssign = 97;
CPP14Parser.MinusAssign = 98;
CPP14Parser.StarAssign = 99;
CPP14Parser.DivAssign = 100;
CPP14Parser.ModAssign = 101;
CPP14Parser.XorAssign = 102;
CPP14Parser.AndAssign = 103;
CPP14Parser.OrAssign = 104;
CPP14Parser.LeftShift = 105;
CPP14Parser.LeftShiftAssign = 106;
CPP14Parser.Equal = 107;
CPP14Parser.NotEqual = 108;
CPP14Parser.LessEqual = 109;
CPP14Parser.GreaterEqual = 110;
CPP14Parser.AndAnd = 111;
CPP14Parser.OrOr = 112;
CPP14Parser.PlusPlus = 113;
CPP14Parser.MinusMinus = 114;
CPP14Parser.Comma = 115;
CPP14Parser.ArrowStar = 116;
CPP14Parser.Arrow = 117;
CPP14Parser.Question = 118;
CPP14Parser.Colon = 119;
CPP14Parser.Doublecolon = 120;
CPP14Parser.Semi = 121;
CPP14Parser.Dot = 122;
CPP14Parser.DotStar = 123;
CPP14Parser.Ellipsis = 124;
CPP14Parser.Identifier = 125;
CPP14Parser.Integerliteral = 126;
CPP14Parser.Decimalliteral = 127;
CPP14Parser.Octalliteral = 128;
CPP14Parser.Hexadecimalliteral = 129;
CPP14Parser.Binaryliteral = 130;
CPP14Parser.Integersuffix = 131;
CPP14Parser.Characterliteral = 132;
CPP14Parser.Floatingliteral = 133;
CPP14Parser.Stringliteral = 134;
CPP14Parser.Userdefinedintegerliteral = 135;
CPP14Parser.Userdefinedfloatingliteral = 136;
CPP14Parser.Userdefinedstringliteral = 137;
CPP14Parser.Userdefinedcharacterliteral = 138;
CPP14Parser.Whitespace = 139;
CPP14Parser.Newline = 140;
CPP14Parser.BlockComment = 141;
CPP14Parser.LineComment = 142;

CPP14Parser.RULE_translationunit = 0;
CPP14Parser.RULE_primaryexpression = 1;
CPP14Parser.RULE_idexpression = 2;
CPP14Parser.RULE_unqualifiedid = 3;
CPP14Parser.RULE_qualifiedid = 4;
CPP14Parser.RULE_nestednamespecifier = 5;
CPP14Parser.RULE_lambdaexpression = 6;
CPP14Parser.RULE_lambdaintroducer = 7;
CPP14Parser.RULE_lambdacapture = 8;
CPP14Parser.RULE_capturedefault = 9;
CPP14Parser.RULE_capturelist = 10;
CPP14Parser.RULE_capture = 11;
CPP14Parser.RULE_simplecapture = 12;
CPP14Parser.RULE_initcapture = 13;
CPP14Parser.RULE_lambdadeclarator = 14;
CPP14Parser.RULE_postfixexpression = 15;
CPP14Parser.RULE_expressionlist = 16;
CPP14Parser.RULE_pseudodestructorname = 17;
CPP14Parser.RULE_unaryexpression = 18;
CPP14Parser.RULE_unaryoperator = 19;
CPP14Parser.RULE_newexpression = 20;
CPP14Parser.RULE_newplacement = 21;
CPP14Parser.RULE_newtypeid = 22;
CPP14Parser.RULE_newdeclarator = 23;
CPP14Parser.RULE_noptrnewdeclarator = 24;
CPP14Parser.RULE_newinitializer = 25;
CPP14Parser.RULE_deleteexpression = 26;
CPP14Parser.RULE_noexceptexpression = 27;
CPP14Parser.RULE_castexpression = 28;
CPP14Parser.RULE_pmexpression = 29;
CPP14Parser.RULE_multiplicativeexpression = 30;
CPP14Parser.RULE_additiveexpression = 31;
CPP14Parser.RULE_shiftexpression = 32;
CPP14Parser.RULE_relationalexpression = 33;
CPP14Parser.RULE_equalityexpression = 34;
CPP14Parser.RULE_andexpression = 35;
CPP14Parser.RULE_exclusiveorexpression = 36;
CPP14Parser.RULE_inclusiveorexpression = 37;
CPP14Parser.RULE_logicalandexpression = 38;
CPP14Parser.RULE_logicalorexpression = 39;
CPP14Parser.RULE_conditionalexpression = 40;
CPP14Parser.RULE_assignmentexpression = 41;
CPP14Parser.RULE_assignmentoperator = 42;
CPP14Parser.RULE_expression = 43;
CPP14Parser.RULE_constantexpression = 44;
CPP14Parser.RULE_statement = 45;
CPP14Parser.RULE_labeledstatement = 46;
CPP14Parser.RULE_expressionstatement = 47;
CPP14Parser.RULE_compoundstatement = 48;
CPP14Parser.RULE_statementseq = 49;
CPP14Parser.RULE_selectionstatement = 50;
CPP14Parser.RULE_condition = 51;
CPP14Parser.RULE_iterationstatement = 52;
CPP14Parser.RULE_forinitstatement = 53;
CPP14Parser.RULE_forrangedeclaration = 54;
CPP14Parser.RULE_forrangeinitializer = 55;
CPP14Parser.RULE_jumpstatement = 56;
CPP14Parser.RULE_declarationstatement = 57;
CPP14Parser.RULE_declarationseq = 58;
CPP14Parser.RULE_declaration = 59;
CPP14Parser.RULE_blockdeclaration = 60;
CPP14Parser.RULE_aliasdeclaration = 61;
CPP14Parser.RULE_simpledeclaration = 62;
CPP14Parser.RULE_static_assertdeclaration = 63;
CPP14Parser.RULE_emptydeclaration = 64;
CPP14Parser.RULE_attributedeclaration = 65;
CPP14Parser.RULE_declspecifier = 66;
CPP14Parser.RULE_declspecifierseq = 67;
CPP14Parser.RULE_storageclassspecifier = 68;
CPP14Parser.RULE_functionspecifier = 69;
CPP14Parser.RULE_typedefname = 70;
CPP14Parser.RULE_typespecifier = 71;
CPP14Parser.RULE_trailingtypespecifier = 72;
CPP14Parser.RULE_typespecifierseq = 73;
CPP14Parser.RULE_trailingtypespecifierseq = 74;
CPP14Parser.RULE_simpletypespecifier = 75;
CPP14Parser.RULE_typename = 76;
CPP14Parser.RULE_decltypespecifier = 77;
CPP14Parser.RULE_elaboratedtypespecifier = 78;
CPP14Parser.RULE_enumname = 79;
CPP14Parser.RULE_enumspecifier = 80;
CPP14Parser.RULE_enumhead = 81;
CPP14Parser.RULE_opaqueenumdeclaration = 82;
CPP14Parser.RULE_enumkey = 83;
CPP14Parser.RULE_enumbase = 84;
CPP14Parser.RULE_enumeratorlist = 85;
CPP14Parser.RULE_enumeratordefinition = 86;
CPP14Parser.RULE_enumerator = 87;
CPP14Parser.RULE_namespacename = 88;
CPP14Parser.RULE_originalnamespacename = 89;
CPP14Parser.RULE_namespacedefinition = 90;
CPP14Parser.RULE_namednamespacedefinition = 91;
CPP14Parser.RULE_originalnamespacedefinition = 92;
CPP14Parser.RULE_extensionnamespacedefinition = 93;
CPP14Parser.RULE_unnamednamespacedefinition = 94;
CPP14Parser.RULE_namespacebody = 95;
CPP14Parser.RULE_namespacealias = 96;
CPP14Parser.RULE_namespacealiasdefinition = 97;
CPP14Parser.RULE_qualifiednamespacespecifier = 98;
CPP14Parser.RULE_usingdeclaration = 99;
CPP14Parser.RULE_usingdirective = 100;
CPP14Parser.RULE_asmdefinition = 101;
CPP14Parser.RULE_linkagespecification = 102;
CPP14Parser.RULE_attributespecifierseq = 103;
CPP14Parser.RULE_attributespecifier = 104;
CPP14Parser.RULE_alignmentspecifier = 105;
CPP14Parser.RULE_attributelist = 106;
CPP14Parser.RULE_attribute = 107;
CPP14Parser.RULE_attributetoken = 108;
CPP14Parser.RULE_attributescopedtoken = 109;
CPP14Parser.RULE_attributenamespace = 110;
CPP14Parser.RULE_attributeargumentclause = 111;
CPP14Parser.RULE_balancedtokenseq = 112;
CPP14Parser.RULE_balancedtoken = 113;
CPP14Parser.RULE_initdeclaratorlist = 114;
CPP14Parser.RULE_initdeclarator = 115;
CPP14Parser.RULE_declarator = 116;
CPP14Parser.RULE_ptrdeclarator = 117;
CPP14Parser.RULE_noptrdeclarator = 118;
CPP14Parser.RULE_parametersandqualifiers = 119;
CPP14Parser.RULE_trailingreturntype = 120;
CPP14Parser.RULE_ptroperator = 121;
CPP14Parser.RULE_cvqualifierseq = 122;
CPP14Parser.RULE_cvqualifier = 123;
CPP14Parser.RULE_refqualifier = 124;
CPP14Parser.RULE_declaratorid = 125;
CPP14Parser.RULE_typeid = 126;
CPP14Parser.RULE_abstractdeclarator = 127;
CPP14Parser.RULE_ptrabstractdeclarator = 128;
CPP14Parser.RULE_noptrabstractdeclarator = 129;
CPP14Parser.RULE_abstractpackdeclarator = 130;
CPP14Parser.RULE_noptrabstractpackdeclarator = 131;
CPP14Parser.RULE_parameterdeclarationclause = 132;
CPP14Parser.RULE_parameterdeclarationlist = 133;
CPP14Parser.RULE_parameterdeclaration = 134;
CPP14Parser.RULE_functiondefinition = 135;
CPP14Parser.RULE_functionbody = 136;
CPP14Parser.RULE_initializer = 137;
CPP14Parser.RULE_braceorequalinitializer = 138;
CPP14Parser.RULE_initializerclause = 139;
CPP14Parser.RULE_initializerlist = 140;
CPP14Parser.RULE_bracedinitlist = 141;
CPP14Parser.RULE_classname = 142;
CPP14Parser.RULE_classspecifier = 143;
CPP14Parser.RULE_classhead = 144;
CPP14Parser.RULE_classheadname = 145;
CPP14Parser.RULE_classvirtspecifier = 146;
CPP14Parser.RULE_classkey = 147;
CPP14Parser.RULE_memberspecification = 148;
CPP14Parser.RULE_memberdeclaration = 149;
CPP14Parser.RULE_memberdeclaratorlist = 150;
CPP14Parser.RULE_memberdeclarator = 151;
CPP14Parser.RULE_virtspecifierseq = 152;
CPP14Parser.RULE_virtspecifier = 153;
CPP14Parser.RULE_purespecifier = 154;
CPP14Parser.RULE_baseclause = 155;
CPP14Parser.RULE_basespecifierlist = 156;
CPP14Parser.RULE_basespecifier = 157;
CPP14Parser.RULE_classordecltype = 158;
CPP14Parser.RULE_basetypespecifier = 159;
CPP14Parser.RULE_accessspecifier = 160;
CPP14Parser.RULE_conversionfunctionid = 161;
CPP14Parser.RULE_conversiontypeid = 162;
CPP14Parser.RULE_conversiondeclarator = 163;
CPP14Parser.RULE_ctorinitializer = 164;
CPP14Parser.RULE_meminitializerlist = 165;
CPP14Parser.RULE_meminitializer = 166;
CPP14Parser.RULE_meminitializerid = 167;
CPP14Parser.RULE_operatorfunctionid = 168;
CPP14Parser.RULE_literaloperatorid = 169;
CPP14Parser.RULE_templatedeclaration = 170;
CPP14Parser.RULE_templateparameterlist = 171;
CPP14Parser.RULE_templateparameter = 172;
CPP14Parser.RULE_typeparameter = 173;
CPP14Parser.RULE_simpletemplateid = 174;
CPP14Parser.RULE_templateid = 175;
CPP14Parser.RULE_templatename = 176;
CPP14Parser.RULE_templateargumentlist = 177;
CPP14Parser.RULE_templateargument = 178;
CPP14Parser.RULE_typenamespecifier = 179;
CPP14Parser.RULE_explicitinstantiation = 180;
CPP14Parser.RULE_explicitspecialization = 181;
CPP14Parser.RULE_tryblock = 182;
CPP14Parser.RULE_functiontryblock = 183;
CPP14Parser.RULE_handlerseq = 184;
CPP14Parser.RULE_handler = 185;
CPP14Parser.RULE_exceptiondeclaration = 186;
CPP14Parser.RULE_throwexpression = 187;
CPP14Parser.RULE_exceptionspecification = 188;
CPP14Parser.RULE_dynamicexceptionspecification = 189;
CPP14Parser.RULE_typeidlist = 190;
CPP14Parser.RULE_noexceptspecification = 191;
CPP14Parser.RULE_primaryexpression_DropletFile = 192;
CPP14Parser.RULE_idexpression_DropletFile = 193;
CPP14Parser.RULE_unqualifiedid_DropletFile = 194;
CPP14Parser.RULE_qualifiedid_DropletFile = 195;
CPP14Parser.RULE_nestednamespecifier_DropletFile = 196;
CPP14Parser.RULE_lambdaexpression_DropletFile = 197;
CPP14Parser.RULE_lambdaintroducer_DropletFile = 198;
CPP14Parser.RULE_lambdacapture_DropletFile = 199;
CPP14Parser.RULE_capturedefault_DropletFile = 200;
CPP14Parser.RULE_capturelist_DropletFile = 201;
CPP14Parser.RULE_capture_DropletFile = 202;
CPP14Parser.RULE_simplecapture_DropletFile = 203;
CPP14Parser.RULE_initcapture_DropletFile = 204;
CPP14Parser.RULE_lambdadeclarator_DropletFile = 205;
CPP14Parser.RULE_postfixexpression_DropletFile = 206;
CPP14Parser.RULE_expressionlist_DropletFile = 207;
CPP14Parser.RULE_pseudodestructorname_DropletFile = 208;
CPP14Parser.RULE_unaryexpression_DropletFile = 209;
CPP14Parser.RULE_unaryoperator_DropletFile = 210;
CPP14Parser.RULE_newexpression_DropletFile = 211;
CPP14Parser.RULE_newplacement_DropletFile = 212;
CPP14Parser.RULE_newtypeid_DropletFile = 213;
CPP14Parser.RULE_newdeclarator_DropletFile = 214;
CPP14Parser.RULE_noptrnewdeclarator_DropletFile = 215;
CPP14Parser.RULE_newinitializer_DropletFile = 216;
CPP14Parser.RULE_deleteexpression_DropletFile = 217;
CPP14Parser.RULE_noexceptexpression_DropletFile = 218;
CPP14Parser.RULE_castexpression_DropletFile = 219;
CPP14Parser.RULE_pmexpression_DropletFile = 220;
CPP14Parser.RULE_multiplicativeexpression_DropletFile = 221;
CPP14Parser.RULE_additiveexpression_DropletFile = 222;
CPP14Parser.RULE_shiftexpression_DropletFile = 223;
CPP14Parser.RULE_relationalexpression_DropletFile = 224;
CPP14Parser.RULE_equalityexpression_DropletFile = 225;
CPP14Parser.RULE_andexpression_DropletFile = 226;
CPP14Parser.RULE_exclusiveorexpression_DropletFile = 227;
CPP14Parser.RULE_inclusiveorexpression_DropletFile = 228;
CPP14Parser.RULE_logicalandexpression_DropletFile = 229;
CPP14Parser.RULE_logicalorexpression_DropletFile = 230;
CPP14Parser.RULE_conditionalexpression_DropletFile = 231;
CPP14Parser.RULE_assignmentexpression_DropletFile = 232;
CPP14Parser.RULE_assignmentoperator_DropletFile = 233;
CPP14Parser.RULE_expression_DropletFile = 234;
CPP14Parser.RULE_constantexpression_DropletFile = 235;
CPP14Parser.RULE_statement_DropletFile = 236;
CPP14Parser.RULE_labeledstatement_DropletFile = 237;
CPP14Parser.RULE_expressionstatement_DropletFile = 238;
CPP14Parser.RULE_compoundstatement_DropletFile = 239;
CPP14Parser.RULE_statementseq_DropletFile = 240;
CPP14Parser.RULE_selectionstatement_DropletFile = 241;
CPP14Parser.RULE_condition_DropletFile = 242;
CPP14Parser.RULE_iterationstatement_DropletFile = 243;
CPP14Parser.RULE_forinitstatement_DropletFile = 244;
CPP14Parser.RULE_forrangedeclaration_DropletFile = 245;
CPP14Parser.RULE_forrangeinitializer_DropletFile = 246;
CPP14Parser.RULE_jumpstatement_DropletFile = 247;
CPP14Parser.RULE_declarationstatement_DropletFile = 248;
CPP14Parser.RULE_declarationseq_DropletFile = 249;
CPP14Parser.RULE_declaration_DropletFile = 250;
CPP14Parser.RULE_blockdeclaration_DropletFile = 251;
CPP14Parser.RULE_aliasdeclaration_DropletFile = 252;
CPP14Parser.RULE_simpledeclaration_DropletFile = 253;
CPP14Parser.RULE_static_assertdeclaration_DropletFile = 254;
CPP14Parser.RULE_emptydeclaration_DropletFile = 255;
CPP14Parser.RULE_attributedeclaration_DropletFile = 256;
CPP14Parser.RULE_declspecifier_DropletFile = 257;
CPP14Parser.RULE_declspecifierseq_DropletFile = 258;
CPP14Parser.RULE_storageclassspecifier_DropletFile = 259;
CPP14Parser.RULE_functionspecifier_DropletFile = 260;
CPP14Parser.RULE_typedefname_DropletFile = 261;
CPP14Parser.RULE_typespecifier_DropletFile = 262;
CPP14Parser.RULE_trailingtypespecifier_DropletFile = 263;
CPP14Parser.RULE_typespecifierseq_DropletFile = 264;
CPP14Parser.RULE_trailingtypespecifierseq_DropletFile = 265;
CPP14Parser.RULE_simpletypespecifier_DropletFile = 266;
CPP14Parser.RULE_typename_DropletFile = 267;
CPP14Parser.RULE_decltypespecifier_DropletFile = 268;
CPP14Parser.RULE_elaboratedtypespecifier_DropletFile = 269;
CPP14Parser.RULE_enumname_DropletFile = 270;
CPP14Parser.RULE_enumspecifier_DropletFile = 271;
CPP14Parser.RULE_enumhead_DropletFile = 272;
CPP14Parser.RULE_opaqueenumdeclaration_DropletFile = 273;
CPP14Parser.RULE_enumkey_DropletFile = 274;
CPP14Parser.RULE_enumbase_DropletFile = 275;
CPP14Parser.RULE_enumeratorlist_DropletFile = 276;
CPP14Parser.RULE_enumeratordefinition_DropletFile = 277;
CPP14Parser.RULE_enumerator_DropletFile = 278;
CPP14Parser.RULE_namespacename_DropletFile = 279;
CPP14Parser.RULE_originalnamespacename_DropletFile = 280;
CPP14Parser.RULE_namespacedefinition_DropletFile = 281;
CPP14Parser.RULE_namednamespacedefinition_DropletFile = 282;
CPP14Parser.RULE_originalnamespacedefinition_DropletFile = 283;
CPP14Parser.RULE_extensionnamespacedefinition_DropletFile = 284;
CPP14Parser.RULE_unnamednamespacedefinition_DropletFile = 285;
CPP14Parser.RULE_namespacebody_DropletFile = 286;
CPP14Parser.RULE_namespacealias_DropletFile = 287;
CPP14Parser.RULE_namespacealiasdefinition_DropletFile = 288;
CPP14Parser.RULE_qualifiednamespacespecifier_DropletFile = 289;
CPP14Parser.RULE_usingdeclaration_DropletFile = 290;
CPP14Parser.RULE_usingdirective_DropletFile = 291;
CPP14Parser.RULE_asmdefinition_DropletFile = 292;
CPP14Parser.RULE_linkagespecification_DropletFile = 293;
CPP14Parser.RULE_attributespecifierseq_DropletFile = 294;
CPP14Parser.RULE_attributespecifier_DropletFile = 295;
CPP14Parser.RULE_alignmentspecifier_DropletFile = 296;
CPP14Parser.RULE_attributelist_DropletFile = 297;
CPP14Parser.RULE_attribute_DropletFile = 298;
CPP14Parser.RULE_attributetoken_DropletFile = 299;
CPP14Parser.RULE_attributescopedtoken_DropletFile = 300;
CPP14Parser.RULE_attributenamespace_DropletFile = 301;
CPP14Parser.RULE_attributeargumentclause_DropletFile = 302;
CPP14Parser.RULE_balancedtokenseq_DropletFile = 303;
CPP14Parser.RULE_balancedtoken_DropletFile = 304;
CPP14Parser.RULE_initdeclaratorlist_DropletFile = 305;
CPP14Parser.RULE_initdeclarator_DropletFile = 306;
CPP14Parser.RULE_declarator_DropletFile = 307;
CPP14Parser.RULE_ptrdeclarator_DropletFile = 308;
CPP14Parser.RULE_noptrdeclarator_DropletFile = 309;
CPP14Parser.RULE_parametersandqualifiers_DropletFile = 310;
CPP14Parser.RULE_trailingreturntype_DropletFile = 311;
CPP14Parser.RULE_ptroperator_DropletFile = 312;
CPP14Parser.RULE_cvqualifierseq_DropletFile = 313;
CPP14Parser.RULE_cvqualifier_DropletFile = 314;
CPP14Parser.RULE_refqualifier_DropletFile = 315;
CPP14Parser.RULE_declaratorid_DropletFile = 316;
CPP14Parser.RULE_typeid_DropletFile = 317;
CPP14Parser.RULE_abstractdeclarator_DropletFile = 318;
CPP14Parser.RULE_ptrabstractdeclarator_DropletFile = 319;
CPP14Parser.RULE_noptrabstractdeclarator_DropletFile = 320;
CPP14Parser.RULE_abstractpackdeclarator_DropletFile = 321;
CPP14Parser.RULE_noptrabstractpackdeclarator_DropletFile = 322;
CPP14Parser.RULE_parameterdeclarationclause_DropletFile = 323;
CPP14Parser.RULE_parameterdeclarationlist_DropletFile = 324;
CPP14Parser.RULE_parameterdeclaration_DropletFile = 325;
CPP14Parser.RULE_functiondefinition_DropletFile = 326;
CPP14Parser.RULE_functionbody_DropletFile = 327;
CPP14Parser.RULE_initializer_DropletFile = 328;
CPP14Parser.RULE_braceorequalinitializer_DropletFile = 329;
CPP14Parser.RULE_initializerclause_DropletFile = 330;
CPP14Parser.RULE_initializerlist_DropletFile = 331;
CPP14Parser.RULE_bracedinitlist_DropletFile = 332;
CPP14Parser.RULE_classname_DropletFile = 333;
CPP14Parser.RULE_classspecifier_DropletFile = 334;
CPP14Parser.RULE_classhead_DropletFile = 335;
CPP14Parser.RULE_classheadname_DropletFile = 336;
CPP14Parser.RULE_classvirtspecifier_DropletFile = 337;
CPP14Parser.RULE_classkey_DropletFile = 338;
CPP14Parser.RULE_memberspecification_DropletFile = 339;
CPP14Parser.RULE_memberdeclaration_DropletFile = 340;
CPP14Parser.RULE_memberdeclaratorlist_DropletFile = 341;
CPP14Parser.RULE_memberdeclarator_DropletFile = 342;
CPP14Parser.RULE_virtspecifierseq_DropletFile = 343;
CPP14Parser.RULE_virtspecifier_DropletFile = 344;
CPP14Parser.RULE_purespecifier_DropletFile = 345;
CPP14Parser.RULE_baseclause_DropletFile = 346;
CPP14Parser.RULE_basespecifierlist_DropletFile = 347;
CPP14Parser.RULE_basespecifier_DropletFile = 348;
CPP14Parser.RULE_classordecltype_DropletFile = 349;
CPP14Parser.RULE_basetypespecifier_DropletFile = 350;
CPP14Parser.RULE_accessspecifier_DropletFile = 351;
CPP14Parser.RULE_conversionfunctionid_DropletFile = 352;
CPP14Parser.RULE_conversiontypeid_DropletFile = 353;
CPP14Parser.RULE_conversiondeclarator_DropletFile = 354;
CPP14Parser.RULE_ctorinitializer_DropletFile = 355;
CPP14Parser.RULE_meminitializerlist_DropletFile = 356;
CPP14Parser.RULE_meminitializer_DropletFile = 357;
CPP14Parser.RULE_meminitializerid_DropletFile = 358;
CPP14Parser.RULE_operatorfunctionid_DropletFile = 359;
CPP14Parser.RULE_literaloperatorid_DropletFile = 360;
CPP14Parser.RULE_templatedeclaration_DropletFile = 361;
CPP14Parser.RULE_templateparameterlist_DropletFile = 362;
CPP14Parser.RULE_templateparameter_DropletFile = 363;
CPP14Parser.RULE_typeparameter_DropletFile = 364;
CPP14Parser.RULE_simpletemplateid_DropletFile = 365;
CPP14Parser.RULE_templateid_DropletFile = 366;
CPP14Parser.RULE_templatename_DropletFile = 367;
CPP14Parser.RULE_templateargumentlist_DropletFile = 368;
CPP14Parser.RULE_templateargument_DropletFile = 369;
CPP14Parser.RULE_typenamespecifier_DropletFile = 370;
CPP14Parser.RULE_explicitinstantiation_DropletFile = 371;
CPP14Parser.RULE_explicitspecialization_DropletFile = 372;
CPP14Parser.RULE_tryblock_DropletFile = 373;
CPP14Parser.RULE_functiontryblock_DropletFile = 374;
CPP14Parser.RULE_handlerseq_DropletFile = 375;
CPP14Parser.RULE_handler_DropletFile = 376;
CPP14Parser.RULE_exceptiondeclaration_DropletFile = 377;
CPP14Parser.RULE_throwexpression_DropletFile = 378;
CPP14Parser.RULE_exceptionspecification_DropletFile = 379;
CPP14Parser.RULE_dynamicexceptionspecification_DropletFile = 380;
CPP14Parser.RULE_typeidlist_DropletFile = 381;
CPP14Parser.RULE_noexceptspecification_DropletFile = 382;
CPP14Parser.RULE_rightShift = 383;
CPP14Parser.RULE_rightShiftAssign = 384;
CPP14Parser.RULE_operator = 385;
CPP14Parser.RULE_literal = 386;
CPP14Parser.RULE_booleanliteral = 387;
CPP14Parser.RULE_pointerliteral = 388;
CPP14Parser.RULE_userdefinedliteral = 389;

function TranslationunitContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_translationunit;
    return this;
}

TranslationunitContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TranslationunitContext.prototype.constructor = TranslationunitContext;

TranslationunitContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

TranslationunitContext.prototype.declarationseq = function() {
    return this.getTypedRuleContext(DeclarationseqContext,0);
};

TranslationunitContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTranslationunit(this);
	}
};

TranslationunitContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTranslationunit(this);
	}
};




CPP14Parser.TranslationunitContext = TranslationunitContext;

CPP14Parser.prototype.translationunit = function() {

    var localctx = new TranslationunitContext(this, this._ctx, this.state);
    this.enterRule(localctx, 0, CPP14Parser.RULE_translationunit);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 781;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Asm) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Namespace - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
            this.state = 780;
            this.declarationseq(0);
        }

        this.state = 783;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PrimaryexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_primaryexpression;
    return this;
}

PrimaryexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PrimaryexpressionContext.prototype.constructor = PrimaryexpressionContext;

PrimaryexpressionContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

PrimaryexpressionContext.prototype.This = function() {
    return this.getToken(CPP14Parser.This, 0);
};

PrimaryexpressionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

PrimaryexpressionContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

PrimaryexpressionContext.prototype.lambdaexpression = function() {
    return this.getTypedRuleContext(LambdaexpressionContext,0);
};

PrimaryexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPrimaryexpression(this);
	}
};

PrimaryexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPrimaryexpression(this);
	}
};




CPP14Parser.PrimaryexpressionContext = PrimaryexpressionContext;

CPP14Parser.prototype.primaryexpression = function() {

    var localctx = new PrimaryexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 2, CPP14Parser.RULE_primaryexpression);
    try {
        this.state = 793;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.False:
        case CPP14Parser.Nullptr:
        case CPP14Parser.True:
        case CPP14Parser.Integerliteral:
        case CPP14Parser.Characterliteral:
        case CPP14Parser.Floatingliteral:
        case CPP14Parser.Stringliteral:
        case CPP14Parser.Userdefinedintegerliteral:
        case CPP14Parser.Userdefinedfloatingliteral:
        case CPP14Parser.Userdefinedstringliteral:
        case CPP14Parser.Userdefinedcharacterliteral:
            this.enterOuterAlt(localctx, 1);
            this.state = 785;
            this.literal();
            break;
        case CPP14Parser.This:
            this.enterOuterAlt(localctx, 2);
            this.state = 786;
            this.match(CPP14Parser.This);
            break;
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 3);
            this.state = 787;
            this.match(CPP14Parser.LeftParen);
            this.state = 788;
            this.expression(0);
            this.state = 789;
            this.match(CPP14Parser.RightParen);
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Operator:
        case CPP14Parser.Tilde:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 4);
            this.state = 791;
            this.idexpression();
            break;
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 5);
            this.state = 792;
            this.lambdaexpression();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IdexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_idexpression;
    return this;
}

IdexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IdexpressionContext.prototype.constructor = IdexpressionContext;

IdexpressionContext.prototype.unqualifiedid = function() {
    return this.getTypedRuleContext(UnqualifiedidContext,0);
};

IdexpressionContext.prototype.qualifiedid = function() {
    return this.getTypedRuleContext(QualifiedidContext,0);
};

IdexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterIdexpression(this);
	}
};

IdexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitIdexpression(this);
	}
};




CPP14Parser.IdexpressionContext = IdexpressionContext;

CPP14Parser.prototype.idexpression = function() {

    var localctx = new IdexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 4, CPP14Parser.RULE_idexpression);
    try {
        this.state = 797;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,2,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 795;
            this.unqualifiedid();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 796;
            this.qualifiedid();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UnqualifiedidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unqualifiedid;
    return this;
}

UnqualifiedidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnqualifiedidContext.prototype.constructor = UnqualifiedidContext;

UnqualifiedidContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

UnqualifiedidContext.prototype.operatorfunctionid = function() {
    return this.getTypedRuleContext(OperatorfunctionidContext,0);
};

UnqualifiedidContext.prototype.conversionfunctionid = function() {
    return this.getTypedRuleContext(ConversionfunctionidContext,0);
};

UnqualifiedidContext.prototype.literaloperatorid = function() {
    return this.getTypedRuleContext(LiteraloperatoridContext,0);
};

UnqualifiedidContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

UnqualifiedidContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

UnqualifiedidContext.prototype.templateid = function() {
    return this.getTypedRuleContext(TemplateidContext,0);
};

UnqualifiedidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnqualifiedid(this);
	}
};

UnqualifiedidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnqualifiedid(this);
	}
};




CPP14Parser.UnqualifiedidContext = UnqualifiedidContext;

CPP14Parser.prototype.unqualifiedid = function() {

    var localctx = new UnqualifiedidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 6, CPP14Parser.RULE_unqualifiedid);
    try {
        this.state = 808;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,3,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 799;
            this.match(CPP14Parser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 800;
            this.operatorfunctionid();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 801;
            this.conversionfunctionid();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 802;
            this.literaloperatorid();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 803;
            this.match(CPP14Parser.Tilde);
            this.state = 804;
            this.classname();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 805;
            this.match(CPP14Parser.Tilde);
            this.state = 806;
            this.decltypespecifier();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 807;
            this.templateid();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QualifiedidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_qualifiedid;
    return this;
}

QualifiedidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QualifiedidContext.prototype.constructor = QualifiedidContext;

QualifiedidContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

QualifiedidContext.prototype.unqualifiedid = function() {
    return this.getTypedRuleContext(UnqualifiedidContext,0);
};

QualifiedidContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

QualifiedidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterQualifiedid(this);
	}
};

QualifiedidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitQualifiedid(this);
	}
};




CPP14Parser.QualifiedidContext = QualifiedidContext;

CPP14Parser.prototype.qualifiedid = function() {

    var localctx = new QualifiedidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 8, CPP14Parser.RULE_qualifiedid);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 810;
        this.nestednamespecifier(0);
        this.state = 812;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Template) {
            this.state = 811;
            this.match(CPP14Parser.Template);
        }

        this.state = 814;
        this.unqualifiedid();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NestednamespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_nestednamespecifier;
    return this;
}

NestednamespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NestednamespecifierContext.prototype.constructor = NestednamespecifierContext;

NestednamespecifierContext.prototype.typename = function() {
    return this.getTypedRuleContext(TypenameContext,0);
};

NestednamespecifierContext.prototype.namespacename = function() {
    return this.getTypedRuleContext(NamespacenameContext,0);
};

NestednamespecifierContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

NestednamespecifierContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

NestednamespecifierContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

NestednamespecifierContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

NestednamespecifierContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

NestednamespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNestednamespecifier(this);
	}
};

NestednamespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNestednamespecifier(this);
	}
};



CPP14Parser.prototype.nestednamespecifier = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new NestednamespecifierContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 10;
    this.enterRecursionRule(localctx, 10, CPP14Parser.RULE_nestednamespecifier, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 827;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,5,this._ctx);
        switch(la_) {
        case 1:
            this.state = 817;
            this.match(CPP14Parser.Doublecolon);
            break;

        case 2:
            this.state = 818;
            this.typename();
            this.state = 819;
            this.match(CPP14Parser.Doublecolon);
            break;

        case 3:
            this.state = 821;
            this.namespacename();
            this.state = 822;
            this.match(CPP14Parser.Doublecolon);
            break;

        case 4:
            this.state = 824;
            this.decltypespecifier();
            this.state = 825;
            this.match(CPP14Parser.Doublecolon);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 841;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,8,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 839;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,7,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new NestednamespecifierContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_nestednamespecifier);
                    this.state = 829;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 830;
                    this.match(CPP14Parser.Identifier);
                    this.state = 831;
                    this.match(CPP14Parser.Doublecolon);
                    break;

                case 2:
                    localctx = new NestednamespecifierContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_nestednamespecifier);
                    this.state = 832;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 834;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===CPP14Parser.Template) {
                        this.state = 833;
                        this.match(CPP14Parser.Template);
                    }

                    this.state = 836;
                    this.simpletemplateid();
                    this.state = 837;
                    this.match(CPP14Parser.Doublecolon);
                    break;

                } 
            }
            this.state = 843;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,8,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function LambdaexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdaexpression;
    return this;
}

LambdaexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LambdaexpressionContext.prototype.constructor = LambdaexpressionContext;

LambdaexpressionContext.prototype.lambdaintroducer = function() {
    return this.getTypedRuleContext(LambdaintroducerContext,0);
};

LambdaexpressionContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

LambdaexpressionContext.prototype.lambdadeclarator = function() {
    return this.getTypedRuleContext(LambdadeclaratorContext,0);
};

LambdaexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdaexpression(this);
	}
};

LambdaexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdaexpression(this);
	}
};




CPP14Parser.LambdaexpressionContext = LambdaexpressionContext;

CPP14Parser.prototype.lambdaexpression = function() {

    var localctx = new LambdaexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 12, CPP14Parser.RULE_lambdaexpression);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 844;
        this.lambdaintroducer();
        this.state = 846;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.LeftParen) {
            this.state = 845;
            this.lambdadeclarator();
        }

        this.state = 848;
        this.compoundstatement();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LambdaintroducerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdaintroducer;
    return this;
}

LambdaintroducerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LambdaintroducerContext.prototype.constructor = LambdaintroducerContext;

LambdaintroducerContext.prototype.lambdacapture = function() {
    return this.getTypedRuleContext(LambdacaptureContext,0);
};

LambdaintroducerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdaintroducer(this);
	}
};

LambdaintroducerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdaintroducer(this);
	}
};




CPP14Parser.LambdaintroducerContext = LambdaintroducerContext;

CPP14Parser.prototype.lambdaintroducer = function() {

    var localctx = new LambdaintroducerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 14, CPP14Parser.RULE_lambdaintroducer);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 850;
        this.match(CPP14Parser.LeftBracket);
        this.state = 852;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.This || _la===CPP14Parser.And || _la===CPP14Parser.Assign || _la===CPP14Parser.Identifier) {
            this.state = 851;
            this.lambdacapture();
        }

        this.state = 854;
        this.match(CPP14Parser.RightBracket);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LambdacaptureContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdacapture;
    return this;
}

LambdacaptureContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LambdacaptureContext.prototype.constructor = LambdacaptureContext;

LambdacaptureContext.prototype.capturedefault = function() {
    return this.getTypedRuleContext(CapturedefaultContext,0);
};

LambdacaptureContext.prototype.capturelist = function() {
    return this.getTypedRuleContext(CapturelistContext,0);
};

LambdacaptureContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdacapture(this);
	}
};

LambdacaptureContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdacapture(this);
	}
};




CPP14Parser.LambdacaptureContext = LambdacaptureContext;

CPP14Parser.prototype.lambdacapture = function() {

    var localctx = new LambdacaptureContext(this, this._ctx, this.state);
    this.enterRule(localctx, 16, CPP14Parser.RULE_lambdacapture);
    try {
        this.state = 862;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,11,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 856;
            this.capturedefault();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 857;
            this.capturelist(0);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 858;
            this.capturedefault();
            this.state = 859;
            this.match(CPP14Parser.Comma);
            this.state = 860;
            this.capturelist(0);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CapturedefaultContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_capturedefault;
    return this;
}

CapturedefaultContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CapturedefaultContext.prototype.constructor = CapturedefaultContext;


CapturedefaultContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCapturedefault(this);
	}
};

CapturedefaultContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCapturedefault(this);
	}
};




CPP14Parser.CapturedefaultContext = CapturedefaultContext;

CPP14Parser.prototype.capturedefault = function() {

    var localctx = new CapturedefaultContext(this, this._ctx, this.state);
    this.enterRule(localctx, 18, CPP14Parser.RULE_capturedefault);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 864;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.And || _la===CPP14Parser.Assign)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CapturelistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_capturelist;
    return this;
}

CapturelistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CapturelistContext.prototype.constructor = CapturelistContext;

CapturelistContext.prototype.capture = function() {
    return this.getTypedRuleContext(CaptureContext,0);
};

CapturelistContext.prototype.capturelist = function() {
    return this.getTypedRuleContext(CapturelistContext,0);
};

CapturelistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCapturelist(this);
	}
};

CapturelistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCapturelist(this);
	}
};



CPP14Parser.prototype.capturelist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new CapturelistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 20;
    this.enterRecursionRule(localctx, 20, CPP14Parser.RULE_capturelist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 867;
        this.capture();
        this.state = 869;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,12,this._ctx);
        if(la_===1) {
            this.state = 868;
            this.match(CPP14Parser.Ellipsis);

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 879;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,14,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new CapturelistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_capturelist);
                this.state = 871;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 872;
                this.match(CPP14Parser.Comma);
                this.state = 873;
                this.capture();
                this.state = 875;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,13,this._ctx);
                if(la_===1) {
                    this.state = 874;
                    this.match(CPP14Parser.Ellipsis);

                } 
            }
            this.state = 881;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,14,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function CaptureContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_capture;
    return this;
}

CaptureContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CaptureContext.prototype.constructor = CaptureContext;

CaptureContext.prototype.simplecapture = function() {
    return this.getTypedRuleContext(SimplecaptureContext,0);
};

CaptureContext.prototype.initcapture = function() {
    return this.getTypedRuleContext(InitcaptureContext,0);
};

CaptureContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCapture(this);
	}
};

CaptureContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCapture(this);
	}
};




CPP14Parser.CaptureContext = CaptureContext;

CPP14Parser.prototype.capture = function() {

    var localctx = new CaptureContext(this, this._ctx, this.state);
    this.enterRule(localctx, 22, CPP14Parser.RULE_capture);
    try {
        this.state = 884;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,15,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 882;
            this.simplecapture();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 883;
            this.initcapture();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SimplecaptureContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simplecapture;
    return this;
}

SimplecaptureContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SimplecaptureContext.prototype.constructor = SimplecaptureContext;

SimplecaptureContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

SimplecaptureContext.prototype.This = function() {
    return this.getToken(CPP14Parser.This, 0);
};

SimplecaptureContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimplecapture(this);
	}
};

SimplecaptureContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimplecapture(this);
	}
};




CPP14Parser.SimplecaptureContext = SimplecaptureContext;

CPP14Parser.prototype.simplecapture = function() {

    var localctx = new SimplecaptureContext(this, this._ctx, this.state);
    this.enterRule(localctx, 24, CPP14Parser.RULE_simplecapture);
    try {
        this.state = 890;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 886;
            this.match(CPP14Parser.Identifier);
            break;
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 2);
            this.state = 887;
            this.match(CPP14Parser.And);
            this.state = 888;
            this.match(CPP14Parser.Identifier);
            break;
        case CPP14Parser.This:
            this.enterOuterAlt(localctx, 3);
            this.state = 889;
            this.match(CPP14Parser.This);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InitcaptureContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initcapture;
    return this;
}

InitcaptureContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InitcaptureContext.prototype.constructor = InitcaptureContext;

InitcaptureContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

InitcaptureContext.prototype.initializer = function() {
    return this.getTypedRuleContext(InitializerContext,0);
};

InitcaptureContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitcapture(this);
	}
};

InitcaptureContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitcapture(this);
	}
};




CPP14Parser.InitcaptureContext = InitcaptureContext;

CPP14Parser.prototype.initcapture = function() {

    var localctx = new InitcaptureContext(this, this._ctx, this.state);
    this.enterRule(localctx, 26, CPP14Parser.RULE_initcapture);
    try {
        this.state = 897;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 892;
            this.match(CPP14Parser.Identifier);
            this.state = 893;
            this.initializer();
            break;
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 2);
            this.state = 894;
            this.match(CPP14Parser.And);
            this.state = 895;
            this.match(CPP14Parser.Identifier);
            this.state = 896;
            this.initializer();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LambdadeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdadeclarator;
    return this;
}

LambdadeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LambdadeclaratorContext.prototype.constructor = LambdadeclaratorContext;

LambdadeclaratorContext.prototype.parameterdeclarationclause = function() {
    return this.getTypedRuleContext(ParameterdeclarationclauseContext,0);
};

LambdadeclaratorContext.prototype.Mutable = function() {
    return this.getToken(CPP14Parser.Mutable, 0);
};

LambdadeclaratorContext.prototype.exceptionspecification = function() {
    return this.getTypedRuleContext(ExceptionspecificationContext,0);
};

LambdadeclaratorContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

LambdadeclaratorContext.prototype.trailingreturntype = function() {
    return this.getTypedRuleContext(TrailingreturntypeContext,0);
};

LambdadeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdadeclarator(this);
	}
};

LambdadeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdadeclarator(this);
	}
};




CPP14Parser.LambdadeclaratorContext = LambdadeclaratorContext;

CPP14Parser.prototype.lambdadeclarator = function() {

    var localctx = new LambdadeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 28, CPP14Parser.RULE_lambdadeclarator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 899;
        this.match(CPP14Parser.LeftParen);
        this.state = 900;
        this.parameterdeclarationclause();
        this.state = 901;
        this.match(CPP14Parser.RightParen);
        this.state = 903;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Mutable) {
            this.state = 902;
            this.match(CPP14Parser.Mutable);
        }

        this.state = 906;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Noexcept || _la===CPP14Parser.Throw) {
            this.state = 905;
            this.exceptionspecification();
        }

        this.state = 909;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 908;
            this.attributespecifierseq(0);
        }

        this.state = 912;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Arrow) {
            this.state = 911;
            this.trailingreturntype();
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PostfixexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_postfixexpression;
    return this;
}

PostfixexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PostfixexpressionContext.prototype.constructor = PostfixexpressionContext;

PostfixexpressionContext.prototype.primaryexpression = function() {
    return this.getTypedRuleContext(PrimaryexpressionContext,0);
};

PostfixexpressionContext.prototype.simpletypespecifier = function() {
    return this.getTypedRuleContext(SimpletypespecifierContext,0);
};

PostfixexpressionContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

PostfixexpressionContext.prototype.typenamespecifier = function() {
    return this.getTypedRuleContext(TypenamespecifierContext,0);
};

PostfixexpressionContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

PostfixexpressionContext.prototype.Dynamic_cast = function() {
    return this.getToken(CPP14Parser.Dynamic_cast, 0);
};

PostfixexpressionContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

PostfixexpressionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

PostfixexpressionContext.prototype.Static_cast = function() {
    return this.getToken(CPP14Parser.Static_cast, 0);
};

PostfixexpressionContext.prototype.Reinterpret_cast = function() {
    return this.getToken(CPP14Parser.Reinterpret_cast, 0);
};

PostfixexpressionContext.prototype.Const_cast = function() {
    return this.getToken(CPP14Parser.Const_cast, 0);
};

PostfixexpressionContext.prototype.Typeid = function() {
    return this.getToken(CPP14Parser.Typeid, 0);
};

PostfixexpressionContext.prototype.postfixexpression = function() {
    return this.getTypedRuleContext(PostfixexpressionContext,0);
};

PostfixexpressionContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

PostfixexpressionContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

PostfixexpressionContext.prototype.pseudodestructorname = function() {
    return this.getTypedRuleContext(PseudodestructornameContext,0);
};

PostfixexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPostfixexpression(this);
	}
};

PostfixexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPostfixexpression(this);
	}
};



CPP14Parser.prototype.postfixexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new PostfixexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 30;
    this.enterRecursionRule(localctx, 30, CPP14Parser.RULE_postfixexpression, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 978;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,24,this._ctx);
        switch(la_) {
        case 1:
            this.state = 915;
            this.primaryexpression();
            break;

        case 2:
            this.state = 916;
            this.simpletypespecifier();
            this.state = 917;
            this.match(CPP14Parser.LeftParen);
            this.state = 919;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 918;
                this.expressionlist();
            }

            this.state = 921;
            this.match(CPP14Parser.RightParen);
            break;

        case 3:
            this.state = 923;
            this.typenamespecifier();
            this.state = 924;
            this.match(CPP14Parser.LeftParen);
            this.state = 926;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 925;
                this.expressionlist();
            }

            this.state = 928;
            this.match(CPP14Parser.RightParen);
            break;

        case 4:
            this.state = 930;
            this.simpletypespecifier();
            this.state = 931;
            this.bracedinitlist();
            break;

        case 5:
            this.state = 933;
            this.typenamespecifier();
            this.state = 934;
            this.bracedinitlist();
            break;

        case 6:
            this.state = 936;
            this.match(CPP14Parser.Dynamic_cast);
            this.state = 937;
            this.match(CPP14Parser.Less);
            this.state = 938;
            this.typeid();
            this.state = 939;
            this.match(CPP14Parser.Greater);
            this.state = 940;
            this.match(CPP14Parser.LeftParen);
            this.state = 941;
            this.expression(0);
            this.state = 942;
            this.match(CPP14Parser.RightParen);
            break;

        case 7:
            this.state = 944;
            this.match(CPP14Parser.Static_cast);
            this.state = 945;
            this.match(CPP14Parser.Less);
            this.state = 946;
            this.typeid();
            this.state = 947;
            this.match(CPP14Parser.Greater);
            this.state = 948;
            this.match(CPP14Parser.LeftParen);
            this.state = 949;
            this.expression(0);
            this.state = 950;
            this.match(CPP14Parser.RightParen);
            break;

        case 8:
            this.state = 952;
            this.match(CPP14Parser.Reinterpret_cast);
            this.state = 953;
            this.match(CPP14Parser.Less);
            this.state = 954;
            this.typeid();
            this.state = 955;
            this.match(CPP14Parser.Greater);
            this.state = 956;
            this.match(CPP14Parser.LeftParen);
            this.state = 957;
            this.expression(0);
            this.state = 958;
            this.match(CPP14Parser.RightParen);
            break;

        case 9:
            this.state = 960;
            this.match(CPP14Parser.Const_cast);
            this.state = 961;
            this.match(CPP14Parser.Less);
            this.state = 962;
            this.typeid();
            this.state = 963;
            this.match(CPP14Parser.Greater);
            this.state = 964;
            this.match(CPP14Parser.LeftParen);
            this.state = 965;
            this.expression(0);
            this.state = 966;
            this.match(CPP14Parser.RightParen);
            break;

        case 10:
            this.state = 968;
            this.match(CPP14Parser.Typeid);
            this.state = 969;
            this.match(CPP14Parser.LeftParen);
            this.state = 970;
            this.expression(0);
            this.state = 971;
            this.match(CPP14Parser.RightParen);
            break;

        case 11:
            this.state = 973;
            this.match(CPP14Parser.Typeid);
            this.state = 974;
            this.match(CPP14Parser.LeftParen);
            this.state = 975;
            this.typeid();
            this.state = 976;
            this.match(CPP14Parser.RightParen);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1020;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,29,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1018;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,28,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 980;
                    if (!( this.precpred(this._ctx, 19))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 19)");
                    }
                    this.state = 981;
                    this.match(CPP14Parser.LeftBracket);
                    this.state = 982;
                    this.expression(0);
                    this.state = 983;
                    this.match(CPP14Parser.RightBracket);
                    break;

                case 2:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 985;
                    if (!( this.precpred(this._ctx, 18))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 18)");
                    }
                    this.state = 986;
                    this.match(CPP14Parser.LeftBracket);
                    this.state = 987;
                    this.bracedinitlist();
                    this.state = 988;
                    this.match(CPP14Parser.RightBracket);
                    break;

                case 3:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 990;
                    if (!( this.precpred(this._ctx, 17))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 17)");
                    }
                    this.state = 991;
                    this.match(CPP14Parser.LeftParen);
                    this.state = 993;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                        this.state = 992;
                        this.expressionlist();
                    }

                    this.state = 995;
                    this.match(CPP14Parser.RightParen);
                    break;

                case 4:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 996;
                    if (!( this.precpred(this._ctx, 12))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 12)");
                    }
                    this.state = 997;
                    this.match(CPP14Parser.Dot);
                    this.state = 999;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===CPP14Parser.Template) {
                        this.state = 998;
                        this.match(CPP14Parser.Template);
                    }

                    this.state = 1001;
                    this.idexpression();
                    break;

                case 5:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 1002;
                    if (!( this.precpred(this._ctx, 11))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 11)");
                    }
                    this.state = 1003;
                    this.match(CPP14Parser.Arrow);
                    this.state = 1005;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if(_la===CPP14Parser.Template) {
                        this.state = 1004;
                        this.match(CPP14Parser.Template);
                    }

                    this.state = 1007;
                    this.idexpression();
                    break;

                case 6:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 1008;
                    if (!( this.precpred(this._ctx, 10))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 10)");
                    }
                    this.state = 1009;
                    this.match(CPP14Parser.Dot);
                    this.state = 1010;
                    this.pseudodestructorname();
                    break;

                case 7:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 1011;
                    if (!( this.precpred(this._ctx, 9))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 9)");
                    }
                    this.state = 1012;
                    this.match(CPP14Parser.Arrow);
                    this.state = 1013;
                    this.pseudodestructorname();
                    break;

                case 8:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 1014;
                    if (!( this.precpred(this._ctx, 8))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 8)");
                    }
                    this.state = 1015;
                    this.match(CPP14Parser.PlusPlus);
                    break;

                case 9:
                    localctx = new PostfixexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_postfixexpression);
                    this.state = 1016;
                    if (!( this.precpred(this._ctx, 7))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 7)");
                    }
                    this.state = 1017;
                    this.match(CPP14Parser.MinusMinus);
                    break;

                } 
            }
            this.state = 1022;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,29,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ExpressionlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_expressionlist;
    return this;
}

ExpressionlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionlistContext.prototype.constructor = ExpressionlistContext;

ExpressionlistContext.prototype.initializerlist = function() {
    return this.getTypedRuleContext(InitializerlistContext,0);
};

ExpressionlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExpressionlist(this);
	}
};

ExpressionlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExpressionlist(this);
	}
};




CPP14Parser.ExpressionlistContext = ExpressionlistContext;

CPP14Parser.prototype.expressionlist = function() {

    var localctx = new ExpressionlistContext(this, this._ctx, this.state);
    this.enterRule(localctx, 32, CPP14Parser.RULE_expressionlist);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1023;
        this.initializerlist(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PseudodestructornameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_pseudodestructorname;
    return this;
}

PseudodestructornameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PseudodestructornameContext.prototype.constructor = PseudodestructornameContext;

PseudodestructornameContext.prototype.typename = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypenameContext);
    } else {
        return this.getTypedRuleContext(TypenameContext,i);
    }
};

PseudodestructornameContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

PseudodestructornameContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

PseudodestructornameContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

PseudodestructornameContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

PseudodestructornameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPseudodestructorname(this);
	}
};

PseudodestructornameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPseudodestructorname(this);
	}
};




CPP14Parser.PseudodestructornameContext = PseudodestructornameContext;

CPP14Parser.prototype.pseudodestructorname = function() {

    var localctx = new PseudodestructornameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 34, CPP14Parser.RULE_pseudodestructorname);
    var _la = 0; // Token type
    try {
        this.state = 1047;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,32,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1026;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,30,this._ctx);
            if(la_===1) {
                this.state = 1025;
                this.nestednamespecifier(0);

            }
            this.state = 1028;
            this.typename();
            this.state = 1029;
            this.match(CPP14Parser.Doublecolon);
            this.state = 1030;
            this.match(CPP14Parser.Tilde);
            this.state = 1031;
            this.typename();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1033;
            this.nestednamespecifier(0);
            this.state = 1034;
            this.match(CPP14Parser.Template);
            this.state = 1035;
            this.simpletemplateid();
            this.state = 1036;
            this.match(CPP14Parser.Doublecolon);
            this.state = 1037;
            this.match(CPP14Parser.Tilde);
            this.state = 1038;
            this.typename();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1041;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
                this.state = 1040;
                this.nestednamespecifier(0);
            }

            this.state = 1043;
            this.match(CPP14Parser.Tilde);
            this.state = 1044;
            this.typename();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1045;
            this.match(CPP14Parser.Tilde);
            this.state = 1046;
            this.decltypespecifier();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UnaryexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unaryexpression;
    return this;
}

UnaryexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnaryexpressionContext.prototype.constructor = UnaryexpressionContext;

UnaryexpressionContext.prototype.postfixexpression = function() {
    return this.getTypedRuleContext(PostfixexpressionContext,0);
};

UnaryexpressionContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

UnaryexpressionContext.prototype.unaryoperator = function() {
    return this.getTypedRuleContext(UnaryoperatorContext,0);
};

UnaryexpressionContext.prototype.Sizeof = function() {
    return this.getToken(CPP14Parser.Sizeof, 0);
};

UnaryexpressionContext.prototype.unaryexpression = function() {
    return this.getTypedRuleContext(UnaryexpressionContext,0);
};

UnaryexpressionContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

UnaryexpressionContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

UnaryexpressionContext.prototype.Alignof = function() {
    return this.getToken(CPP14Parser.Alignof, 0);
};

UnaryexpressionContext.prototype.noexceptexpression = function() {
    return this.getTypedRuleContext(NoexceptexpressionContext,0);
};

UnaryexpressionContext.prototype.newexpression = function() {
    return this.getTypedRuleContext(NewexpressionContext,0);
};

UnaryexpressionContext.prototype.deleteexpression = function() {
    return this.getTypedRuleContext(DeleteexpressionContext,0);
};

UnaryexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnaryexpression(this);
	}
};

UnaryexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnaryexpression(this);
	}
};




CPP14Parser.UnaryexpressionContext = UnaryexpressionContext;

CPP14Parser.prototype.unaryexpression = function() {

    var localctx = new UnaryexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 36, CPP14Parser.RULE_unaryexpression);
    try {
        this.state = 1077;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,33,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1049;
            this.postfixexpression(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1050;
            this.match(CPP14Parser.PlusPlus);
            this.state = 1051;
            this.castexpression();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1052;
            this.match(CPP14Parser.MinusMinus);
            this.state = 1053;
            this.castexpression();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1054;
            this.unaryoperator();
            this.state = 1055;
            this.castexpression();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1057;
            this.match(CPP14Parser.Sizeof);
            this.state = 1058;
            this.unaryexpression();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1059;
            this.match(CPP14Parser.Sizeof);
            this.state = 1060;
            this.match(CPP14Parser.LeftParen);
            this.state = 1061;
            this.typeid();
            this.state = 1062;
            this.match(CPP14Parser.RightParen);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1064;
            this.match(CPP14Parser.Sizeof);
            this.state = 1065;
            this.match(CPP14Parser.Ellipsis);
            this.state = 1066;
            this.match(CPP14Parser.LeftParen);
            this.state = 1067;
            this.match(CPP14Parser.Identifier);
            this.state = 1068;
            this.match(CPP14Parser.RightParen);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1069;
            this.match(CPP14Parser.Alignof);
            this.state = 1070;
            this.match(CPP14Parser.LeftParen);
            this.state = 1071;
            this.typeid();
            this.state = 1072;
            this.match(CPP14Parser.RightParen);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 1074;
            this.noexceptexpression();
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 1075;
            this.newexpression();
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 1076;
            this.deleteexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UnaryoperatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unaryoperator;
    return this;
}

UnaryoperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnaryoperatorContext.prototype.constructor = UnaryoperatorContext;


UnaryoperatorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnaryoperator(this);
	}
};

UnaryoperatorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnaryoperator(this);
	}
};




CPP14Parser.UnaryoperatorContext = UnaryoperatorContext;

CPP14Parser.prototype.unaryoperator = function() {

    var localctx = new UnaryoperatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 38, CPP14Parser.RULE_unaryoperator);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1079;
        _la = this._input.LA(1);
        if(!(((((_la - 84)) & ~0x1f) == 0 && ((1 << (_la - 84)) & ((1 << (CPP14Parser.Plus - 84)) | (1 << (CPP14Parser.Minus - 84)) | (1 << (CPP14Parser.Star - 84)) | (1 << (CPP14Parser.And - 84)) | (1 << (CPP14Parser.Or - 84)) | (1 << (CPP14Parser.Tilde - 84)) | (1 << (CPP14Parser.Not - 84)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NewexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newexpression;
    return this;
}

NewexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NewexpressionContext.prototype.constructor = NewexpressionContext;

NewexpressionContext.prototype.New = function() {
    return this.getToken(CPP14Parser.New, 0);
};

NewexpressionContext.prototype.newtypeid = function() {
    return this.getTypedRuleContext(NewtypeidContext,0);
};

NewexpressionContext.prototype.newplacement = function() {
    return this.getTypedRuleContext(NewplacementContext,0);
};

NewexpressionContext.prototype.newinitializer = function() {
    return this.getTypedRuleContext(NewinitializerContext,0);
};

NewexpressionContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

NewexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewexpression(this);
	}
};

NewexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewexpression(this);
	}
};




CPP14Parser.NewexpressionContext = NewexpressionContext;

CPP14Parser.prototype.newexpression = function() {

    var localctx = new NewexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 40, CPP14Parser.RULE_newexpression);
    var _la = 0; // Token type
    try {
        this.state = 1105;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,40,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1082;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 1081;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 1084;
            this.match(CPP14Parser.New);
            this.state = 1086;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.LeftParen) {
                this.state = 1085;
                this.newplacement();
            }

            this.state = 1088;
            this.newtypeid();
            this.state = 1090;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,36,this._ctx);
            if(la_===1) {
                this.state = 1089;
                this.newinitializer();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1093;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 1092;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 1095;
            this.match(CPP14Parser.New);
            this.state = 1097;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,38,this._ctx);
            if(la_===1) {
                this.state = 1096;
                this.newplacement();

            }
            this.state = 1099;
            this.match(CPP14Parser.LeftParen);
            this.state = 1100;
            this.typeid();
            this.state = 1101;
            this.match(CPP14Parser.RightParen);
            this.state = 1103;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,39,this._ctx);
            if(la_===1) {
                this.state = 1102;
                this.newinitializer();

            }
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NewplacementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newplacement;
    return this;
}

NewplacementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NewplacementContext.prototype.constructor = NewplacementContext;

NewplacementContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

NewplacementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewplacement(this);
	}
};

NewplacementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewplacement(this);
	}
};




CPP14Parser.NewplacementContext = NewplacementContext;

CPP14Parser.prototype.newplacement = function() {

    var localctx = new NewplacementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 42, CPP14Parser.RULE_newplacement);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1107;
        this.match(CPP14Parser.LeftParen);
        this.state = 1108;
        this.expressionlist();
        this.state = 1109;
        this.match(CPP14Parser.RightParen);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NewtypeidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newtypeid;
    return this;
}

NewtypeidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NewtypeidContext.prototype.constructor = NewtypeidContext;

NewtypeidContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

NewtypeidContext.prototype.newdeclarator = function() {
    return this.getTypedRuleContext(NewdeclaratorContext,0);
};

NewtypeidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewtypeid(this);
	}
};

NewtypeidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewtypeid(this);
	}
};




CPP14Parser.NewtypeidContext = NewtypeidContext;

CPP14Parser.prototype.newtypeid = function() {

    var localctx = new NewtypeidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 44, CPP14Parser.RULE_newtypeid);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1111;
        this.typespecifierseq();
        this.state = 1113;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,41,this._ctx);
        if(la_===1) {
            this.state = 1112;
            this.newdeclarator();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NewdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newdeclarator;
    return this;
}

NewdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NewdeclaratorContext.prototype.constructor = NewdeclaratorContext;

NewdeclaratorContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

NewdeclaratorContext.prototype.newdeclarator = function() {
    return this.getTypedRuleContext(NewdeclaratorContext,0);
};

NewdeclaratorContext.prototype.noptrnewdeclarator = function() {
    return this.getTypedRuleContext(NoptrnewdeclaratorContext,0);
};

NewdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewdeclarator(this);
	}
};

NewdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewdeclarator(this);
	}
};




CPP14Parser.NewdeclaratorContext = NewdeclaratorContext;

CPP14Parser.prototype.newdeclarator = function() {

    var localctx = new NewdeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 46, CPP14Parser.RULE_newdeclarator);
    try {
        this.state = 1120;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Decltype:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 1115;
            this.ptroperator();
            this.state = 1117;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,42,this._ctx);
            if(la_===1) {
                this.state = 1116;
                this.newdeclarator();

            }
            break;
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 2);
            this.state = 1119;
            this.noptrnewdeclarator(0);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NoptrnewdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrnewdeclarator;
    return this;
}

NoptrnewdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NoptrnewdeclaratorContext.prototype.constructor = NoptrnewdeclaratorContext;

NoptrnewdeclaratorContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

NoptrnewdeclaratorContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

NoptrnewdeclaratorContext.prototype.noptrnewdeclarator = function() {
    return this.getTypedRuleContext(NoptrnewdeclaratorContext,0);
};

NoptrnewdeclaratorContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

NoptrnewdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrnewdeclarator(this);
	}
};

NoptrnewdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrnewdeclarator(this);
	}
};



CPP14Parser.prototype.noptrnewdeclarator = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new NoptrnewdeclaratorContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 48;
    this.enterRecursionRule(localctx, 48, CPP14Parser.RULE_noptrnewdeclarator, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1123;
        this.match(CPP14Parser.LeftBracket);
        this.state = 1124;
        this.expression(0);
        this.state = 1125;
        this.match(CPP14Parser.RightBracket);
        this.state = 1127;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,44,this._ctx);
        if(la_===1) {
            this.state = 1126;
            this.attributespecifierseq(0);

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1138;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,46,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new NoptrnewdeclaratorContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_noptrnewdeclarator);
                this.state = 1129;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1130;
                this.match(CPP14Parser.LeftBracket);
                this.state = 1131;
                this.constantexpression();
                this.state = 1132;
                this.match(CPP14Parser.RightBracket);
                this.state = 1134;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,45,this._ctx);
                if(la_===1) {
                    this.state = 1133;
                    this.attributespecifierseq(0);

                } 
            }
            this.state = 1140;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,46,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function NewinitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newinitializer;
    return this;
}

NewinitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NewinitializerContext.prototype.constructor = NewinitializerContext;

NewinitializerContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

NewinitializerContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

NewinitializerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewinitializer(this);
	}
};

NewinitializerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewinitializer(this);
	}
};




CPP14Parser.NewinitializerContext = NewinitializerContext;

CPP14Parser.prototype.newinitializer = function() {

    var localctx = new NewinitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 50, CPP14Parser.RULE_newinitializer);
    var _la = 0; // Token type
    try {
        this.state = 1147;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 1);
            this.state = 1141;
            this.match(CPP14Parser.LeftParen);
            this.state = 1143;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 1142;
                this.expressionlist();
            }

            this.state = 1145;
            this.match(CPP14Parser.RightParen);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 1146;
            this.bracedinitlist();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeleteexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_deleteexpression;
    return this;
}

DeleteexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeleteexpressionContext.prototype.constructor = DeleteexpressionContext;

DeleteexpressionContext.prototype.Delete = function() {
    return this.getToken(CPP14Parser.Delete, 0);
};

DeleteexpressionContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

DeleteexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeleteexpression(this);
	}
};

DeleteexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeleteexpression(this);
	}
};




CPP14Parser.DeleteexpressionContext = DeleteexpressionContext;

CPP14Parser.prototype.deleteexpression = function() {

    var localctx = new DeleteexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 52, CPP14Parser.RULE_deleteexpression);
    var _la = 0; // Token type
    try {
        this.state = 1161;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,51,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1150;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 1149;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 1152;
            this.match(CPP14Parser.Delete);
            this.state = 1153;
            this.castexpression();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1155;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 1154;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 1157;
            this.match(CPP14Parser.Delete);
            this.state = 1158;
            this.match(CPP14Parser.LeftBracket);
            this.state = 1159;
            this.match(CPP14Parser.RightBracket);
            this.state = 1160;
            this.castexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NoexceptexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noexceptexpression;
    return this;
}

NoexceptexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NoexceptexpressionContext.prototype.constructor = NoexceptexpressionContext;

NoexceptexpressionContext.prototype.Noexcept = function() {
    return this.getToken(CPP14Parser.Noexcept, 0);
};

NoexceptexpressionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

NoexceptexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoexceptexpression(this);
	}
};

NoexceptexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoexceptexpression(this);
	}
};




CPP14Parser.NoexceptexpressionContext = NoexceptexpressionContext;

CPP14Parser.prototype.noexceptexpression = function() {

    var localctx = new NoexceptexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 54, CPP14Parser.RULE_noexceptexpression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1163;
        this.match(CPP14Parser.Noexcept);
        this.state = 1164;
        this.match(CPP14Parser.LeftParen);
        this.state = 1165;
        this.expression(0);
        this.state = 1166;
        this.match(CPP14Parser.RightParen);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CastexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_castexpression;
    return this;
}

CastexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CastexpressionContext.prototype.constructor = CastexpressionContext;

CastexpressionContext.prototype.unaryexpression = function() {
    return this.getTypedRuleContext(UnaryexpressionContext,0);
};

CastexpressionContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

CastexpressionContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

CastexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCastexpression(this);
	}
};

CastexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCastexpression(this);
	}
};




CPP14Parser.CastexpressionContext = CastexpressionContext;

CPP14Parser.prototype.castexpression = function() {

    var localctx = new CastexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 56, CPP14Parser.RULE_castexpression);
    try {
        this.state = 1174;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,52,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1168;
            this.unaryexpression();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1169;
            this.match(CPP14Parser.LeftParen);
            this.state = 1170;
            this.typeid();
            this.state = 1171;
            this.match(CPP14Parser.RightParen);
            this.state = 1172;
            this.castexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PmexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_pmexpression;
    return this;
}

PmexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PmexpressionContext.prototype.constructor = PmexpressionContext;

PmexpressionContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

PmexpressionContext.prototype.pmexpression = function() {
    return this.getTypedRuleContext(PmexpressionContext,0);
};

PmexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPmexpression(this);
	}
};

PmexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPmexpression(this);
	}
};



CPP14Parser.prototype.pmexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new PmexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 58;
    this.enterRecursionRule(localctx, 58, CPP14Parser.RULE_pmexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1177;
        this.castexpression();
        this._ctx.stop = this._input.LT(-1);
        this.state = 1187;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,54,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1185;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,53,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new PmexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_pmexpression);
                    this.state = 1179;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 1180;
                    this.match(CPP14Parser.DotStar);
                    this.state = 1181;
                    this.castexpression();
                    break;

                case 2:
                    localctx = new PmexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_pmexpression);
                    this.state = 1182;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1183;
                    this.match(CPP14Parser.ArrowStar);
                    this.state = 1184;
                    this.castexpression();
                    break;

                } 
            }
            this.state = 1189;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,54,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function MultiplicativeexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_multiplicativeexpression;
    return this;
}

MultiplicativeexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MultiplicativeexpressionContext.prototype.constructor = MultiplicativeexpressionContext;

MultiplicativeexpressionContext.prototype.pmexpression = function() {
    return this.getTypedRuleContext(PmexpressionContext,0);
};

MultiplicativeexpressionContext.prototype.multiplicativeexpression = function() {
    return this.getTypedRuleContext(MultiplicativeexpressionContext,0);
};

MultiplicativeexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMultiplicativeexpression(this);
	}
};

MultiplicativeexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMultiplicativeexpression(this);
	}
};



CPP14Parser.prototype.multiplicativeexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new MultiplicativeexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 60;
    this.enterRecursionRule(localctx, 60, CPP14Parser.RULE_multiplicativeexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1191;
        this.pmexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1204;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,56,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1202;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,55,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new MultiplicativeexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_multiplicativeexpression);
                    this.state = 1193;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 1194;
                    this.match(CPP14Parser.Star);
                    this.state = 1195;
                    this.pmexpression(0);
                    break;

                case 2:
                    localctx = new MultiplicativeexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_multiplicativeexpression);
                    this.state = 1196;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 1197;
                    this.match(CPP14Parser.Div);
                    this.state = 1198;
                    this.pmexpression(0);
                    break;

                case 3:
                    localctx = new MultiplicativeexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_multiplicativeexpression);
                    this.state = 1199;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1200;
                    this.match(CPP14Parser.Mod);
                    this.state = 1201;
                    this.pmexpression(0);
                    break;

                } 
            }
            this.state = 1206;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,56,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function AdditiveexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_additiveexpression;
    return this;
}

AdditiveexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AdditiveexpressionContext.prototype.constructor = AdditiveexpressionContext;

AdditiveexpressionContext.prototype.multiplicativeexpression = function() {
    return this.getTypedRuleContext(MultiplicativeexpressionContext,0);
};

AdditiveexpressionContext.prototype.additiveexpression = function() {
    return this.getTypedRuleContext(AdditiveexpressionContext,0);
};

AdditiveexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAdditiveexpression(this);
	}
};

AdditiveexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAdditiveexpression(this);
	}
};



CPP14Parser.prototype.additiveexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new AdditiveexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 62;
    this.enterRecursionRule(localctx, 62, CPP14Parser.RULE_additiveexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1208;
        this.multiplicativeexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1218;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,58,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1216;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,57,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new AdditiveexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_additiveexpression);
                    this.state = 1210;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 1211;
                    this.match(CPP14Parser.Plus);
                    this.state = 1212;
                    this.multiplicativeexpression(0);
                    break;

                case 2:
                    localctx = new AdditiveexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_additiveexpression);
                    this.state = 1213;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1214;
                    this.match(CPP14Parser.Minus);
                    this.state = 1215;
                    this.multiplicativeexpression(0);
                    break;

                } 
            }
            this.state = 1220;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,58,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ShiftexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_shiftexpression;
    return this;
}

ShiftexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ShiftexpressionContext.prototype.constructor = ShiftexpressionContext;

ShiftexpressionContext.prototype.additiveexpression = function() {
    return this.getTypedRuleContext(AdditiveexpressionContext,0);
};

ShiftexpressionContext.prototype.shiftexpression = function() {
    return this.getTypedRuleContext(ShiftexpressionContext,0);
};

ShiftexpressionContext.prototype.rightShift = function() {
    return this.getTypedRuleContext(RightShiftContext,0);
};

ShiftexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterShiftexpression(this);
	}
};

ShiftexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitShiftexpression(this);
	}
};



CPP14Parser.prototype.shiftexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new ShiftexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 64;
    this.enterRecursionRule(localctx, 64, CPP14Parser.RULE_shiftexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1222;
        this.additiveexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1233;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,60,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1231;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,59,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new ShiftexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_shiftexpression);
                    this.state = 1224;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 1225;
                    this.match(CPP14Parser.LeftShift);
                    this.state = 1226;
                    this.additiveexpression(0);
                    break;

                case 2:
                    localctx = new ShiftexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_shiftexpression);
                    this.state = 1227;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1228;
                    this.rightShift();
                    this.state = 1229;
                    this.additiveexpression(0);
                    break;

                } 
            }
            this.state = 1235;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,60,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function RelationalexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_relationalexpression;
    return this;
}

RelationalexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RelationalexpressionContext.prototype.constructor = RelationalexpressionContext;

RelationalexpressionContext.prototype.shiftexpression = function() {
    return this.getTypedRuleContext(ShiftexpressionContext,0);
};

RelationalexpressionContext.prototype.relationalexpression = function() {
    return this.getTypedRuleContext(RelationalexpressionContext,0);
};

RelationalexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterRelationalexpression(this);
	}
};

RelationalexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitRelationalexpression(this);
	}
};



CPP14Parser.prototype.relationalexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new RelationalexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 66;
    this.enterRecursionRule(localctx, 66, CPP14Parser.RULE_relationalexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1237;
        this.shiftexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1253;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,62,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1251;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,61,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new RelationalexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_relationalexpression);
                    this.state = 1239;
                    if (!( this.precpred(this._ctx, 4))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 4)");
                    }
                    this.state = 1240;
                    this.match(CPP14Parser.Less);
                    this.state = 1241;
                    this.shiftexpression(0);
                    break;

                case 2:
                    localctx = new RelationalexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_relationalexpression);
                    this.state = 1242;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 1243;
                    this.match(CPP14Parser.Greater);
                    this.state = 1244;
                    this.shiftexpression(0);
                    break;

                case 3:
                    localctx = new RelationalexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_relationalexpression);
                    this.state = 1245;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 1246;
                    this.match(CPP14Parser.LessEqual);
                    this.state = 1247;
                    this.shiftexpression(0);
                    break;

                case 4:
                    localctx = new RelationalexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_relationalexpression);
                    this.state = 1248;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1249;
                    this.match(CPP14Parser.GreaterEqual);
                    this.state = 1250;
                    this.shiftexpression(0);
                    break;

                } 
            }
            this.state = 1255;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,62,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function EqualityexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_equalityexpression;
    return this;
}

EqualityexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EqualityexpressionContext.prototype.constructor = EqualityexpressionContext;

EqualityexpressionContext.prototype.relationalexpression = function() {
    return this.getTypedRuleContext(RelationalexpressionContext,0);
};

EqualityexpressionContext.prototype.equalityexpression = function() {
    return this.getTypedRuleContext(EqualityexpressionContext,0);
};

EqualityexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEqualityexpression(this);
	}
};

EqualityexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEqualityexpression(this);
	}
};



CPP14Parser.prototype.equalityexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new EqualityexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 68;
    this.enterRecursionRule(localctx, 68, CPP14Parser.RULE_equalityexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1257;
        this.relationalexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1267;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,64,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1265;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,63,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new EqualityexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_equalityexpression);
                    this.state = 1259;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 1260;
                    this.match(CPP14Parser.Equal);
                    this.state = 1261;
                    this.relationalexpression(0);
                    break;

                case 2:
                    localctx = new EqualityexpressionContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_equalityexpression);
                    this.state = 1262;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1263;
                    this.match(CPP14Parser.NotEqual);
                    this.state = 1264;
                    this.relationalexpression(0);
                    break;

                } 
            }
            this.state = 1269;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,64,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function AndexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_andexpression;
    return this;
}

AndexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AndexpressionContext.prototype.constructor = AndexpressionContext;

AndexpressionContext.prototype.equalityexpression = function() {
    return this.getTypedRuleContext(EqualityexpressionContext,0);
};

AndexpressionContext.prototype.andexpression = function() {
    return this.getTypedRuleContext(AndexpressionContext,0);
};

AndexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAndexpression(this);
	}
};

AndexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAndexpression(this);
	}
};



CPP14Parser.prototype.andexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new AndexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 70;
    this.enterRecursionRule(localctx, 70, CPP14Parser.RULE_andexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1271;
        this.equalityexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1278;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,65,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new AndexpressionContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_andexpression);
                this.state = 1273;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1274;
                this.match(CPP14Parser.And);
                this.state = 1275;
                this.equalityexpression(0); 
            }
            this.state = 1280;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,65,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ExclusiveorexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_exclusiveorexpression;
    return this;
}

ExclusiveorexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExclusiveorexpressionContext.prototype.constructor = ExclusiveorexpressionContext;

ExclusiveorexpressionContext.prototype.andexpression = function() {
    return this.getTypedRuleContext(AndexpressionContext,0);
};

ExclusiveorexpressionContext.prototype.exclusiveorexpression = function() {
    return this.getTypedRuleContext(ExclusiveorexpressionContext,0);
};

ExclusiveorexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExclusiveorexpression(this);
	}
};

ExclusiveorexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExclusiveorexpression(this);
	}
};



CPP14Parser.prototype.exclusiveorexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new ExclusiveorexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 72;
    this.enterRecursionRule(localctx, 72, CPP14Parser.RULE_exclusiveorexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1282;
        this.andexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1289;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,66,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new ExclusiveorexpressionContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_exclusiveorexpression);
                this.state = 1284;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1285;
                this.match(CPP14Parser.Caret);
                this.state = 1286;
                this.andexpression(0); 
            }
            this.state = 1291;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,66,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function InclusiveorexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_inclusiveorexpression;
    return this;
}

InclusiveorexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InclusiveorexpressionContext.prototype.constructor = InclusiveorexpressionContext;

InclusiveorexpressionContext.prototype.exclusiveorexpression = function() {
    return this.getTypedRuleContext(ExclusiveorexpressionContext,0);
};

InclusiveorexpressionContext.prototype.inclusiveorexpression = function() {
    return this.getTypedRuleContext(InclusiveorexpressionContext,0);
};

InclusiveorexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInclusiveorexpression(this);
	}
};

InclusiveorexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInclusiveorexpression(this);
	}
};



CPP14Parser.prototype.inclusiveorexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new InclusiveorexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 74;
    this.enterRecursionRule(localctx, 74, CPP14Parser.RULE_inclusiveorexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1293;
        this.exclusiveorexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1300;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,67,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new InclusiveorexpressionContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_inclusiveorexpression);
                this.state = 1295;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1296;
                this.match(CPP14Parser.Or);
                this.state = 1297;
                this.exclusiveorexpression(0); 
            }
            this.state = 1302;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,67,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function LogicalandexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_logicalandexpression;
    return this;
}

LogicalandexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LogicalandexpressionContext.prototype.constructor = LogicalandexpressionContext;

LogicalandexpressionContext.prototype.inclusiveorexpression = function() {
    return this.getTypedRuleContext(InclusiveorexpressionContext,0);
};

LogicalandexpressionContext.prototype.logicalandexpression = function() {
    return this.getTypedRuleContext(LogicalandexpressionContext,0);
};

LogicalandexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLogicalandexpression(this);
	}
};

LogicalandexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLogicalandexpression(this);
	}
};



CPP14Parser.prototype.logicalandexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new LogicalandexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 76;
    this.enterRecursionRule(localctx, 76, CPP14Parser.RULE_logicalandexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1304;
        this.inclusiveorexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1311;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,68,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new LogicalandexpressionContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_logicalandexpression);
                this.state = 1306;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1307;
                this.match(CPP14Parser.AndAnd);
                this.state = 1308;
                this.inclusiveorexpression(0); 
            }
            this.state = 1313;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,68,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function LogicalorexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_logicalorexpression;
    return this;
}

LogicalorexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LogicalorexpressionContext.prototype.constructor = LogicalorexpressionContext;

LogicalorexpressionContext.prototype.logicalandexpression = function() {
    return this.getTypedRuleContext(LogicalandexpressionContext,0);
};

LogicalorexpressionContext.prototype.logicalorexpression = function() {
    return this.getTypedRuleContext(LogicalorexpressionContext,0);
};

LogicalorexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLogicalorexpression(this);
	}
};

LogicalorexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLogicalorexpression(this);
	}
};



CPP14Parser.prototype.logicalorexpression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new LogicalorexpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 78;
    this.enterRecursionRule(localctx, 78, CPP14Parser.RULE_logicalorexpression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1315;
        this.logicalandexpression(0);
        this._ctx.stop = this._input.LT(-1);
        this.state = 1322;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,69,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new LogicalorexpressionContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_logicalorexpression);
                this.state = 1317;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1318;
                this.match(CPP14Parser.OrOr);
                this.state = 1319;
                this.logicalandexpression(0); 
            }
            this.state = 1324;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,69,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ConditionalexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conditionalexpression;
    return this;
}

ConditionalexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConditionalexpressionContext.prototype.constructor = ConditionalexpressionContext;

ConditionalexpressionContext.prototype.logicalorexpression = function() {
    return this.getTypedRuleContext(LogicalorexpressionContext,0);
};

ConditionalexpressionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ConditionalexpressionContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

ConditionalexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConditionalexpression(this);
	}
};

ConditionalexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConditionalexpression(this);
	}
};




CPP14Parser.ConditionalexpressionContext = ConditionalexpressionContext;

CPP14Parser.prototype.conditionalexpression = function() {

    var localctx = new ConditionalexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 80, CPP14Parser.RULE_conditionalexpression);
    try {
        this.state = 1332;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,70,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1325;
            this.logicalorexpression(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1326;
            this.logicalorexpression(0);
            this.state = 1327;
            this.match(CPP14Parser.Question);
            this.state = 1328;
            this.expression(0);
            this.state = 1329;
            this.match(CPP14Parser.Colon);
            this.state = 1330;
            this.assignmentexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AssignmentexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_assignmentexpression;
    return this;
}

AssignmentexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AssignmentexpressionContext.prototype.constructor = AssignmentexpressionContext;

AssignmentexpressionContext.prototype.conditionalexpression = function() {
    return this.getTypedRuleContext(ConditionalexpressionContext,0);
};

AssignmentexpressionContext.prototype.logicalorexpression = function() {
    return this.getTypedRuleContext(LogicalorexpressionContext,0);
};

AssignmentexpressionContext.prototype.assignmentoperator = function() {
    return this.getTypedRuleContext(AssignmentoperatorContext,0);
};

AssignmentexpressionContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

AssignmentexpressionContext.prototype.throwexpression = function() {
    return this.getTypedRuleContext(ThrowexpressionContext,0);
};

AssignmentexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAssignmentexpression(this);
	}
};

AssignmentexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAssignmentexpression(this);
	}
};




CPP14Parser.AssignmentexpressionContext = AssignmentexpressionContext;

CPP14Parser.prototype.assignmentexpression = function() {

    var localctx = new AssignmentexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 82, CPP14Parser.RULE_assignmentexpression);
    try {
        this.state = 1340;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,71,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1334;
            this.conditionalexpression();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1335;
            this.logicalorexpression(0);
            this.state = 1336;
            this.assignmentoperator();
            this.state = 1337;
            this.initializerclause();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1339;
            this.throwexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AssignmentoperatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_assignmentoperator;
    return this;
}

AssignmentoperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AssignmentoperatorContext.prototype.constructor = AssignmentoperatorContext;

AssignmentoperatorContext.prototype.rightShiftAssign = function() {
    return this.getTypedRuleContext(RightShiftAssignContext,0);
};

AssignmentoperatorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAssignmentoperator(this);
	}
};

AssignmentoperatorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAssignmentoperator(this);
	}
};




CPP14Parser.AssignmentoperatorContext = AssignmentoperatorContext;

CPP14Parser.prototype.assignmentoperator = function() {

    var localctx = new AssignmentoperatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 84, CPP14Parser.RULE_assignmentoperator);
    try {
        this.state = 1353;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Assign:
            this.enterOuterAlt(localctx, 1);
            this.state = 1342;
            this.match(CPP14Parser.Assign);
            break;
        case CPP14Parser.StarAssign:
            this.enterOuterAlt(localctx, 2);
            this.state = 1343;
            this.match(CPP14Parser.StarAssign);
            break;
        case CPP14Parser.DivAssign:
            this.enterOuterAlt(localctx, 3);
            this.state = 1344;
            this.match(CPP14Parser.DivAssign);
            break;
        case CPP14Parser.ModAssign:
            this.enterOuterAlt(localctx, 4);
            this.state = 1345;
            this.match(CPP14Parser.ModAssign);
            break;
        case CPP14Parser.PlusAssign:
            this.enterOuterAlt(localctx, 5);
            this.state = 1346;
            this.match(CPP14Parser.PlusAssign);
            break;
        case CPP14Parser.MinusAssign:
            this.enterOuterAlt(localctx, 6);
            this.state = 1347;
            this.match(CPP14Parser.MinusAssign);
            break;
        case CPP14Parser.Greater:
            this.enterOuterAlt(localctx, 7);
            this.state = 1348;
            this.rightShiftAssign();
            break;
        case CPP14Parser.LeftShiftAssign:
            this.enterOuterAlt(localctx, 8);
            this.state = 1349;
            this.match(CPP14Parser.LeftShiftAssign);
            break;
        case CPP14Parser.AndAssign:
            this.enterOuterAlt(localctx, 9);
            this.state = 1350;
            this.match(CPP14Parser.AndAssign);
            break;
        case CPP14Parser.XorAssign:
            this.enterOuterAlt(localctx, 10);
            this.state = 1351;
            this.match(CPP14Parser.XorAssign);
            break;
        case CPP14Parser.OrAssign:
            this.enterOuterAlt(localctx, 11);
            this.state = 1352;
            this.match(CPP14Parser.OrAssign);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_expression;
    return this;
}

ExpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionContext.prototype.constructor = ExpressionContext;

ExpressionContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

ExpressionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ExpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExpression(this);
	}
};

ExpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExpression(this);
	}
};



CPP14Parser.prototype.expression = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new ExpressionContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 86;
    this.enterRecursionRule(localctx, 86, CPP14Parser.RULE_expression, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1356;
        this.assignmentexpression();
        this._ctx.stop = this._input.LT(-1);
        this.state = 1363;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,73,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new ExpressionContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_expression);
                this.state = 1358;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1359;
                this.match(CPP14Parser.Comma);
                this.state = 1360;
                this.assignmentexpression(); 
            }
            this.state = 1365;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,73,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ConstantexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_constantexpression;
    return this;
}

ConstantexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConstantexpressionContext.prototype.constructor = ConstantexpressionContext;

ConstantexpressionContext.prototype.conditionalexpression = function() {
    return this.getTypedRuleContext(ConditionalexpressionContext,0);
};

ConstantexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConstantexpression(this);
	}
};

ConstantexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConstantexpression(this);
	}
};




CPP14Parser.ConstantexpressionContext = ConstantexpressionContext;

CPP14Parser.prototype.constantexpression = function() {

    var localctx = new ConstantexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 88, CPP14Parser.RULE_constantexpression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1366;
        this.conditionalexpression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_statement;
    return this;
}

StatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StatementContext.prototype.constructor = StatementContext;

StatementContext.prototype.labeledstatement = function() {
    return this.getTypedRuleContext(LabeledstatementContext,0);
};

StatementContext.prototype.expressionstatement = function() {
    return this.getTypedRuleContext(ExpressionstatementContext,0);
};

StatementContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

StatementContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

StatementContext.prototype.selectionstatement = function() {
    return this.getTypedRuleContext(SelectionstatementContext,0);
};

StatementContext.prototype.iterationstatement = function() {
    return this.getTypedRuleContext(IterationstatementContext,0);
};

StatementContext.prototype.jumpstatement = function() {
    return this.getTypedRuleContext(JumpstatementContext,0);
};

StatementContext.prototype.declarationstatement = function() {
    return this.getTypedRuleContext(DeclarationstatementContext,0);
};

StatementContext.prototype.tryblock = function() {
    return this.getTypedRuleContext(TryblockContext,0);
};

StatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStatement(this);
	}
};

StatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStatement(this);
	}
};




CPP14Parser.StatementContext = StatementContext;

CPP14Parser.prototype.statement = function() {

    var localctx = new StatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 90, CPP14Parser.RULE_statement);
    var _la = 0; // Token type
    try {
        this.state = 1394;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,80,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1368;
            this.labeledstatement();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1370;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,74,this._ctx);
            if(la_===1) {
                this.state = 1369;
                this.attributespecifierseq(0);

            }
            this.state = 1372;
            this.expressionstatement();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1374;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1373;
                this.attributespecifierseq(0);
            }

            this.state = 1376;
            this.compoundstatement();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1378;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1377;
                this.attributespecifierseq(0);
            }

            this.state = 1380;
            this.selectionstatement();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1382;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1381;
                this.attributespecifierseq(0);
            }

            this.state = 1384;
            this.iterationstatement();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1386;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1385;
                this.attributespecifierseq(0);
            }

            this.state = 1388;
            this.jumpstatement();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1389;
            this.declarationstatement();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1391;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1390;
                this.attributespecifierseq(0);
            }

            this.state = 1393;
            this.tryblock();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LabeledstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_labeledstatement;
    return this;
}

LabeledstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LabeledstatementContext.prototype.constructor = LabeledstatementContext;

LabeledstatementContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

LabeledstatementContext.prototype.statement = function() {
    return this.getTypedRuleContext(StatementContext,0);
};

LabeledstatementContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

LabeledstatementContext.prototype.Case = function() {
    return this.getToken(CPP14Parser.Case, 0);
};

LabeledstatementContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

LabeledstatementContext.prototype.Default = function() {
    return this.getToken(CPP14Parser.Default, 0);
};

LabeledstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLabeledstatement(this);
	}
};

LabeledstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLabeledstatement(this);
	}
};




CPP14Parser.LabeledstatementContext = LabeledstatementContext;

CPP14Parser.prototype.labeledstatement = function() {

    var localctx = new LabeledstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 92, CPP14Parser.RULE_labeledstatement);
    var _la = 0; // Token type
    try {
        this.state = 1416;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,84,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1397;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1396;
                this.attributespecifierseq(0);
            }

            this.state = 1399;
            this.match(CPP14Parser.Identifier);
            this.state = 1400;
            this.match(CPP14Parser.Colon);
            this.state = 1401;
            this.statement();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1403;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1402;
                this.attributespecifierseq(0);
            }

            this.state = 1405;
            this.match(CPP14Parser.Case);
            this.state = 1406;
            this.constantexpression();
            this.state = 1407;
            this.match(CPP14Parser.Colon);
            this.state = 1408;
            this.statement();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1411;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1410;
                this.attributespecifierseq(0);
            }

            this.state = 1413;
            this.match(CPP14Parser.Default);
            this.state = 1414;
            this.match(CPP14Parser.Colon);
            this.state = 1415;
            this.statement();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExpressionstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_expressionstatement;
    return this;
}

ExpressionstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExpressionstatementContext.prototype.constructor = ExpressionstatementContext;

ExpressionstatementContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ExpressionstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExpressionstatement(this);
	}
};

ExpressionstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExpressionstatement(this);
	}
};




CPP14Parser.ExpressionstatementContext = ExpressionstatementContext;

CPP14Parser.prototype.expressionstatement = function() {

    var localctx = new ExpressionstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 94, CPP14Parser.RULE_expressionstatement);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1419;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
            this.state = 1418;
            this.expression(0);
        }

        this.state = 1421;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CompoundstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_compoundstatement;
    return this;
}

CompoundstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CompoundstatementContext.prototype.constructor = CompoundstatementContext;

CompoundstatementContext.prototype.statementseq = function() {
    return this.getTypedRuleContext(StatementseqContext,0);
};

CompoundstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCompoundstatement(this);
	}
};

CompoundstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCompoundstatement(this);
	}
};




CPP14Parser.CompoundstatementContext = CompoundstatementContext;

CPP14Parser.prototype.compoundstatement = function() {

    var localctx = new CompoundstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 96, CPP14Parser.RULE_compoundstatement);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1423;
        this.match(CPP14Parser.LeftBrace);
        this.state = 1425;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Asm) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Break) | (1 << CPP14Parser.Case) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Continue) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Default) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Do) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.For - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Goto - 32)) | (1 << (CPP14Parser.If - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Namespace - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Return - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Switch - 32)) | (1 << (CPP14Parser.This - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Try - 64)) | (1 << (CPP14Parser.Typedef - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Union - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Using - 64)) | (1 << (CPP14Parser.Virtual - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Volatile - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.While - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.PlusPlus - 111)) | (1 << (CPP14Parser.MinusMinus - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)) | (1 << (CPP14Parser.Integerliteral - 111)) | (1 << (CPP14Parser.Characterliteral - 111)) | (1 << (CPP14Parser.Floatingliteral - 111)) | (1 << (CPP14Parser.Stringliteral - 111)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 111)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 111)) | (1 << (CPP14Parser.Userdefinedstringliteral - 111)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 111)))) !== 0)) {
            this.state = 1424;
            this.statementseq(0);
        }

        this.state = 1427;
        this.match(CPP14Parser.RightBrace);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StatementseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_statementseq;
    return this;
}

StatementseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StatementseqContext.prototype.constructor = StatementseqContext;

StatementseqContext.prototype.statement = function() {
    return this.getTypedRuleContext(StatementContext,0);
};

StatementseqContext.prototype.statementseq = function() {
    return this.getTypedRuleContext(StatementseqContext,0);
};

StatementseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStatementseq(this);
	}
};

StatementseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStatementseq(this);
	}
};



CPP14Parser.prototype.statementseq = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new StatementseqContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 98;
    this.enterRecursionRule(localctx, 98, CPP14Parser.RULE_statementseq, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1430;
        this.statement();
        this._ctx.stop = this._input.LT(-1);
        this.state = 1436;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,87,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new StatementseqContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_statementseq);
                this.state = 1432;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1433;
                this.statement(); 
            }
            this.state = 1438;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,87,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function SelectionstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_selectionstatement;
    return this;
}

SelectionstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectionstatementContext.prototype.constructor = SelectionstatementContext;

SelectionstatementContext.prototype.If = function() {
    return this.getToken(CPP14Parser.If, 0);
};

SelectionstatementContext.prototype.condition = function() {
    return this.getTypedRuleContext(ConditionContext,0);
};

SelectionstatementContext.prototype.statement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(StatementContext);
    } else {
        return this.getTypedRuleContext(StatementContext,i);
    }
};

SelectionstatementContext.prototype.Else = function() {
    return this.getToken(CPP14Parser.Else, 0);
};

SelectionstatementContext.prototype.Switch = function() {
    return this.getToken(CPP14Parser.Switch, 0);
};

SelectionstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSelectionstatement(this);
	}
};

SelectionstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSelectionstatement(this);
	}
};




CPP14Parser.SelectionstatementContext = SelectionstatementContext;

CPP14Parser.prototype.selectionstatement = function() {

    var localctx = new SelectionstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 100, CPP14Parser.RULE_selectionstatement);
    try {
        this.state = 1459;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,88,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1439;
            this.match(CPP14Parser.If);
            this.state = 1440;
            this.match(CPP14Parser.LeftParen);
            this.state = 1441;
            this.condition();
            this.state = 1442;
            this.match(CPP14Parser.RightParen);
            this.state = 1443;
            this.statement();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1445;
            this.match(CPP14Parser.If);
            this.state = 1446;
            this.match(CPP14Parser.LeftParen);
            this.state = 1447;
            this.condition();
            this.state = 1448;
            this.match(CPP14Parser.RightParen);
            this.state = 1449;
            this.statement();
            this.state = 1450;
            this.match(CPP14Parser.Else);
            this.state = 1451;
            this.statement();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1453;
            this.match(CPP14Parser.Switch);
            this.state = 1454;
            this.match(CPP14Parser.LeftParen);
            this.state = 1455;
            this.condition();
            this.state = 1456;
            this.match(CPP14Parser.RightParen);
            this.state = 1457;
            this.statement();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConditionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_condition;
    return this;
}

ConditionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConditionContext.prototype.constructor = ConditionContext;

ConditionContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ConditionContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

ConditionContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

ConditionContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

ConditionContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

ConditionContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

ConditionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCondition(this);
	}
};

ConditionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCondition(this);
	}
};




CPP14Parser.ConditionContext = ConditionContext;

CPP14Parser.prototype.condition = function() {

    var localctx = new ConditionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 102, CPP14Parser.RULE_condition);
    var _la = 0; // Token type
    try {
        this.state = 1477;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,91,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1461;
            this.expression(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1463;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1462;
                this.attributespecifierseq(0);
            }

            this.state = 1465;
            this.declspecifierseq();
            this.state = 1466;
            this.declarator();
            this.state = 1467;
            this.match(CPP14Parser.Assign);
            this.state = 1468;
            this.initializerclause();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1471;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1470;
                this.attributespecifierseq(0);
            }

            this.state = 1473;
            this.declspecifierseq();
            this.state = 1474;
            this.declarator();
            this.state = 1475;
            this.bracedinitlist();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function IterationstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_iterationstatement;
    return this;
}

IterationstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IterationstatementContext.prototype.constructor = IterationstatementContext;

IterationstatementContext.prototype.While = function() {
    return this.getToken(CPP14Parser.While, 0);
};

IterationstatementContext.prototype.condition = function() {
    return this.getTypedRuleContext(ConditionContext,0);
};

IterationstatementContext.prototype.statement = function() {
    return this.getTypedRuleContext(StatementContext,0);
};

IterationstatementContext.prototype.Do = function() {
    return this.getToken(CPP14Parser.Do, 0);
};

IterationstatementContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

IterationstatementContext.prototype.For = function() {
    return this.getToken(CPP14Parser.For, 0);
};

IterationstatementContext.prototype.forinitstatement = function() {
    return this.getTypedRuleContext(ForinitstatementContext,0);
};

IterationstatementContext.prototype.forrangedeclaration = function() {
    return this.getTypedRuleContext(ForrangedeclarationContext,0);
};

IterationstatementContext.prototype.forrangeinitializer = function() {
    return this.getTypedRuleContext(ForrangeinitializerContext,0);
};

IterationstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterIterationstatement(this);
	}
};

IterationstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitIterationstatement(this);
	}
};




CPP14Parser.IterationstatementContext = IterationstatementContext;

CPP14Parser.prototype.iterationstatement = function() {

    var localctx = new IterationstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 104, CPP14Parser.RULE_iterationstatement);
    var _la = 0; // Token type
    try {
        this.state = 1514;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,94,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1479;
            this.match(CPP14Parser.While);
            this.state = 1480;
            this.match(CPP14Parser.LeftParen);
            this.state = 1481;
            this.condition();
            this.state = 1482;
            this.match(CPP14Parser.RightParen);
            this.state = 1483;
            this.statement();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1485;
            this.match(CPP14Parser.Do);
            this.state = 1486;
            this.statement();
            this.state = 1487;
            this.match(CPP14Parser.While);
            this.state = 1488;
            this.match(CPP14Parser.LeftParen);
            this.state = 1489;
            this.expression(0);
            this.state = 1490;
            this.match(CPP14Parser.RightParen);
            this.state = 1491;
            this.match(CPP14Parser.Semi);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1493;
            this.match(CPP14Parser.For);
            this.state = 1494;
            this.match(CPP14Parser.LeftParen);
            this.state = 1495;
            this.forinitstatement();
            this.state = 1497;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typedef - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Union - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Virtual - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Volatile - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 1496;
                this.condition();
            }

            this.state = 1499;
            this.match(CPP14Parser.Semi);
            this.state = 1501;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 1500;
                this.expression(0);
            }

            this.state = 1503;
            this.match(CPP14Parser.RightParen);
            this.state = 1504;
            this.statement();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1506;
            this.match(CPP14Parser.For);
            this.state = 1507;
            this.match(CPP14Parser.LeftParen);
            this.state = 1508;
            this.forrangedeclaration();
            this.state = 1509;
            this.match(CPP14Parser.Colon);
            this.state = 1510;
            this.forrangeinitializer();
            this.state = 1511;
            this.match(CPP14Parser.RightParen);
            this.state = 1512;
            this.statement();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ForinitstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_forinitstatement;
    return this;
}

ForinitstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ForinitstatementContext.prototype.constructor = ForinitstatementContext;

ForinitstatementContext.prototype.expressionstatement = function() {
    return this.getTypedRuleContext(ExpressionstatementContext,0);
};

ForinitstatementContext.prototype.simpledeclaration = function() {
    return this.getTypedRuleContext(SimpledeclarationContext,0);
};

ForinitstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterForinitstatement(this);
	}
};

ForinitstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitForinitstatement(this);
	}
};




CPP14Parser.ForinitstatementContext = ForinitstatementContext;

CPP14Parser.prototype.forinitstatement = function() {

    var localctx = new ForinitstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 106, CPP14Parser.RULE_forinitstatement);
    try {
        this.state = 1518;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,95,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1516;
            this.expressionstatement();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1517;
            this.simpledeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ForrangedeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_forrangedeclaration;
    return this;
}

ForrangedeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ForrangedeclarationContext.prototype.constructor = ForrangedeclarationContext;

ForrangedeclarationContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

ForrangedeclarationContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

ForrangedeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

ForrangedeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterForrangedeclaration(this);
	}
};

ForrangedeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitForrangedeclaration(this);
	}
};




CPP14Parser.ForrangedeclarationContext = ForrangedeclarationContext;

CPP14Parser.prototype.forrangedeclaration = function() {

    var localctx = new ForrangedeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 108, CPP14Parser.RULE_forrangedeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1521;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 1520;
            this.attributespecifierseq(0);
        }

        this.state = 1523;
        this.declspecifierseq();
        this.state = 1524;
        this.declarator();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ForrangeinitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_forrangeinitializer;
    return this;
}

ForrangeinitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ForrangeinitializerContext.prototype.constructor = ForrangeinitializerContext;

ForrangeinitializerContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

ForrangeinitializerContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

ForrangeinitializerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterForrangeinitializer(this);
	}
};

ForrangeinitializerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitForrangeinitializer(this);
	}
};




CPP14Parser.ForrangeinitializerContext = ForrangeinitializerContext;

CPP14Parser.prototype.forrangeinitializer = function() {

    var localctx = new ForrangeinitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 110, CPP14Parser.RULE_forrangeinitializer);
    try {
        this.state = 1528;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Alignof:
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Const_cast:
        case CPP14Parser.Decltype:
        case CPP14Parser.Delete:
        case CPP14Parser.Double:
        case CPP14Parser.Dynamic_cast:
        case CPP14Parser.False:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.New:
        case CPP14Parser.Noexcept:
        case CPP14Parser.Nullptr:
        case CPP14Parser.Operator:
        case CPP14Parser.Reinterpret_cast:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Sizeof:
        case CPP14Parser.Static_cast:
        case CPP14Parser.This:
        case CPP14Parser.Throw:
        case CPP14Parser.True:
        case CPP14Parser.Typeid:
        case CPP14Parser.Typename:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
        case CPP14Parser.Plus:
        case CPP14Parser.Minus:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Or:
        case CPP14Parser.Tilde:
        case CPP14Parser.Not:
        case CPP14Parser.PlusPlus:
        case CPP14Parser.MinusMinus:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
        case CPP14Parser.Integerliteral:
        case CPP14Parser.Characterliteral:
        case CPP14Parser.Floatingliteral:
        case CPP14Parser.Stringliteral:
        case CPP14Parser.Userdefinedintegerliteral:
        case CPP14Parser.Userdefinedfloatingliteral:
        case CPP14Parser.Userdefinedstringliteral:
        case CPP14Parser.Userdefinedcharacterliteral:
            this.enterOuterAlt(localctx, 1);
            this.state = 1526;
            this.expression(0);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 1527;
            this.bracedinitlist();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function JumpstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_jumpstatement;
    return this;
}

JumpstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
JumpstatementContext.prototype.constructor = JumpstatementContext;

JumpstatementContext.prototype.Break = function() {
    return this.getToken(CPP14Parser.Break, 0);
};

JumpstatementContext.prototype.Continue = function() {
    return this.getToken(CPP14Parser.Continue, 0);
};

JumpstatementContext.prototype.Return = function() {
    return this.getToken(CPP14Parser.Return, 0);
};

JumpstatementContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

JumpstatementContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

JumpstatementContext.prototype.Goto = function() {
    return this.getToken(CPP14Parser.Goto, 0);
};

JumpstatementContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

JumpstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterJumpstatement(this);
	}
};

JumpstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitJumpstatement(this);
	}
};




CPP14Parser.JumpstatementContext = JumpstatementContext;

CPP14Parser.prototype.jumpstatement = function() {

    var localctx = new JumpstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 112, CPP14Parser.RULE_jumpstatement);
    var _la = 0; // Token type
    try {
        this.state = 1546;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,99,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1530;
            this.match(CPP14Parser.Break);
            this.state = 1531;
            this.match(CPP14Parser.Semi);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1532;
            this.match(CPP14Parser.Continue);
            this.state = 1533;
            this.match(CPP14Parser.Semi);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1534;
            this.match(CPP14Parser.Return);
            this.state = 1536;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 1535;
                this.expression(0);
            }

            this.state = 1538;
            this.match(CPP14Parser.Semi);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1539;
            this.match(CPP14Parser.Return);
            this.state = 1540;
            this.bracedinitlist();
            this.state = 1541;
            this.match(CPP14Parser.Semi);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1543;
            this.match(CPP14Parser.Goto);
            this.state = 1544;
            this.match(CPP14Parser.Identifier);
            this.state = 1545;
            this.match(CPP14Parser.Semi);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeclarationstatementContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declarationstatement;
    return this;
}

DeclarationstatementContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclarationstatementContext.prototype.constructor = DeclarationstatementContext;

DeclarationstatementContext.prototype.blockdeclaration = function() {
    return this.getTypedRuleContext(BlockdeclarationContext,0);
};

DeclarationstatementContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclarationstatement(this);
	}
};

DeclarationstatementContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclarationstatement(this);
	}
};




CPP14Parser.DeclarationstatementContext = DeclarationstatementContext;

CPP14Parser.prototype.declarationstatement = function() {

    var localctx = new DeclarationstatementContext(this, this._ctx, this.state);
    this.enterRule(localctx, 114, CPP14Parser.RULE_declarationstatement);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1548;
        this.blockdeclaration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeclarationseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declarationseq;
    return this;
}

DeclarationseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclarationseqContext.prototype.constructor = DeclarationseqContext;

DeclarationseqContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

DeclarationseqContext.prototype.declarationseq = function() {
    return this.getTypedRuleContext(DeclarationseqContext,0);
};

DeclarationseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclarationseq(this);
	}
};

DeclarationseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclarationseq(this);
	}
};



CPP14Parser.prototype.declarationseq = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new DeclarationseqContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 116;
    this.enterRecursionRule(localctx, 116, CPP14Parser.RULE_declarationseq, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1551;
        this.declaration();
        this._ctx.stop = this._input.LT(-1);
        this.state = 1557;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,100,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new DeclarationseqContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_declarationseq);
                this.state = 1553;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1554;
                this.declaration(); 
            }
            this.state = 1559;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,100,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function DeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declaration;
    return this;
}

DeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclarationContext.prototype.constructor = DeclarationContext;

DeclarationContext.prototype.blockdeclaration = function() {
    return this.getTypedRuleContext(BlockdeclarationContext,0);
};

DeclarationContext.prototype.functiondefinition = function() {
    return this.getTypedRuleContext(FunctiondefinitionContext,0);
};

DeclarationContext.prototype.templatedeclaration = function() {
    return this.getTypedRuleContext(TemplatedeclarationContext,0);
};

DeclarationContext.prototype.explicitinstantiation = function() {
    return this.getTypedRuleContext(ExplicitinstantiationContext,0);
};

DeclarationContext.prototype.explicitspecialization = function() {
    return this.getTypedRuleContext(ExplicitspecializationContext,0);
};

DeclarationContext.prototype.linkagespecification = function() {
    return this.getTypedRuleContext(LinkagespecificationContext,0);
};

DeclarationContext.prototype.namespacedefinition = function() {
    return this.getTypedRuleContext(NamespacedefinitionContext,0);
};

DeclarationContext.prototype.emptydeclaration = function() {
    return this.getTypedRuleContext(EmptydeclarationContext,0);
};

DeclarationContext.prototype.attributedeclaration = function() {
    return this.getTypedRuleContext(AttributedeclarationContext,0);
};

DeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclaration(this);
	}
};

DeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclaration(this);
	}
};




CPP14Parser.DeclarationContext = DeclarationContext;

CPP14Parser.prototype.declaration = function() {

    var localctx = new DeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 118, CPP14Parser.RULE_declaration);
    try {
        this.state = 1569;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,101,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1560;
            this.blockdeclaration();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1561;
            this.functiondefinition();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1562;
            this.templatedeclaration();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1563;
            this.explicitinstantiation();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1564;
            this.explicitspecialization();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1565;
            this.linkagespecification();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1566;
            this.namespacedefinition();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1567;
            this.emptydeclaration();
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 1568;
            this.attributedeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BlockdeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_blockdeclaration;
    return this;
}

BlockdeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BlockdeclarationContext.prototype.constructor = BlockdeclarationContext;

BlockdeclarationContext.prototype.simpledeclaration = function() {
    return this.getTypedRuleContext(SimpledeclarationContext,0);
};

BlockdeclarationContext.prototype.asmdefinition = function() {
    return this.getTypedRuleContext(AsmdefinitionContext,0);
};

BlockdeclarationContext.prototype.namespacealiasdefinition = function() {
    return this.getTypedRuleContext(NamespacealiasdefinitionContext,0);
};

BlockdeclarationContext.prototype.usingdeclaration = function() {
    return this.getTypedRuleContext(UsingdeclarationContext,0);
};

BlockdeclarationContext.prototype.usingdirective = function() {
    return this.getTypedRuleContext(UsingdirectiveContext,0);
};

BlockdeclarationContext.prototype.static_assertdeclaration = function() {
    return this.getTypedRuleContext(Static_assertdeclarationContext,0);
};

BlockdeclarationContext.prototype.aliasdeclaration = function() {
    return this.getTypedRuleContext(AliasdeclarationContext,0);
};

BlockdeclarationContext.prototype.opaqueenumdeclaration = function() {
    return this.getTypedRuleContext(OpaqueenumdeclarationContext,0);
};

BlockdeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBlockdeclaration(this);
	}
};

BlockdeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBlockdeclaration(this);
	}
};




CPP14Parser.BlockdeclarationContext = BlockdeclarationContext;

CPP14Parser.prototype.blockdeclaration = function() {

    var localctx = new BlockdeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 120, CPP14Parser.RULE_blockdeclaration);
    try {
        this.state = 1579;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,102,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1571;
            this.simpledeclaration();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1572;
            this.asmdefinition();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1573;
            this.namespacealiasdefinition();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1574;
            this.usingdeclaration();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1575;
            this.usingdirective();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1576;
            this.static_assertdeclaration();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1577;
            this.aliasdeclaration();
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1578;
            this.opaqueenumdeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AliasdeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_aliasdeclaration;
    return this;
}

AliasdeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AliasdeclarationContext.prototype.constructor = AliasdeclarationContext;

AliasdeclarationContext.prototype.Using = function() {
    return this.getToken(CPP14Parser.Using, 0);
};

AliasdeclarationContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

AliasdeclarationContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

AliasdeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

AliasdeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAliasdeclaration(this);
	}
};

AliasdeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAliasdeclaration(this);
	}
};




CPP14Parser.AliasdeclarationContext = AliasdeclarationContext;

CPP14Parser.prototype.aliasdeclaration = function() {

    var localctx = new AliasdeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 122, CPP14Parser.RULE_aliasdeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1581;
        this.match(CPP14Parser.Using);
        this.state = 1582;
        this.match(CPP14Parser.Identifier);
        this.state = 1584;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 1583;
            this.attributespecifierseq(0);
        }

        this.state = 1586;
        this.match(CPP14Parser.Assign);
        this.state = 1587;
        this.typeid();
        this.state = 1588;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SimpledeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simpledeclaration;
    return this;
}

SimpledeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SimpledeclarationContext.prototype.constructor = SimpledeclarationContext;

SimpledeclarationContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

SimpledeclarationContext.prototype.initdeclaratorlist = function() {
    return this.getTypedRuleContext(InitdeclaratorlistContext,0);
};

SimpledeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

SimpledeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimpledeclaration(this);
	}
};

SimpledeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimpledeclaration(this);
	}
};




CPP14Parser.SimpledeclarationContext = SimpledeclarationContext;

CPP14Parser.prototype.simpledeclaration = function() {

    var localctx = new SimpledeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 124, CPP14Parser.RULE_simpledeclaration);
    var _la = 0; // Token type
    try {
        this.state = 1604;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Class:
        case CPP14Parser.Const:
        case CPP14Parser.Constexpr:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Enum:
        case CPP14Parser.Explicit:
        case CPP14Parser.Extern:
        case CPP14Parser.Float:
        case CPP14Parser.Friend:
        case CPP14Parser.Inline:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Mutable:
        case CPP14Parser.Operator:
        case CPP14Parser.Register:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Static:
        case CPP14Parser.Struct:
        case CPP14Parser.Thread_local:
        case CPP14Parser.Typedef:
        case CPP14Parser.Typename:
        case CPP14Parser.Union:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Virtual:
        case CPP14Parser.Void:
        case CPP14Parser.Volatile:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Tilde:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Semi:
        case CPP14Parser.Ellipsis:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 1591;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,104,this._ctx);
            if(la_===1) {
                this.state = 1590;
                this.declspecifierseq();

            }
            this.state = 1594;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || _la===CPP14Parser.Operator || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)) | (1 << (CPP14Parser.Tilde - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 1593;
                this.initdeclaratorlist(0);
            }

            this.state = 1596;
            this.match(CPP14Parser.Semi);
            break;
        case CPP14Parser.Alignas:
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 2);
            this.state = 1597;
            this.attributespecifierseq(0);
            this.state = 1599;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,106,this._ctx);
            if(la_===1) {
                this.state = 1598;
                this.declspecifierseq();

            }
            this.state = 1601;
            this.initdeclaratorlist(0);
            this.state = 1602;
            this.match(CPP14Parser.Semi);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Static_assertdeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_static_assertdeclaration;
    return this;
}

Static_assertdeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Static_assertdeclarationContext.prototype.constructor = Static_assertdeclarationContext;

Static_assertdeclarationContext.prototype.Static_assert = function() {
    return this.getToken(CPP14Parser.Static_assert, 0);
};

Static_assertdeclarationContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Static_assertdeclarationContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

Static_assertdeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStatic_assertdeclaration(this);
	}
};

Static_assertdeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStatic_assertdeclaration(this);
	}
};




CPP14Parser.Static_assertdeclarationContext = Static_assertdeclarationContext;

CPP14Parser.prototype.static_assertdeclaration = function() {

    var localctx = new Static_assertdeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 126, CPP14Parser.RULE_static_assertdeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1606;
        this.match(CPP14Parser.Static_assert);
        this.state = 1607;
        this.match(CPP14Parser.LeftParen);
        this.state = 1608;
        this.constantexpression();
        this.state = 1609;
        this.match(CPP14Parser.Comma);
        this.state = 1610;
        this.match(CPP14Parser.Stringliteral);
        this.state = 1611;
        this.match(CPP14Parser.RightParen);
        this.state = 1612;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EmptydeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_emptydeclaration;
    return this;
}

EmptydeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EmptydeclarationContext.prototype.constructor = EmptydeclarationContext;


EmptydeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEmptydeclaration(this);
	}
};

EmptydeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEmptydeclaration(this);
	}
};




CPP14Parser.EmptydeclarationContext = EmptydeclarationContext;

CPP14Parser.prototype.emptydeclaration = function() {

    var localctx = new EmptydeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 128, CPP14Parser.RULE_emptydeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1614;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributedeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributedeclaration;
    return this;
}

AttributedeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributedeclarationContext.prototype.constructor = AttributedeclarationContext;

AttributedeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

AttributedeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributedeclaration(this);
	}
};

AttributedeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributedeclaration(this);
	}
};




CPP14Parser.AttributedeclarationContext = AttributedeclarationContext;

CPP14Parser.prototype.attributedeclaration = function() {

    var localctx = new AttributedeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 130, CPP14Parser.RULE_attributedeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1616;
        this.attributespecifierseq(0);
        this.state = 1617;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeclspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declspecifier;
    return this;
}

DeclspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclspecifierContext.prototype.constructor = DeclspecifierContext;

DeclspecifierContext.prototype.storageclassspecifier = function() {
    return this.getTypedRuleContext(StorageclassspecifierContext,0);
};

DeclspecifierContext.prototype.typespecifier = function() {
    return this.getTypedRuleContext(TypespecifierContext,0);
};

DeclspecifierContext.prototype.functionspecifier = function() {
    return this.getTypedRuleContext(FunctionspecifierContext,0);
};

DeclspecifierContext.prototype.Friend = function() {
    return this.getToken(CPP14Parser.Friend, 0);
};

DeclspecifierContext.prototype.Typedef = function() {
    return this.getToken(CPP14Parser.Typedef, 0);
};

DeclspecifierContext.prototype.Constexpr = function() {
    return this.getToken(CPP14Parser.Constexpr, 0);
};

DeclspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclspecifier(this);
	}
};

DeclspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclspecifier(this);
	}
};




CPP14Parser.DeclspecifierContext = DeclspecifierContext;

CPP14Parser.prototype.declspecifier = function() {

    var localctx = new DeclspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 132, CPP14Parser.RULE_declspecifier);
    try {
        this.state = 1625;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Extern:
        case CPP14Parser.Mutable:
        case CPP14Parser.Register:
        case CPP14Parser.Static:
        case CPP14Parser.Thread_local:
            this.enterOuterAlt(localctx, 1);
            this.state = 1619;
            this.storageclassspecifier();
            break;
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Class:
        case CPP14Parser.Const:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Enum:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Struct:
        case CPP14Parser.Typename:
        case CPP14Parser.Union:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Volatile:
        case CPP14Parser.Wchar:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 1620;
            this.typespecifier();
            break;
        case CPP14Parser.Explicit:
        case CPP14Parser.Inline:
        case CPP14Parser.Virtual:
            this.enterOuterAlt(localctx, 3);
            this.state = 1621;
            this.functionspecifier();
            break;
        case CPP14Parser.Friend:
            this.enterOuterAlt(localctx, 4);
            this.state = 1622;
            this.match(CPP14Parser.Friend);
            break;
        case CPP14Parser.Typedef:
            this.enterOuterAlt(localctx, 5);
            this.state = 1623;
            this.match(CPP14Parser.Typedef);
            break;
        case CPP14Parser.Constexpr:
            this.enterOuterAlt(localctx, 6);
            this.state = 1624;
            this.match(CPP14Parser.Constexpr);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeclspecifierseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declspecifierseq;
    return this;
}

DeclspecifierseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclspecifierseqContext.prototype.constructor = DeclspecifierseqContext;

DeclspecifierseqContext.prototype.declspecifier = function() {
    return this.getTypedRuleContext(DeclspecifierContext,0);
};

DeclspecifierseqContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

DeclspecifierseqContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

DeclspecifierseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclspecifierseq(this);
	}
};

DeclspecifierseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclspecifierseq(this);
	}
};




CPP14Parser.DeclspecifierseqContext = DeclspecifierseqContext;

CPP14Parser.prototype.declspecifierseq = function() {

    var localctx = new DeclspecifierseqContext(this, this._ctx, this.state);
    this.enterRule(localctx, 134, CPP14Parser.RULE_declspecifierseq);
    try {
        this.state = 1634;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,110,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1627;
            this.declspecifier();
            this.state = 1629;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,109,this._ctx);
            if(la_===1) {
                this.state = 1628;
                this.attributespecifierseq(0);

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1631;
            this.declspecifier();
            this.state = 1632;
            this.declspecifierseq();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function StorageclassspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_storageclassspecifier;
    return this;
}

StorageclassspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StorageclassspecifierContext.prototype.constructor = StorageclassspecifierContext;

StorageclassspecifierContext.prototype.Register = function() {
    return this.getToken(CPP14Parser.Register, 0);
};

StorageclassspecifierContext.prototype.Static = function() {
    return this.getToken(CPP14Parser.Static, 0);
};

StorageclassspecifierContext.prototype.Thread_local = function() {
    return this.getToken(CPP14Parser.Thread_local, 0);
};

StorageclassspecifierContext.prototype.Extern = function() {
    return this.getToken(CPP14Parser.Extern, 0);
};

StorageclassspecifierContext.prototype.Mutable = function() {
    return this.getToken(CPP14Parser.Mutable, 0);
};

StorageclassspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStorageclassspecifier(this);
	}
};

StorageclassspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStorageclassspecifier(this);
	}
};




CPP14Parser.StorageclassspecifierContext = StorageclassspecifierContext;

CPP14Parser.prototype.storageclassspecifier = function() {

    var localctx = new StorageclassspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 136, CPP14Parser.RULE_storageclassspecifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1636;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.Extern || ((((_la - 40)) & ~0x1f) == 0 && ((1 << (_la - 40)) & ((1 << (CPP14Parser.Mutable - 40)) | (1 << (CPP14Parser.Register - 40)) | (1 << (CPP14Parser.Static - 40)) | (1 << (CPP14Parser.Thread_local - 40)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FunctionspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functionspecifier;
    return this;
}

FunctionspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunctionspecifierContext.prototype.constructor = FunctionspecifierContext;

FunctionspecifierContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

FunctionspecifierContext.prototype.Virtual = function() {
    return this.getToken(CPP14Parser.Virtual, 0);
};

FunctionspecifierContext.prototype.Explicit = function() {
    return this.getToken(CPP14Parser.Explicit, 0);
};

FunctionspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctionspecifier(this);
	}
};

FunctionspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctionspecifier(this);
	}
};




CPP14Parser.FunctionspecifierContext = FunctionspecifierContext;

CPP14Parser.prototype.functionspecifier = function() {

    var localctx = new FunctionspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 138, CPP14Parser.RULE_functionspecifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1638;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.Explicit || _la===CPP14Parser.Inline || _la===CPP14Parser.Virtual)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypedefnameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typedefname;
    return this;
}

TypedefnameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypedefnameContext.prototype.constructor = TypedefnameContext;

TypedefnameContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

TypedefnameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypedefname(this);
	}
};

TypedefnameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypedefname(this);
	}
};




CPP14Parser.TypedefnameContext = TypedefnameContext;

CPP14Parser.prototype.typedefname = function() {

    var localctx = new TypedefnameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 140, CPP14Parser.RULE_typedefname);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1640;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typespecifier;
    return this;
}

TypespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypespecifierContext.prototype.constructor = TypespecifierContext;

TypespecifierContext.prototype.trailingtypespecifier = function() {
    return this.getTypedRuleContext(TrailingtypespecifierContext,0);
};

TypespecifierContext.prototype.classspecifier = function() {
    return this.getTypedRuleContext(ClassspecifierContext,0);
};

TypespecifierContext.prototype.enumspecifier = function() {
    return this.getTypedRuleContext(EnumspecifierContext,0);
};

TypespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypespecifier(this);
	}
};

TypespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypespecifier(this);
	}
};




CPP14Parser.TypespecifierContext = TypespecifierContext;

CPP14Parser.prototype.typespecifier = function() {

    var localctx = new TypespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 142, CPP14Parser.RULE_typespecifier);
    try {
        this.state = 1645;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,111,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1642;
            this.trailingtypespecifier();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1643;
            this.classspecifier();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1644;
            this.enumspecifier();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TrailingtypespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_trailingtypespecifier;
    return this;
}

TrailingtypespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TrailingtypespecifierContext.prototype.constructor = TrailingtypespecifierContext;

TrailingtypespecifierContext.prototype.simpletypespecifier = function() {
    return this.getTypedRuleContext(SimpletypespecifierContext,0);
};

TrailingtypespecifierContext.prototype.elaboratedtypespecifier = function() {
    return this.getTypedRuleContext(ElaboratedtypespecifierContext,0);
};

TrailingtypespecifierContext.prototype.typenamespecifier = function() {
    return this.getTypedRuleContext(TypenamespecifierContext,0);
};

TrailingtypespecifierContext.prototype.cvqualifier = function() {
    return this.getTypedRuleContext(CvqualifierContext,0);
};

TrailingtypespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTrailingtypespecifier(this);
	}
};

TrailingtypespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTrailingtypespecifier(this);
	}
};




CPP14Parser.TrailingtypespecifierContext = TrailingtypespecifierContext;

CPP14Parser.prototype.trailingtypespecifier = function() {

    var localctx = new TrailingtypespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 144, CPP14Parser.RULE_trailingtypespecifier);
    try {
        this.state = 1651;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Wchar:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 1647;
            this.simpletypespecifier();
            break;
        case CPP14Parser.Class:
        case CPP14Parser.Enum:
        case CPP14Parser.Struct:
        case CPP14Parser.Union:
            this.enterOuterAlt(localctx, 2);
            this.state = 1648;
            this.elaboratedtypespecifier();
            break;
        case CPP14Parser.Typename:
            this.enterOuterAlt(localctx, 3);
            this.state = 1649;
            this.typenamespecifier();
            break;
        case CPP14Parser.Const:
        case CPP14Parser.Volatile:
            this.enterOuterAlt(localctx, 4);
            this.state = 1650;
            this.cvqualifier();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypespecifierseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typespecifierseq;
    return this;
}

TypespecifierseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypespecifierseqContext.prototype.constructor = TypespecifierseqContext;

TypespecifierseqContext.prototype.typespecifier = function() {
    return this.getTypedRuleContext(TypespecifierContext,0);
};

TypespecifierseqContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

TypespecifierseqContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

TypespecifierseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypespecifierseq(this);
	}
};

TypespecifierseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypespecifierseq(this);
	}
};




CPP14Parser.TypespecifierseqContext = TypespecifierseqContext;

CPP14Parser.prototype.typespecifierseq = function() {

    var localctx = new TypespecifierseqContext(this, this._ctx, this.state);
    this.enterRule(localctx, 146, CPP14Parser.RULE_typespecifierseq);
    try {
        this.state = 1660;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,114,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1653;
            this.typespecifier();
            this.state = 1655;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,113,this._ctx);
            if(la_===1) {
                this.state = 1654;
                this.attributespecifierseq(0);

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1657;
            this.typespecifier();
            this.state = 1658;
            this.typespecifierseq();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TrailingtypespecifierseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_trailingtypespecifierseq;
    return this;
}

TrailingtypespecifierseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TrailingtypespecifierseqContext.prototype.constructor = TrailingtypespecifierseqContext;

TrailingtypespecifierseqContext.prototype.trailingtypespecifier = function() {
    return this.getTypedRuleContext(TrailingtypespecifierContext,0);
};

TrailingtypespecifierseqContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

TrailingtypespecifierseqContext.prototype.trailingtypespecifierseq = function() {
    return this.getTypedRuleContext(TrailingtypespecifierseqContext,0);
};

TrailingtypespecifierseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTrailingtypespecifierseq(this);
	}
};

TrailingtypespecifierseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTrailingtypespecifierseq(this);
	}
};




CPP14Parser.TrailingtypespecifierseqContext = TrailingtypespecifierseqContext;

CPP14Parser.prototype.trailingtypespecifierseq = function() {

    var localctx = new TrailingtypespecifierseqContext(this, this._ctx, this.state);
    this.enterRule(localctx, 148, CPP14Parser.RULE_trailingtypespecifierseq);
    try {
        this.state = 1669;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,116,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1662;
            this.trailingtypespecifier();
            this.state = 1664;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,115,this._ctx);
            if(la_===1) {
                this.state = 1663;
                this.attributespecifierseq(0);

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1666;
            this.trailingtypespecifier();
            this.state = 1667;
            this.trailingtypespecifierseq();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SimpletypespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simpletypespecifier;
    return this;
}

SimpletypespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SimpletypespecifierContext.prototype.constructor = SimpletypespecifierContext;

SimpletypespecifierContext.prototype.typename = function() {
    return this.getTypedRuleContext(TypenameContext,0);
};

SimpletypespecifierContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

SimpletypespecifierContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

SimpletypespecifierContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

SimpletypespecifierContext.prototype.Char = function() {
    return this.getToken(CPP14Parser.Char, 0);
};

SimpletypespecifierContext.prototype.Char16 = function() {
    return this.getToken(CPP14Parser.Char16, 0);
};

SimpletypespecifierContext.prototype.Char32 = function() {
    return this.getToken(CPP14Parser.Char32, 0);
};

SimpletypespecifierContext.prototype.Wchar = function() {
    return this.getToken(CPP14Parser.Wchar, 0);
};

SimpletypespecifierContext.prototype.Bool = function() {
    return this.getToken(CPP14Parser.Bool, 0);
};

SimpletypespecifierContext.prototype.Short = function() {
    return this.getToken(CPP14Parser.Short, 0);
};

SimpletypespecifierContext.prototype.Int = function() {
    return this.getToken(CPP14Parser.Int, 0);
};

SimpletypespecifierContext.prototype.Long = function() {
    return this.getToken(CPP14Parser.Long, 0);
};

SimpletypespecifierContext.prototype.Signed = function() {
    return this.getToken(CPP14Parser.Signed, 0);
};

SimpletypespecifierContext.prototype.Unsigned = function() {
    return this.getToken(CPP14Parser.Unsigned, 0);
};

SimpletypespecifierContext.prototype.Float = function() {
    return this.getToken(CPP14Parser.Float, 0);
};

SimpletypespecifierContext.prototype.Double = function() {
    return this.getToken(CPP14Parser.Double, 0);
};

SimpletypespecifierContext.prototype.Void = function() {
    return this.getToken(CPP14Parser.Void, 0);
};

SimpletypespecifierContext.prototype.Auto = function() {
    return this.getToken(CPP14Parser.Auto, 0);
};

SimpletypespecifierContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

SimpletypespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimpletypespecifier(this);
	}
};

SimpletypespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimpletypespecifier(this);
	}
};




CPP14Parser.SimpletypespecifierContext = SimpletypespecifierContext;

CPP14Parser.prototype.simpletypespecifier = function() {

    var localctx = new SimpletypespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 150, CPP14Parser.RULE_simpletypespecifier);
    try {
        this.state = 1694;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,118,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1672;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,117,this._ctx);
            if(la_===1) {
                this.state = 1671;
                this.nestednamespecifier(0);

            }
            this.state = 1674;
            this.typename();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1675;
            this.nestednamespecifier(0);
            this.state = 1676;
            this.match(CPP14Parser.Template);
            this.state = 1677;
            this.simpletemplateid();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1679;
            this.match(CPP14Parser.Char);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1680;
            this.match(CPP14Parser.Char16);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 1681;
            this.match(CPP14Parser.Char32);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 1682;
            this.match(CPP14Parser.Wchar);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 1683;
            this.match(CPP14Parser.Bool);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 1684;
            this.match(CPP14Parser.Short);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 1685;
            this.match(CPP14Parser.Int);
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 1686;
            this.match(CPP14Parser.Long);
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 1687;
            this.match(CPP14Parser.Signed);
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 1688;
            this.match(CPP14Parser.Unsigned);
            break;

        case 13:
            this.enterOuterAlt(localctx, 13);
            this.state = 1689;
            this.match(CPP14Parser.Float);
            break;

        case 14:
            this.enterOuterAlt(localctx, 14);
            this.state = 1690;
            this.match(CPP14Parser.Double);
            break;

        case 15:
            this.enterOuterAlt(localctx, 15);
            this.state = 1691;
            this.match(CPP14Parser.Void);
            break;

        case 16:
            this.enterOuterAlt(localctx, 16);
            this.state = 1692;
            this.match(CPP14Parser.Auto);
            break;

        case 17:
            this.enterOuterAlt(localctx, 17);
            this.state = 1693;
            this.decltypespecifier();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypenameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typename;
    return this;
}

TypenameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypenameContext.prototype.constructor = TypenameContext;

TypenameContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

TypenameContext.prototype.enumname = function() {
    return this.getTypedRuleContext(EnumnameContext,0);
};

TypenameContext.prototype.typedefname = function() {
    return this.getTypedRuleContext(TypedefnameContext,0);
};

TypenameContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

TypenameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypename(this);
	}
};

TypenameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypename(this);
	}
};




CPP14Parser.TypenameContext = TypenameContext;

CPP14Parser.prototype.typename = function() {

    var localctx = new TypenameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 152, CPP14Parser.RULE_typename);
    try {
        this.state = 1700;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,119,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1696;
            this.classname();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1697;
            this.enumname();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1698;
            this.typedefname();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1699;
            this.simpletemplateid();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DecltypespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_decltypespecifier;
    return this;
}

DecltypespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DecltypespecifierContext.prototype.constructor = DecltypespecifierContext;

DecltypespecifierContext.prototype.Decltype = function() {
    return this.getToken(CPP14Parser.Decltype, 0);
};

DecltypespecifierContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

DecltypespecifierContext.prototype.Auto = function() {
    return this.getToken(CPP14Parser.Auto, 0);
};

DecltypespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDecltypespecifier(this);
	}
};

DecltypespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDecltypespecifier(this);
	}
};




CPP14Parser.DecltypespecifierContext = DecltypespecifierContext;

CPP14Parser.prototype.decltypespecifier = function() {

    var localctx = new DecltypespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 154, CPP14Parser.RULE_decltypespecifier);
    try {
        this.state = 1711;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,120,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1702;
            this.match(CPP14Parser.Decltype);
            this.state = 1703;
            this.match(CPP14Parser.LeftParen);
            this.state = 1704;
            this.expression(0);
            this.state = 1705;
            this.match(CPP14Parser.RightParen);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1707;
            this.match(CPP14Parser.Decltype);
            this.state = 1708;
            this.match(CPP14Parser.LeftParen);
            this.state = 1709;
            this.match(CPP14Parser.Auto);
            this.state = 1710;
            this.match(CPP14Parser.RightParen);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ElaboratedtypespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_elaboratedtypespecifier;
    return this;
}

ElaboratedtypespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ElaboratedtypespecifierContext.prototype.constructor = ElaboratedtypespecifierContext;

ElaboratedtypespecifierContext.prototype.classkey = function() {
    return this.getTypedRuleContext(ClasskeyContext,0);
};

ElaboratedtypespecifierContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

ElaboratedtypespecifierContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

ElaboratedtypespecifierContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

ElaboratedtypespecifierContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

ElaboratedtypespecifierContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

ElaboratedtypespecifierContext.prototype.Enum = function() {
    return this.getToken(CPP14Parser.Enum, 0);
};

ElaboratedtypespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterElaboratedtypespecifier(this);
	}
};

ElaboratedtypespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitElaboratedtypespecifier(this);
	}
};




CPP14Parser.ElaboratedtypespecifierContext = ElaboratedtypespecifierContext;

CPP14Parser.prototype.elaboratedtypespecifier = function() {

    var localctx = new ElaboratedtypespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 156, CPP14Parser.RULE_elaboratedtypespecifier);
    var _la = 0; // Token type
    try {
        this.state = 1737;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,125,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1713;
            this.classkey();
            this.state = 1715;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1714;
                this.attributespecifierseq(0);
            }

            this.state = 1718;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,122,this._ctx);
            if(la_===1) {
                this.state = 1717;
                this.nestednamespecifier(0);

            }
            this.state = 1720;
            this.match(CPP14Parser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1722;
            this.classkey();
            this.state = 1723;
            this.simpletemplateid();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1725;
            this.classkey();
            this.state = 1726;
            this.nestednamespecifier(0);
            this.state = 1728;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Template) {
                this.state = 1727;
                this.match(CPP14Parser.Template);
            }

            this.state = 1730;
            this.simpletemplateid();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 1732;
            this.match(CPP14Parser.Enum);
            this.state = 1734;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,124,this._ctx);
            if(la_===1) {
                this.state = 1733;
                this.nestednamespecifier(0);

            }
            this.state = 1736;
            this.match(CPP14Parser.Identifier);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumnameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumname;
    return this;
}

EnumnameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumnameContext.prototype.constructor = EnumnameContext;

EnumnameContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

EnumnameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumname(this);
	}
};

EnumnameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumname(this);
	}
};




CPP14Parser.EnumnameContext = EnumnameContext;

CPP14Parser.prototype.enumname = function() {

    var localctx = new EnumnameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 158, CPP14Parser.RULE_enumname);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1739;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumspecifier;
    return this;
}

EnumspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumspecifierContext.prototype.constructor = EnumspecifierContext;

EnumspecifierContext.prototype.enumhead = function() {
    return this.getTypedRuleContext(EnumheadContext,0);
};

EnumspecifierContext.prototype.enumeratorlist = function() {
    return this.getTypedRuleContext(EnumeratorlistContext,0);
};

EnumspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumspecifier(this);
	}
};

EnumspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumspecifier(this);
	}
};




CPP14Parser.EnumspecifierContext = EnumspecifierContext;

CPP14Parser.prototype.enumspecifier = function() {

    var localctx = new EnumspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 160, CPP14Parser.RULE_enumspecifier);
    var _la = 0; // Token type
    try {
        this.state = 1754;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,127,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1741;
            this.enumhead();
            this.state = 1742;
            this.match(CPP14Parser.LeftBrace);
            this.state = 1744;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 1743;
                this.enumeratorlist(0);
            }

            this.state = 1746;
            this.match(CPP14Parser.RightBrace);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1748;
            this.enumhead();
            this.state = 1749;
            this.match(CPP14Parser.LeftBrace);
            this.state = 1750;
            this.enumeratorlist(0);
            this.state = 1751;
            this.match(CPP14Parser.Comma);
            this.state = 1752;
            this.match(CPP14Parser.RightBrace);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumheadContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumhead;
    return this;
}

EnumheadContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumheadContext.prototype.constructor = EnumheadContext;

EnumheadContext.prototype.enumkey = function() {
    return this.getTypedRuleContext(EnumkeyContext,0);
};

EnumheadContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

EnumheadContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

EnumheadContext.prototype.enumbase = function() {
    return this.getTypedRuleContext(EnumbaseContext,0);
};

EnumheadContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

EnumheadContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumhead(this);
	}
};

EnumheadContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumhead(this);
	}
};




CPP14Parser.EnumheadContext = EnumheadContext;

CPP14Parser.prototype.enumhead = function() {

    var localctx = new EnumheadContext(this, this._ctx, this.state);
    this.enterRule(localctx, 162, CPP14Parser.RULE_enumhead);
    var _la = 0; // Token type
    try {
        this.state = 1775;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,133,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1756;
            this.enumkey();
            this.state = 1758;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1757;
                this.attributespecifierseq(0);
            }

            this.state = 1761;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 1760;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 1764;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 1763;
                this.enumbase();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1766;
            this.enumkey();
            this.state = 1768;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 1767;
                this.attributespecifierseq(0);
            }

            this.state = 1770;
            this.nestednamespecifier(0);
            this.state = 1771;
            this.match(CPP14Parser.Identifier);
            this.state = 1773;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 1772;
                this.enumbase();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OpaqueenumdeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_opaqueenumdeclaration;
    return this;
}

OpaqueenumdeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OpaqueenumdeclarationContext.prototype.constructor = OpaqueenumdeclarationContext;

OpaqueenumdeclarationContext.prototype.enumkey = function() {
    return this.getTypedRuleContext(EnumkeyContext,0);
};

OpaqueenumdeclarationContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

OpaqueenumdeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

OpaqueenumdeclarationContext.prototype.enumbase = function() {
    return this.getTypedRuleContext(EnumbaseContext,0);
};

OpaqueenumdeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOpaqueenumdeclaration(this);
	}
};

OpaqueenumdeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOpaqueenumdeclaration(this);
	}
};




CPP14Parser.OpaqueenumdeclarationContext = OpaqueenumdeclarationContext;

CPP14Parser.prototype.opaqueenumdeclaration = function() {

    var localctx = new OpaqueenumdeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 164, CPP14Parser.RULE_opaqueenumdeclaration);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1777;
        this.enumkey();
        this.state = 1779;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 1778;
            this.attributespecifierseq(0);
        }

        this.state = 1781;
        this.match(CPP14Parser.Identifier);
        this.state = 1783;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Colon) {
            this.state = 1782;
            this.enumbase();
        }

        this.state = 1785;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumkeyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumkey;
    return this;
}

EnumkeyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumkeyContext.prototype.constructor = EnumkeyContext;

EnumkeyContext.prototype.Enum = function() {
    return this.getToken(CPP14Parser.Enum, 0);
};

EnumkeyContext.prototype.Class = function() {
    return this.getToken(CPP14Parser.Class, 0);
};

EnumkeyContext.prototype.Struct = function() {
    return this.getToken(CPP14Parser.Struct, 0);
};

EnumkeyContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumkey(this);
	}
};

EnumkeyContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumkey(this);
	}
};




CPP14Parser.EnumkeyContext = EnumkeyContext;

CPP14Parser.prototype.enumkey = function() {

    var localctx = new EnumkeyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 166, CPP14Parser.RULE_enumkey);
    try {
        this.state = 1792;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,136,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1787;
            this.match(CPP14Parser.Enum);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1788;
            this.match(CPP14Parser.Enum);
            this.state = 1789;
            this.match(CPP14Parser.Class);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 1790;
            this.match(CPP14Parser.Enum);
            this.state = 1791;
            this.match(CPP14Parser.Struct);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumbaseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumbase;
    return this;
}

EnumbaseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumbaseContext.prototype.constructor = EnumbaseContext;

EnumbaseContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

EnumbaseContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumbase(this);
	}
};

EnumbaseContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumbase(this);
	}
};




CPP14Parser.EnumbaseContext = EnumbaseContext;

CPP14Parser.prototype.enumbase = function() {

    var localctx = new EnumbaseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 168, CPP14Parser.RULE_enumbase);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1794;
        this.match(CPP14Parser.Colon);
        this.state = 1795;
        this.typespecifierseq();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumeratorlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumeratorlist;
    return this;
}

EnumeratorlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumeratorlistContext.prototype.constructor = EnumeratorlistContext;

EnumeratorlistContext.prototype.enumeratordefinition = function() {
    return this.getTypedRuleContext(EnumeratordefinitionContext,0);
};

EnumeratorlistContext.prototype.enumeratorlist = function() {
    return this.getTypedRuleContext(EnumeratorlistContext,0);
};

EnumeratorlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumeratorlist(this);
	}
};

EnumeratorlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumeratorlist(this);
	}
};



CPP14Parser.prototype.enumeratorlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new EnumeratorlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 170;
    this.enterRecursionRule(localctx, 170, CPP14Parser.RULE_enumeratorlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1798;
        this.enumeratordefinition();
        this._ctx.stop = this._input.LT(-1);
        this.state = 1805;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,137,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new EnumeratorlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_enumeratorlist);
                this.state = 1800;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1801;
                this.match(CPP14Parser.Comma);
                this.state = 1802;
                this.enumeratordefinition(); 
            }
            this.state = 1807;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,137,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function EnumeratordefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumeratordefinition;
    return this;
}

EnumeratordefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumeratordefinitionContext.prototype.constructor = EnumeratordefinitionContext;

EnumeratordefinitionContext.prototype.enumerator = function() {
    return this.getTypedRuleContext(EnumeratorContext,0);
};

EnumeratordefinitionContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

EnumeratordefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumeratordefinition(this);
	}
};

EnumeratordefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumeratordefinition(this);
	}
};




CPP14Parser.EnumeratordefinitionContext = EnumeratordefinitionContext;

CPP14Parser.prototype.enumeratordefinition = function() {

    var localctx = new EnumeratordefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 172, CPP14Parser.RULE_enumeratordefinition);
    try {
        this.state = 1813;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,138,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1808;
            this.enumerator();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1809;
            this.enumerator();
            this.state = 1810;
            this.match(CPP14Parser.Assign);
            this.state = 1811;
            this.constantexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function EnumeratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumerator;
    return this;
}

EnumeratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumeratorContext.prototype.constructor = EnumeratorContext;

EnumeratorContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

EnumeratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumerator(this);
	}
};

EnumeratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumerator(this);
	}
};




CPP14Parser.EnumeratorContext = EnumeratorContext;

CPP14Parser.prototype.enumerator = function() {

    var localctx = new EnumeratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 174, CPP14Parser.RULE_enumerator);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1815;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NamespacenameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacename;
    return this;
}

NamespacenameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NamespacenameContext.prototype.constructor = NamespacenameContext;

NamespacenameContext.prototype.originalnamespacename = function() {
    return this.getTypedRuleContext(OriginalnamespacenameContext,0);
};

NamespacenameContext.prototype.namespacealias = function() {
    return this.getTypedRuleContext(NamespacealiasContext,0);
};

NamespacenameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacename(this);
	}
};

NamespacenameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacename(this);
	}
};




CPP14Parser.NamespacenameContext = NamespacenameContext;

CPP14Parser.prototype.namespacename = function() {

    var localctx = new NamespacenameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 176, CPP14Parser.RULE_namespacename);
    try {
        this.state = 1819;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,139,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1817;
            this.originalnamespacename();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1818;
            this.namespacealias();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OriginalnamespacenameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_originalnamespacename;
    return this;
}

OriginalnamespacenameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OriginalnamespacenameContext.prototype.constructor = OriginalnamespacenameContext;

OriginalnamespacenameContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

OriginalnamespacenameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOriginalnamespacename(this);
	}
};

OriginalnamespacenameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOriginalnamespacename(this);
	}
};




CPP14Parser.OriginalnamespacenameContext = OriginalnamespacenameContext;

CPP14Parser.prototype.originalnamespacename = function() {

    var localctx = new OriginalnamespacenameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 178, CPP14Parser.RULE_originalnamespacename);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1821;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NamespacedefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacedefinition;
    return this;
}

NamespacedefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NamespacedefinitionContext.prototype.constructor = NamespacedefinitionContext;

NamespacedefinitionContext.prototype.namednamespacedefinition = function() {
    return this.getTypedRuleContext(NamednamespacedefinitionContext,0);
};

NamespacedefinitionContext.prototype.unnamednamespacedefinition = function() {
    return this.getTypedRuleContext(UnnamednamespacedefinitionContext,0);
};

NamespacedefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacedefinition(this);
	}
};

NamespacedefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacedefinition(this);
	}
};




CPP14Parser.NamespacedefinitionContext = NamespacedefinitionContext;

CPP14Parser.prototype.namespacedefinition = function() {

    var localctx = new NamespacedefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 180, CPP14Parser.RULE_namespacedefinition);
    try {
        this.state = 1825;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,140,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1823;
            this.namednamespacedefinition();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1824;
            this.unnamednamespacedefinition();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NamednamespacedefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namednamespacedefinition;
    return this;
}

NamednamespacedefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NamednamespacedefinitionContext.prototype.constructor = NamednamespacedefinitionContext;

NamednamespacedefinitionContext.prototype.originalnamespacedefinition = function() {
    return this.getTypedRuleContext(OriginalnamespacedefinitionContext,0);
};

NamednamespacedefinitionContext.prototype.extensionnamespacedefinition = function() {
    return this.getTypedRuleContext(ExtensionnamespacedefinitionContext,0);
};

NamednamespacedefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamednamespacedefinition(this);
	}
};

NamednamespacedefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamednamespacedefinition(this);
	}
};




CPP14Parser.NamednamespacedefinitionContext = NamednamespacedefinitionContext;

CPP14Parser.prototype.namednamespacedefinition = function() {

    var localctx = new NamednamespacedefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 182, CPP14Parser.RULE_namednamespacedefinition);
    try {
        this.state = 1829;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,141,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1827;
            this.originalnamespacedefinition();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1828;
            this.extensionnamespacedefinition();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OriginalnamespacedefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_originalnamespacedefinition;
    return this;
}

OriginalnamespacedefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OriginalnamespacedefinitionContext.prototype.constructor = OriginalnamespacedefinitionContext;

OriginalnamespacedefinitionContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

OriginalnamespacedefinitionContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

OriginalnamespacedefinitionContext.prototype.namespacebody = function() {
    return this.getTypedRuleContext(NamespacebodyContext,0);
};

OriginalnamespacedefinitionContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

OriginalnamespacedefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOriginalnamespacedefinition(this);
	}
};

OriginalnamespacedefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOriginalnamespacedefinition(this);
	}
};




CPP14Parser.OriginalnamespacedefinitionContext = OriginalnamespacedefinitionContext;

CPP14Parser.prototype.originalnamespacedefinition = function() {

    var localctx = new OriginalnamespacedefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 184, CPP14Parser.RULE_originalnamespacedefinition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1832;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Inline) {
            this.state = 1831;
            this.match(CPP14Parser.Inline);
        }

        this.state = 1834;
        this.match(CPP14Parser.Namespace);
        this.state = 1835;
        this.match(CPP14Parser.Identifier);
        this.state = 1836;
        this.match(CPP14Parser.LeftBrace);
        this.state = 1837;
        this.namespacebody();
        this.state = 1838;
        this.match(CPP14Parser.RightBrace);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExtensionnamespacedefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_extensionnamespacedefinition;
    return this;
}

ExtensionnamespacedefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExtensionnamespacedefinitionContext.prototype.constructor = ExtensionnamespacedefinitionContext;

ExtensionnamespacedefinitionContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

ExtensionnamespacedefinitionContext.prototype.originalnamespacename = function() {
    return this.getTypedRuleContext(OriginalnamespacenameContext,0);
};

ExtensionnamespacedefinitionContext.prototype.namespacebody = function() {
    return this.getTypedRuleContext(NamespacebodyContext,0);
};

ExtensionnamespacedefinitionContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

ExtensionnamespacedefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExtensionnamespacedefinition(this);
	}
};

ExtensionnamespacedefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExtensionnamespacedefinition(this);
	}
};




CPP14Parser.ExtensionnamespacedefinitionContext = ExtensionnamespacedefinitionContext;

CPP14Parser.prototype.extensionnamespacedefinition = function() {

    var localctx = new ExtensionnamespacedefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 186, CPP14Parser.RULE_extensionnamespacedefinition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1841;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Inline) {
            this.state = 1840;
            this.match(CPP14Parser.Inline);
        }

        this.state = 1843;
        this.match(CPP14Parser.Namespace);
        this.state = 1844;
        this.originalnamespacename();
        this.state = 1845;
        this.match(CPP14Parser.LeftBrace);
        this.state = 1846;
        this.namespacebody();
        this.state = 1847;
        this.match(CPP14Parser.RightBrace);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UnnamednamespacedefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unnamednamespacedefinition;
    return this;
}

UnnamednamespacedefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnnamednamespacedefinitionContext.prototype.constructor = UnnamednamespacedefinitionContext;

UnnamednamespacedefinitionContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

UnnamednamespacedefinitionContext.prototype.namespacebody = function() {
    return this.getTypedRuleContext(NamespacebodyContext,0);
};

UnnamednamespacedefinitionContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

UnnamednamespacedefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnnamednamespacedefinition(this);
	}
};

UnnamednamespacedefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnnamednamespacedefinition(this);
	}
};




CPP14Parser.UnnamednamespacedefinitionContext = UnnamednamespacedefinitionContext;

CPP14Parser.prototype.unnamednamespacedefinition = function() {

    var localctx = new UnnamednamespacedefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 188, CPP14Parser.RULE_unnamednamespacedefinition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1850;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Inline) {
            this.state = 1849;
            this.match(CPP14Parser.Inline);
        }

        this.state = 1852;
        this.match(CPP14Parser.Namespace);
        this.state = 1853;
        this.match(CPP14Parser.LeftBrace);
        this.state = 1854;
        this.namespacebody();
        this.state = 1855;
        this.match(CPP14Parser.RightBrace);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NamespacebodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacebody;
    return this;
}

NamespacebodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NamespacebodyContext.prototype.constructor = NamespacebodyContext;

NamespacebodyContext.prototype.declarationseq = function() {
    return this.getTypedRuleContext(DeclarationseqContext,0);
};

NamespacebodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacebody(this);
	}
};

NamespacebodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacebody(this);
	}
};




CPP14Parser.NamespacebodyContext = NamespacebodyContext;

CPP14Parser.prototype.namespacebody = function() {

    var localctx = new NamespacebodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 190, CPP14Parser.RULE_namespacebody);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1858;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Asm) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Namespace - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
            this.state = 1857;
            this.declarationseq(0);
        }

    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NamespacealiasContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacealias;
    return this;
}

NamespacealiasContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NamespacealiasContext.prototype.constructor = NamespacealiasContext;

NamespacealiasContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

NamespacealiasContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacealias(this);
	}
};

NamespacealiasContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacealias(this);
	}
};




CPP14Parser.NamespacealiasContext = NamespacealiasContext;

CPP14Parser.prototype.namespacealias = function() {

    var localctx = new NamespacealiasContext(this, this._ctx, this.state);
    this.enterRule(localctx, 192, CPP14Parser.RULE_namespacealias);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1860;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NamespacealiasdefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacealiasdefinition;
    return this;
}

NamespacealiasdefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NamespacealiasdefinitionContext.prototype.constructor = NamespacealiasdefinitionContext;

NamespacealiasdefinitionContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

NamespacealiasdefinitionContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

NamespacealiasdefinitionContext.prototype.qualifiednamespacespecifier = function() {
    return this.getTypedRuleContext(QualifiednamespacespecifierContext,0);
};

NamespacealiasdefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacealiasdefinition(this);
	}
};

NamespacealiasdefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacealiasdefinition(this);
	}
};




CPP14Parser.NamespacealiasdefinitionContext = NamespacealiasdefinitionContext;

CPP14Parser.prototype.namespacealiasdefinition = function() {

    var localctx = new NamespacealiasdefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 194, CPP14Parser.RULE_namespacealiasdefinition);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1862;
        this.match(CPP14Parser.Namespace);
        this.state = 1863;
        this.match(CPP14Parser.Identifier);
        this.state = 1864;
        this.match(CPP14Parser.Assign);
        this.state = 1865;
        this.qualifiednamespacespecifier();
        this.state = 1866;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function QualifiednamespacespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_qualifiednamespacespecifier;
    return this;
}

QualifiednamespacespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
QualifiednamespacespecifierContext.prototype.constructor = QualifiednamespacespecifierContext;

QualifiednamespacespecifierContext.prototype.namespacename = function() {
    return this.getTypedRuleContext(NamespacenameContext,0);
};

QualifiednamespacespecifierContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

QualifiednamespacespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterQualifiednamespacespecifier(this);
	}
};

QualifiednamespacespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitQualifiednamespacespecifier(this);
	}
};




CPP14Parser.QualifiednamespacespecifierContext = QualifiednamespacespecifierContext;

CPP14Parser.prototype.qualifiednamespacespecifier = function() {

    var localctx = new QualifiednamespacespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 196, CPP14Parser.RULE_qualifiednamespacespecifier);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1869;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,146,this._ctx);
        if(la_===1) {
            this.state = 1868;
            this.nestednamespecifier(0);

        }
        this.state = 1871;
        this.namespacename();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UsingdeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_usingdeclaration;
    return this;
}

UsingdeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UsingdeclarationContext.prototype.constructor = UsingdeclarationContext;

UsingdeclarationContext.prototype.Using = function() {
    return this.getToken(CPP14Parser.Using, 0);
};

UsingdeclarationContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

UsingdeclarationContext.prototype.unqualifiedid = function() {
    return this.getTypedRuleContext(UnqualifiedidContext,0);
};

UsingdeclarationContext.prototype.Typename = function() {
    return this.getToken(CPP14Parser.Typename, 0);
};

UsingdeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUsingdeclaration(this);
	}
};

UsingdeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUsingdeclaration(this);
	}
};




CPP14Parser.UsingdeclarationContext = UsingdeclarationContext;

CPP14Parser.prototype.usingdeclaration = function() {

    var localctx = new UsingdeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 198, CPP14Parser.RULE_usingdeclaration);
    var _la = 0; // Token type
    try {
        this.state = 1886;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,148,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1873;
            this.match(CPP14Parser.Using);
            this.state = 1875;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Typename) {
                this.state = 1874;
                this.match(CPP14Parser.Typename);
            }

            this.state = 1877;
            this.nestednamespecifier(0);
            this.state = 1878;
            this.unqualifiedid();
            this.state = 1879;
            this.match(CPP14Parser.Semi);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1881;
            this.match(CPP14Parser.Using);
            this.state = 1882;
            this.match(CPP14Parser.Doublecolon);
            this.state = 1883;
            this.unqualifiedid();
            this.state = 1884;
            this.match(CPP14Parser.Semi);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UsingdirectiveContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_usingdirective;
    return this;
}

UsingdirectiveContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UsingdirectiveContext.prototype.constructor = UsingdirectiveContext;

UsingdirectiveContext.prototype.Using = function() {
    return this.getToken(CPP14Parser.Using, 0);
};

UsingdirectiveContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

UsingdirectiveContext.prototype.namespacename = function() {
    return this.getTypedRuleContext(NamespacenameContext,0);
};

UsingdirectiveContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

UsingdirectiveContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

UsingdirectiveContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUsingdirective(this);
	}
};

UsingdirectiveContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUsingdirective(this);
	}
};




CPP14Parser.UsingdirectiveContext = UsingdirectiveContext;

CPP14Parser.prototype.usingdirective = function() {

    var localctx = new UsingdirectiveContext(this, this._ctx, this.state);
    this.enterRule(localctx, 200, CPP14Parser.RULE_usingdirective);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1889;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 1888;
            this.attributespecifierseq(0);
        }

        this.state = 1891;
        this.match(CPP14Parser.Using);
        this.state = 1892;
        this.match(CPP14Parser.Namespace);
        this.state = 1894;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,150,this._ctx);
        if(la_===1) {
            this.state = 1893;
            this.nestednamespecifier(0);

        }
        this.state = 1896;
        this.namespacename();
        this.state = 1897;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AsmdefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_asmdefinition;
    return this;
}

AsmdefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AsmdefinitionContext.prototype.constructor = AsmdefinitionContext;

AsmdefinitionContext.prototype.Asm = function() {
    return this.getToken(CPP14Parser.Asm, 0);
};

AsmdefinitionContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

AsmdefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAsmdefinition(this);
	}
};

AsmdefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAsmdefinition(this);
	}
};




CPP14Parser.AsmdefinitionContext = AsmdefinitionContext;

CPP14Parser.prototype.asmdefinition = function() {

    var localctx = new AsmdefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 202, CPP14Parser.RULE_asmdefinition);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1899;
        this.match(CPP14Parser.Asm);
        this.state = 1900;
        this.match(CPP14Parser.LeftParen);
        this.state = 1901;
        this.match(CPP14Parser.Stringliteral);
        this.state = 1902;
        this.match(CPP14Parser.RightParen);
        this.state = 1903;
        this.match(CPP14Parser.Semi);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LinkagespecificationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_linkagespecification;
    return this;
}

LinkagespecificationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LinkagespecificationContext.prototype.constructor = LinkagespecificationContext;

LinkagespecificationContext.prototype.Extern = function() {
    return this.getToken(CPP14Parser.Extern, 0);
};

LinkagespecificationContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

LinkagespecificationContext.prototype.declarationseq = function() {
    return this.getTypedRuleContext(DeclarationseqContext,0);
};

LinkagespecificationContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

LinkagespecificationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLinkagespecification(this);
	}
};

LinkagespecificationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLinkagespecification(this);
	}
};




CPP14Parser.LinkagespecificationContext = LinkagespecificationContext;

CPP14Parser.prototype.linkagespecification = function() {

    var localctx = new LinkagespecificationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 204, CPP14Parser.RULE_linkagespecification);
    var _la = 0; // Token type
    try {
        this.state = 1915;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,152,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1905;
            this.match(CPP14Parser.Extern);
            this.state = 1906;
            this.match(CPP14Parser.Stringliteral);
            this.state = 1907;
            this.match(CPP14Parser.LeftBrace);
            this.state = 1909;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Asm) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Namespace - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 1908;
                this.declarationseq(0);
            }

            this.state = 1911;
            this.match(CPP14Parser.RightBrace);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1912;
            this.match(CPP14Parser.Extern);
            this.state = 1913;
            this.match(CPP14Parser.Stringliteral);
            this.state = 1914;
            this.declaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributespecifierseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributespecifierseq;
    return this;
}

AttributespecifierseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributespecifierseqContext.prototype.constructor = AttributespecifierseqContext;

AttributespecifierseqContext.prototype.attributespecifier = function() {
    return this.getTypedRuleContext(AttributespecifierContext,0);
};

AttributespecifierseqContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

AttributespecifierseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributespecifierseq(this);
	}
};

AttributespecifierseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributespecifierseq(this);
	}
};



CPP14Parser.prototype.attributespecifierseq = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new AttributespecifierseqContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 206;
    this.enterRecursionRule(localctx, 206, CPP14Parser.RULE_attributespecifierseq, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1918;
        this.attributespecifier();
        this._ctx.stop = this._input.LT(-1);
        this.state = 1924;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,153,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new AttributespecifierseqContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_attributespecifierseq);
                this.state = 1920;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 1921;
                this.attributespecifier(); 
            }
            this.state = 1926;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,153,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function AttributespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributespecifier;
    return this;
}

AttributespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributespecifierContext.prototype.constructor = AttributespecifierContext;

AttributespecifierContext.prototype.attributelist = function() {
    return this.getTypedRuleContext(AttributelistContext,0);
};

AttributespecifierContext.prototype.alignmentspecifier = function() {
    return this.getTypedRuleContext(AlignmentspecifierContext,0);
};

AttributespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributespecifier(this);
	}
};

AttributespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributespecifier(this);
	}
};




CPP14Parser.AttributespecifierContext = AttributespecifierContext;

CPP14Parser.prototype.attributespecifier = function() {

    var localctx = new AttributespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 208, CPP14Parser.RULE_attributespecifier);
    try {
        this.state = 1934;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 1);
            this.state = 1927;
            this.match(CPP14Parser.LeftBracket);
            this.state = 1928;
            this.match(CPP14Parser.LeftBracket);
            this.state = 1929;
            this.attributelist(0);
            this.state = 1930;
            this.match(CPP14Parser.RightBracket);
            this.state = 1931;
            this.match(CPP14Parser.RightBracket);
            break;
        case CPP14Parser.Alignas:
            this.enterOuterAlt(localctx, 2);
            this.state = 1933;
            this.alignmentspecifier();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AlignmentspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_alignmentspecifier;
    return this;
}

AlignmentspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AlignmentspecifierContext.prototype.constructor = AlignmentspecifierContext;

AlignmentspecifierContext.prototype.Alignas = function() {
    return this.getToken(CPP14Parser.Alignas, 0);
};

AlignmentspecifierContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

AlignmentspecifierContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

AlignmentspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAlignmentspecifier(this);
	}
};

AlignmentspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAlignmentspecifier(this);
	}
};




CPP14Parser.AlignmentspecifierContext = AlignmentspecifierContext;

CPP14Parser.prototype.alignmentspecifier = function() {

    var localctx = new AlignmentspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 210, CPP14Parser.RULE_alignmentspecifier);
    var _la = 0; // Token type
    try {
        this.state = 1952;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,157,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1936;
            this.match(CPP14Parser.Alignas);
            this.state = 1937;
            this.match(CPP14Parser.LeftParen);
            this.state = 1938;
            this.typeid();
            this.state = 1940;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 1939;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 1942;
            this.match(CPP14Parser.RightParen);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1944;
            this.match(CPP14Parser.Alignas);
            this.state = 1945;
            this.match(CPP14Parser.LeftParen);
            this.state = 1946;
            this.constantexpression();
            this.state = 1948;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 1947;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 1950;
            this.match(CPP14Parser.RightParen);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributelistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributelist;
    return this;
}

AttributelistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributelistContext.prototype.constructor = AttributelistContext;

AttributelistContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

AttributelistContext.prototype.attributelist = function() {
    return this.getTypedRuleContext(AttributelistContext,0);
};

AttributelistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributelist(this);
	}
};

AttributelistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributelist(this);
	}
};



CPP14Parser.prototype.attributelist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new AttributelistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 212;
    this.enterRecursionRule(localctx, 212, CPP14Parser.RULE_attributelist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1961;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,159,this._ctx);
        switch(la_) {
        case 1:
            this.state = 1956;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,158,this._ctx);
            if(la_===1) {
                this.state = 1955;
                this.attribute();

            }
            break;

        case 2:
            this.state = 1958;
            this.attribute();
            this.state = 1959;
            this.match(CPP14Parser.Ellipsis);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 1975;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,162,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 1973;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,161,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new AttributelistContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_attributelist);
                    this.state = 1963;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 1964;
                    this.match(CPP14Parser.Comma);
                    this.state = 1966;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input,160,this._ctx);
                    if(la_===1) {
                        this.state = 1965;
                        this.attribute();

                    }
                    break;

                case 2:
                    localctx = new AttributelistContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_attributelist);
                    this.state = 1968;
                    if (!( this.precpred(this._ctx, 1))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                    }
                    this.state = 1969;
                    this.match(CPP14Parser.Comma);
                    this.state = 1970;
                    this.attribute();
                    this.state = 1971;
                    this.match(CPP14Parser.Ellipsis);
                    break;

                } 
            }
            this.state = 1977;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,162,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function AttributeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attribute;
    return this;
}

AttributeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeContext.prototype.constructor = AttributeContext;

AttributeContext.prototype.attributetoken = function() {
    return this.getTypedRuleContext(AttributetokenContext,0);
};

AttributeContext.prototype.attributeargumentclause = function() {
    return this.getTypedRuleContext(AttributeargumentclauseContext,0);
};

AttributeContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttribute(this);
	}
};

AttributeContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttribute(this);
	}
};




CPP14Parser.AttributeContext = AttributeContext;

CPP14Parser.prototype.attribute = function() {

    var localctx = new AttributeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 214, CPP14Parser.RULE_attribute);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1978;
        this.attributetoken();
        this.state = 1980;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,163,this._ctx);
        if(la_===1) {
            this.state = 1979;
            this.attributeargumentclause();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributetokenContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributetoken;
    return this;
}

AttributetokenContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributetokenContext.prototype.constructor = AttributetokenContext;

AttributetokenContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

AttributetokenContext.prototype.attributescopedtoken = function() {
    return this.getTypedRuleContext(AttributescopedtokenContext,0);
};

AttributetokenContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributetoken(this);
	}
};

AttributetokenContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributetoken(this);
	}
};




CPP14Parser.AttributetokenContext = AttributetokenContext;

CPP14Parser.prototype.attributetoken = function() {

    var localctx = new AttributetokenContext(this, this._ctx, this.state);
    this.enterRule(localctx, 216, CPP14Parser.RULE_attributetoken);
    try {
        this.state = 1984;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,164,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 1982;
            this.match(CPP14Parser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 1983;
            this.attributescopedtoken();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributescopedtokenContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributescopedtoken;
    return this;
}

AttributescopedtokenContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributescopedtokenContext.prototype.constructor = AttributescopedtokenContext;

AttributescopedtokenContext.prototype.attributenamespace = function() {
    return this.getTypedRuleContext(AttributenamespaceContext,0);
};

AttributescopedtokenContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

AttributescopedtokenContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributescopedtoken(this);
	}
};

AttributescopedtokenContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributescopedtoken(this);
	}
};




CPP14Parser.AttributescopedtokenContext = AttributescopedtokenContext;

CPP14Parser.prototype.attributescopedtoken = function() {

    var localctx = new AttributescopedtokenContext(this, this._ctx, this.state);
    this.enterRule(localctx, 218, CPP14Parser.RULE_attributescopedtoken);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1986;
        this.attributenamespace();
        this.state = 1987;
        this.match(CPP14Parser.Doublecolon);
        this.state = 1988;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributenamespaceContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributenamespace;
    return this;
}

AttributenamespaceContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributenamespaceContext.prototype.constructor = AttributenamespaceContext;

AttributenamespaceContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

AttributenamespaceContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributenamespace(this);
	}
};

AttributenamespaceContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributenamespace(this);
	}
};




CPP14Parser.AttributenamespaceContext = AttributenamespaceContext;

CPP14Parser.prototype.attributenamespace = function() {

    var localctx = new AttributenamespaceContext(this, this._ctx, this.state);
    this.enterRule(localctx, 220, CPP14Parser.RULE_attributenamespace);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1990;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AttributeargumentclauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributeargumentclause;
    return this;
}

AttributeargumentclauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AttributeargumentclauseContext.prototype.constructor = AttributeargumentclauseContext;

AttributeargumentclauseContext.prototype.balancedtokenseq = function() {
    return this.getTypedRuleContext(BalancedtokenseqContext,0);
};

AttributeargumentclauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributeargumentclause(this);
	}
};

AttributeargumentclauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributeargumentclause(this);
	}
};




CPP14Parser.AttributeargumentclauseContext = AttributeargumentclauseContext;

CPP14Parser.prototype.attributeargumentclause = function() {

    var localctx = new AttributeargumentclauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 222, CPP14Parser.RULE_attributeargumentclause);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1992;
        this.match(CPP14Parser.LeftParen);
        this.state = 1993;
        this.balancedtokenseq(0);
        this.state = 1994;
        this.match(CPP14Parser.RightParen);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BalancedtokenseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_balancedtokenseq;
    return this;
}

BalancedtokenseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BalancedtokenseqContext.prototype.constructor = BalancedtokenseqContext;

BalancedtokenseqContext.prototype.balancedtoken = function() {
    return this.getTypedRuleContext(BalancedtokenContext,0);
};

BalancedtokenseqContext.prototype.balancedtokenseq = function() {
    return this.getTypedRuleContext(BalancedtokenseqContext,0);
};

BalancedtokenseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBalancedtokenseq(this);
	}
};

BalancedtokenseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBalancedtokenseq(this);
	}
};



CPP14Parser.prototype.balancedtokenseq = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new BalancedtokenseqContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 224;
    this.enterRecursionRule(localctx, 224, CPP14Parser.RULE_balancedtokenseq, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 1998;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,165,this._ctx);
        if(la_===1) {
            this.state = 1997;
            this.balancedtoken();

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2004;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,166,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new BalancedtokenseqContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_balancedtokenseq);
                this.state = 2000;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2001;
                this.balancedtoken(); 
            }
            this.state = 2006;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,166,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function BalancedtokenContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_balancedtoken;
    return this;
}

BalancedtokenContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BalancedtokenContext.prototype.constructor = BalancedtokenContext;

BalancedtokenContext.prototype.balancedtokenseq = function() {
    return this.getTypedRuleContext(BalancedtokenseqContext,0);
};

BalancedtokenContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBalancedtoken(this);
	}
};

BalancedtokenContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBalancedtoken(this);
	}
};




CPP14Parser.BalancedtokenContext = BalancedtokenContext;

CPP14Parser.prototype.balancedtoken = function() {

    var localctx = new BalancedtokenContext(this, this._ctx, this.state);
    this.enterRule(localctx, 226, CPP14Parser.RULE_balancedtoken);
    try {
        this.state = 2019;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 1);
            this.state = 2007;
            this.match(CPP14Parser.LeftParen);
            this.state = 2008;
            this.balancedtokenseq(0);
            this.state = 2009;
            this.match(CPP14Parser.RightParen);
            break;
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 2);
            this.state = 2011;
            this.match(CPP14Parser.LeftBracket);
            this.state = 2012;
            this.balancedtokenseq(0);
            this.state = 2013;
            this.match(CPP14Parser.RightBracket);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 3);
            this.state = 2015;
            this.match(CPP14Parser.LeftBrace);
            this.state = 2016;
            this.balancedtokenseq(0);
            this.state = 2017;
            this.match(CPP14Parser.RightBrace);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InitdeclaratorlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initdeclaratorlist;
    return this;
}

InitdeclaratorlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InitdeclaratorlistContext.prototype.constructor = InitdeclaratorlistContext;

InitdeclaratorlistContext.prototype.initdeclarator = function() {
    return this.getTypedRuleContext(InitdeclaratorContext,0);
};

InitdeclaratorlistContext.prototype.initdeclaratorlist = function() {
    return this.getTypedRuleContext(InitdeclaratorlistContext,0);
};

InitdeclaratorlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitdeclaratorlist(this);
	}
};

InitdeclaratorlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitdeclaratorlist(this);
	}
};



CPP14Parser.prototype.initdeclaratorlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new InitdeclaratorlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 228;
    this.enterRecursionRule(localctx, 228, CPP14Parser.RULE_initdeclaratorlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2022;
        this.initdeclarator();
        this._ctx.stop = this._input.LT(-1);
        this.state = 2029;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,168,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new InitdeclaratorlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_initdeclaratorlist);
                this.state = 2024;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2025;
                this.match(CPP14Parser.Comma);
                this.state = 2026;
                this.initdeclarator(); 
            }
            this.state = 2031;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,168,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function InitdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initdeclarator;
    return this;
}

InitdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InitdeclaratorContext.prototype.constructor = InitdeclaratorContext;

InitdeclaratorContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

InitdeclaratorContext.prototype.initializer = function() {
    return this.getTypedRuleContext(InitializerContext,0);
};

InitdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitdeclarator(this);
	}
};

InitdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitdeclarator(this);
	}
};




CPP14Parser.InitdeclaratorContext = InitdeclaratorContext;

CPP14Parser.prototype.initdeclarator = function() {

    var localctx = new InitdeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 230, CPP14Parser.RULE_initdeclarator);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2032;
        this.declarator();
        this.state = 2034;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,169,this._ctx);
        if(la_===1) {
            this.state = 2033;
            this.initializer();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declarator;
    return this;
}

DeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclaratorContext.prototype.constructor = DeclaratorContext;

DeclaratorContext.prototype.ptrdeclarator = function() {
    return this.getTypedRuleContext(PtrdeclaratorContext,0);
};

DeclaratorContext.prototype.noptrdeclarator = function() {
    return this.getTypedRuleContext(NoptrdeclaratorContext,0);
};

DeclaratorContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

DeclaratorContext.prototype.trailingreturntype = function() {
    return this.getTypedRuleContext(TrailingreturntypeContext,0);
};

DeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclarator(this);
	}
};

DeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclarator(this);
	}
};




CPP14Parser.DeclaratorContext = DeclaratorContext;

CPP14Parser.prototype.declarator = function() {

    var localctx = new DeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 232, CPP14Parser.RULE_declarator);
    try {
        this.state = 2041;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,170,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2036;
            this.ptrdeclarator();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2037;
            this.noptrdeclarator(0);
            this.state = 2038;
            this.parametersandqualifiers();
            this.state = 2039;
            this.trailingreturntype();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PtrdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ptrdeclarator;
    return this;
}

PtrdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PtrdeclaratorContext.prototype.constructor = PtrdeclaratorContext;

PtrdeclaratorContext.prototype.noptrdeclarator = function() {
    return this.getTypedRuleContext(NoptrdeclaratorContext,0);
};

PtrdeclaratorContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

PtrdeclaratorContext.prototype.ptrdeclarator = function() {
    return this.getTypedRuleContext(PtrdeclaratorContext,0);
};

PtrdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPtrdeclarator(this);
	}
};

PtrdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPtrdeclarator(this);
	}
};




CPP14Parser.PtrdeclaratorContext = PtrdeclaratorContext;

CPP14Parser.prototype.ptrdeclarator = function() {

    var localctx = new PtrdeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 234, CPP14Parser.RULE_ptrdeclarator);
    try {
        this.state = 2047;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,171,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2043;
            this.noptrdeclarator(0);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2044;
            this.ptroperator();
            this.state = 2045;
            this.ptrdeclarator();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NoptrdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrdeclarator;
    return this;
}

NoptrdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NoptrdeclaratorContext.prototype.constructor = NoptrdeclaratorContext;

NoptrdeclaratorContext.prototype.declaratorid = function() {
    return this.getTypedRuleContext(DeclaratoridContext,0);
};

NoptrdeclaratorContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

NoptrdeclaratorContext.prototype.ptrdeclarator = function() {
    return this.getTypedRuleContext(PtrdeclaratorContext,0);
};

NoptrdeclaratorContext.prototype.noptrdeclarator = function() {
    return this.getTypedRuleContext(NoptrdeclaratorContext,0);
};

NoptrdeclaratorContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

NoptrdeclaratorContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

NoptrdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrdeclarator(this);
	}
};

NoptrdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrdeclarator(this);
	}
};



CPP14Parser.prototype.noptrdeclarator = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new NoptrdeclaratorContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 236;
    this.enterRecursionRule(localctx, 236, CPP14Parser.RULE_noptrdeclarator, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2058;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Decltype:
        case CPP14Parser.Operator:
        case CPP14Parser.Tilde:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Ellipsis:
        case CPP14Parser.Identifier:
            this.state = 2050;
            this.declaratorid();
            this.state = 2052;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,172,this._ctx);
            if(la_===1) {
                this.state = 2051;
                this.attributespecifierseq(0);

            }
            break;
        case CPP14Parser.LeftParen:
            this.state = 2054;
            this.match(CPP14Parser.LeftParen);
            this.state = 2055;
            this.ptrdeclarator();
            this.state = 2056;
            this.match(CPP14Parser.RightParen);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2073;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,177,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 2071;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,176,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new NoptrdeclaratorContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_noptrdeclarator);
                    this.state = 2060;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 2061;
                    this.parametersandqualifiers();
                    break;

                case 2:
                    localctx = new NoptrdeclaratorContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_noptrdeclarator);
                    this.state = 2062;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 2063;
                    this.match(CPP14Parser.LeftBracket);
                    this.state = 2065;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                        this.state = 2064;
                        this.constantexpression();
                    }

                    this.state = 2067;
                    this.match(CPP14Parser.RightBracket);
                    this.state = 2069;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input,175,this._ctx);
                    if(la_===1) {
                        this.state = 2068;
                        this.attributespecifierseq(0);

                    }
                    break;

                } 
            }
            this.state = 2075;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,177,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ParametersandqualifiersContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parametersandqualifiers;
    return this;
}

ParametersandqualifiersContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParametersandqualifiersContext.prototype.constructor = ParametersandqualifiersContext;

ParametersandqualifiersContext.prototype.parameterdeclarationclause = function() {
    return this.getTypedRuleContext(ParameterdeclarationclauseContext,0);
};

ParametersandqualifiersContext.prototype.cvqualifierseq = function() {
    return this.getTypedRuleContext(CvqualifierseqContext,0);
};

ParametersandqualifiersContext.prototype.refqualifier = function() {
    return this.getTypedRuleContext(RefqualifierContext,0);
};

ParametersandqualifiersContext.prototype.exceptionspecification = function() {
    return this.getTypedRuleContext(ExceptionspecificationContext,0);
};

ParametersandqualifiersContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

ParametersandqualifiersContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParametersandqualifiers(this);
	}
};

ParametersandqualifiersContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParametersandqualifiers(this);
	}
};




CPP14Parser.ParametersandqualifiersContext = ParametersandqualifiersContext;

CPP14Parser.prototype.parametersandqualifiers = function() {

    var localctx = new ParametersandqualifiersContext(this, this._ctx, this.state);
    this.enterRule(localctx, 238, CPP14Parser.RULE_parametersandqualifiers);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2076;
        this.match(CPP14Parser.LeftParen);
        this.state = 2077;
        this.parameterdeclarationclause();
        this.state = 2078;
        this.match(CPP14Parser.RightParen);
        this.state = 2080;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,178,this._ctx);
        if(la_===1) {
            this.state = 2079;
            this.cvqualifierseq();

        }
        this.state = 2083;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,179,this._ctx);
        if(la_===1) {
            this.state = 2082;
            this.refqualifier();

        }
        this.state = 2086;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,180,this._ctx);
        if(la_===1) {
            this.state = 2085;
            this.exceptionspecification();

        }
        this.state = 2089;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,181,this._ctx);
        if(la_===1) {
            this.state = 2088;
            this.attributespecifierseq(0);

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TrailingreturntypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_trailingreturntype;
    return this;
}

TrailingreturntypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TrailingreturntypeContext.prototype.constructor = TrailingreturntypeContext;

TrailingreturntypeContext.prototype.trailingtypespecifierseq = function() {
    return this.getTypedRuleContext(TrailingtypespecifierseqContext,0);
};

TrailingreturntypeContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

TrailingreturntypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTrailingreturntype(this);
	}
};

TrailingreturntypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTrailingreturntype(this);
	}
};




CPP14Parser.TrailingreturntypeContext = TrailingreturntypeContext;

CPP14Parser.prototype.trailingreturntype = function() {

    var localctx = new TrailingreturntypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 240, CPP14Parser.RULE_trailingreturntype);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2091;
        this.match(CPP14Parser.Arrow);
        this.state = 2092;
        this.trailingtypespecifierseq();
        this.state = 2094;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,182,this._ctx);
        if(la_===1) {
            this.state = 2093;
            this.abstractdeclarator();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PtroperatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ptroperator;
    return this;
}

PtroperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PtroperatorContext.prototype.constructor = PtroperatorContext;

PtroperatorContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

PtroperatorContext.prototype.cvqualifierseq = function() {
    return this.getTypedRuleContext(CvqualifierseqContext,0);
};

PtroperatorContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

PtroperatorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPtroperator(this);
	}
};

PtroperatorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPtroperator(this);
	}
};




CPP14Parser.PtroperatorContext = PtroperatorContext;

CPP14Parser.prototype.ptroperator = function() {

    var localctx = new PtroperatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 242, CPP14Parser.RULE_ptroperator);
    try {
        this.state = 2119;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Star:
            this.enterOuterAlt(localctx, 1);
            this.state = 2096;
            this.match(CPP14Parser.Star);
            this.state = 2098;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,183,this._ctx);
            if(la_===1) {
                this.state = 2097;
                this.attributespecifierseq(0);

            }
            this.state = 2101;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,184,this._ctx);
            if(la_===1) {
                this.state = 2100;
                this.cvqualifierseq();

            }
            break;
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 2);
            this.state = 2103;
            this.match(CPP14Parser.And);
            this.state = 2105;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,185,this._ctx);
            if(la_===1) {
                this.state = 2104;
                this.attributespecifierseq(0);

            }
            break;
        case CPP14Parser.AndAnd:
            this.enterOuterAlt(localctx, 3);
            this.state = 2107;
            this.match(CPP14Parser.AndAnd);
            this.state = 2109;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,186,this._ctx);
            if(la_===1) {
                this.state = 2108;
                this.attributespecifierseq(0);

            }
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 4);
            this.state = 2111;
            this.nestednamespecifier(0);
            this.state = 2112;
            this.match(CPP14Parser.Star);
            this.state = 2114;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,187,this._ctx);
            if(la_===1) {
                this.state = 2113;
                this.attributespecifierseq(0);

            }
            this.state = 2117;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,188,this._ctx);
            if(la_===1) {
                this.state = 2116;
                this.cvqualifierseq();

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CvqualifierseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_cvqualifierseq;
    return this;
}

CvqualifierseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CvqualifierseqContext.prototype.constructor = CvqualifierseqContext;

CvqualifierseqContext.prototype.cvqualifier = function() {
    return this.getTypedRuleContext(CvqualifierContext,0);
};

CvqualifierseqContext.prototype.cvqualifierseq = function() {
    return this.getTypedRuleContext(CvqualifierseqContext,0);
};

CvqualifierseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCvqualifierseq(this);
	}
};

CvqualifierseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCvqualifierseq(this);
	}
};




CPP14Parser.CvqualifierseqContext = CvqualifierseqContext;

CPP14Parser.prototype.cvqualifierseq = function() {

    var localctx = new CvqualifierseqContext(this, this._ctx, this.state);
    this.enterRule(localctx, 244, CPP14Parser.RULE_cvqualifierseq);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2121;
        this.cvqualifier();
        this.state = 2123;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,190,this._ctx);
        if(la_===1) {
            this.state = 2122;
            this.cvqualifierseq();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CvqualifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_cvqualifier;
    return this;
}

CvqualifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CvqualifierContext.prototype.constructor = CvqualifierContext;

CvqualifierContext.prototype.Const = function() {
    return this.getToken(CPP14Parser.Const, 0);
};

CvqualifierContext.prototype.Volatile = function() {
    return this.getToken(CPP14Parser.Volatile, 0);
};

CvqualifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCvqualifier(this);
	}
};

CvqualifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCvqualifier(this);
	}
};




CPP14Parser.CvqualifierContext = CvqualifierContext;

CPP14Parser.prototype.cvqualifier = function() {

    var localctx = new CvqualifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 246, CPP14Parser.RULE_cvqualifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2125;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.Const || _la===CPP14Parser.Volatile)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RefqualifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_refqualifier;
    return this;
}

RefqualifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RefqualifierContext.prototype.constructor = RefqualifierContext;


RefqualifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterRefqualifier(this);
	}
};

RefqualifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitRefqualifier(this);
	}
};




CPP14Parser.RefqualifierContext = RefqualifierContext;

CPP14Parser.prototype.refqualifier = function() {

    var localctx = new RefqualifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 248, CPP14Parser.RULE_refqualifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2127;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.And || _la===CPP14Parser.AndAnd)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DeclaratoridContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declaratorid;
    return this;
}

DeclaratoridContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DeclaratoridContext.prototype.constructor = DeclaratoridContext;

DeclaratoridContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

DeclaratoridContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclaratorid(this);
	}
};

DeclaratoridContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclaratorid(this);
	}
};




CPP14Parser.DeclaratoridContext = DeclaratoridContext;

CPP14Parser.prototype.declaratorid = function() {

    var localctx = new DeclaratoridContext(this, this._ctx, this.state);
    this.enterRule(localctx, 250, CPP14Parser.RULE_declaratorid);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2130;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Ellipsis) {
            this.state = 2129;
            this.match(CPP14Parser.Ellipsis);
        }

        this.state = 2132;
        this.idexpression();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typeid;
    return this;
}

TypeidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeidContext.prototype.constructor = TypeidContext;

TypeidContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

TypeidContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

TypeidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypeid(this);
	}
};

TypeidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypeid(this);
	}
};




CPP14Parser.TypeidContext = TypeidContext;

CPP14Parser.prototype.typeid = function() {

    var localctx = new TypeidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 252, CPP14Parser.RULE_typeid);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2134;
        this.typespecifierseq();
        this.state = 2136;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,192,this._ctx);
        if(la_===1) {
            this.state = 2135;
            this.abstractdeclarator();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AbstractdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_abstractdeclarator;
    return this;
}

AbstractdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AbstractdeclaratorContext.prototype.constructor = AbstractdeclaratorContext;

AbstractdeclaratorContext.prototype.ptrabstractdeclarator = function() {
    return this.getTypedRuleContext(PtrabstractdeclaratorContext,0);
};

AbstractdeclaratorContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

AbstractdeclaratorContext.prototype.trailingreturntype = function() {
    return this.getTypedRuleContext(TrailingreturntypeContext,0);
};

AbstractdeclaratorContext.prototype.noptrabstractdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractdeclaratorContext,0);
};

AbstractdeclaratorContext.prototype.abstractpackdeclarator = function() {
    return this.getTypedRuleContext(AbstractpackdeclaratorContext,0);
};

AbstractdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAbstractdeclarator(this);
	}
};

AbstractdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAbstractdeclarator(this);
	}
};




CPP14Parser.AbstractdeclaratorContext = AbstractdeclaratorContext;

CPP14Parser.prototype.abstractdeclarator = function() {

    var localctx = new AbstractdeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 254, CPP14Parser.RULE_abstractdeclarator);
    try {
        this.state = 2146;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,194,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2138;
            this.ptrabstractdeclarator();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2140;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,193,this._ctx);
            if(la_===1) {
                this.state = 2139;
                this.noptrabstractdeclarator(0);

            }
            this.state = 2142;
            this.parametersandqualifiers();
            this.state = 2143;
            this.trailingreturntype();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2145;
            this.abstractpackdeclarator();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PtrabstractdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ptrabstractdeclarator;
    return this;
}

PtrabstractdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PtrabstractdeclaratorContext.prototype.constructor = PtrabstractdeclaratorContext;

PtrabstractdeclaratorContext.prototype.noptrabstractdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractdeclaratorContext,0);
};

PtrabstractdeclaratorContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

PtrabstractdeclaratorContext.prototype.ptrabstractdeclarator = function() {
    return this.getTypedRuleContext(PtrabstractdeclaratorContext,0);
};

PtrabstractdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPtrabstractdeclarator(this);
	}
};

PtrabstractdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPtrabstractdeclarator(this);
	}
};




CPP14Parser.PtrabstractdeclaratorContext = PtrabstractdeclaratorContext;

CPP14Parser.prototype.ptrabstractdeclarator = function() {

    var localctx = new PtrabstractdeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 256, CPP14Parser.RULE_ptrabstractdeclarator);
    try {
        this.state = 2153;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 1);
            this.state = 2148;
            this.noptrabstractdeclarator(0);
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 2149;
            this.ptroperator();
            this.state = 2151;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,195,this._ctx);
            if(la_===1) {
                this.state = 2150;
                this.ptrabstractdeclarator();

            }
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NoptrabstractdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrabstractdeclarator;
    return this;
}

NoptrabstractdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NoptrabstractdeclaratorContext.prototype.constructor = NoptrabstractdeclaratorContext;

NoptrabstractdeclaratorContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

NoptrabstractdeclaratorContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

NoptrabstractdeclaratorContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

NoptrabstractdeclaratorContext.prototype.ptrabstractdeclarator = function() {
    return this.getTypedRuleContext(PtrabstractdeclaratorContext,0);
};

NoptrabstractdeclaratorContext.prototype.noptrabstractdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractdeclaratorContext,0);
};

NoptrabstractdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrabstractdeclarator(this);
	}
};

NoptrabstractdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrabstractdeclarator(this);
	}
};



CPP14Parser.prototype.noptrabstractdeclarator = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new NoptrabstractdeclaratorContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 258;
    this.enterRecursionRule(localctx, 258, CPP14Parser.RULE_noptrabstractdeclarator, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2169;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,199,this._ctx);
        switch(la_) {
        case 1:
            this.state = 2156;
            this.parametersandqualifiers();
            break;

        case 2:
            this.state = 2157;
            this.match(CPP14Parser.LeftBracket);
            this.state = 2159;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 2158;
                this.constantexpression();
            }

            this.state = 2161;
            this.match(CPP14Parser.RightBracket);
            this.state = 2163;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,198,this._ctx);
            if(la_===1) {
                this.state = 2162;
                this.attributespecifierseq(0);

            }
            break;

        case 3:
            this.state = 2165;
            this.match(CPP14Parser.LeftParen);
            this.state = 2166;
            this.ptrabstractdeclarator();
            this.state = 2167;
            this.match(CPP14Parser.RightParen);
            break;

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2184;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,203,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 2182;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,202,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new NoptrabstractdeclaratorContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_noptrabstractdeclarator);
                    this.state = 2171;
                    if (!( this.precpred(this._ctx, 5))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 5)");
                    }
                    this.state = 2172;
                    this.parametersandqualifiers();
                    break;

                case 2:
                    localctx = new NoptrabstractdeclaratorContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_noptrabstractdeclarator);
                    this.state = 2173;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 2174;
                    this.match(CPP14Parser.LeftBracket);
                    this.state = 2176;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                        this.state = 2175;
                        this.constantexpression();
                    }

                    this.state = 2178;
                    this.match(CPP14Parser.RightBracket);
                    this.state = 2180;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input,201,this._ctx);
                    if(la_===1) {
                        this.state = 2179;
                        this.attributespecifierseq(0);

                    }
                    break;

                } 
            }
            this.state = 2186;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,203,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function AbstractpackdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_abstractpackdeclarator;
    return this;
}

AbstractpackdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AbstractpackdeclaratorContext.prototype.constructor = AbstractpackdeclaratorContext;

AbstractpackdeclaratorContext.prototype.noptrabstractpackdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractpackdeclaratorContext,0);
};

AbstractpackdeclaratorContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

AbstractpackdeclaratorContext.prototype.abstractpackdeclarator = function() {
    return this.getTypedRuleContext(AbstractpackdeclaratorContext,0);
};

AbstractpackdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAbstractpackdeclarator(this);
	}
};

AbstractpackdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAbstractpackdeclarator(this);
	}
};




CPP14Parser.AbstractpackdeclaratorContext = AbstractpackdeclaratorContext;

CPP14Parser.prototype.abstractpackdeclarator = function() {

    var localctx = new AbstractpackdeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 260, CPP14Parser.RULE_abstractpackdeclarator);
    try {
        this.state = 2191;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Ellipsis:
            this.enterOuterAlt(localctx, 1);
            this.state = 2187;
            this.noptrabstractpackdeclarator(0);
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 2188;
            this.ptroperator();
            this.state = 2189;
            this.abstractpackdeclarator();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function NoptrabstractpackdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrabstractpackdeclarator;
    return this;
}

NoptrabstractpackdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NoptrabstractpackdeclaratorContext.prototype.constructor = NoptrabstractpackdeclaratorContext;

NoptrabstractpackdeclaratorContext.prototype.noptrabstractpackdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractpackdeclaratorContext,0);
};

NoptrabstractpackdeclaratorContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

NoptrabstractpackdeclaratorContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

NoptrabstractpackdeclaratorContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

NoptrabstractpackdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrabstractpackdeclarator(this);
	}
};

NoptrabstractpackdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrabstractpackdeclarator(this);
	}
};



CPP14Parser.prototype.noptrabstractpackdeclarator = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new NoptrabstractpackdeclaratorContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 262;
    this.enterRecursionRule(localctx, 262, CPP14Parser.RULE_noptrabstractpackdeclarator, _p);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2194;
        this.match(CPP14Parser.Ellipsis);
        this._ctx.stop = this._input.LT(-1);
        this.state = 2209;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,208,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                this.state = 2207;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,207,this._ctx);
                switch(la_) {
                case 1:
                    localctx = new NoptrabstractpackdeclaratorContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_noptrabstractpackdeclarator);
                    this.state = 2196;
                    if (!( this.precpred(this._ctx, 3))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 3)");
                    }
                    this.state = 2197;
                    this.parametersandqualifiers();
                    break;

                case 2:
                    localctx = new NoptrabstractpackdeclaratorContext(this, _parentctx, _parentState);
                    this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_noptrabstractpackdeclarator);
                    this.state = 2198;
                    if (!( this.precpred(this._ctx, 2))) {
                        throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 2)");
                    }
                    this.state = 2199;
                    this.match(CPP14Parser.LeftBracket);
                    this.state = 2201;
                    this._errHandler.sync(this);
                    _la = this._input.LA(1);
                    if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                        this.state = 2200;
                        this.constantexpression();
                    }

                    this.state = 2203;
                    this.match(CPP14Parser.RightBracket);
                    this.state = 2205;
                    this._errHandler.sync(this);
                    var la_ = this._interp.adaptivePredict(this._input,206,this._ctx);
                    if(la_===1) {
                        this.state = 2204;
                        this.attributespecifierseq(0);

                    }
                    break;

                } 
            }
            this.state = 2211;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,208,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ParameterdeclarationclauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parameterdeclarationclause;
    return this;
}

ParameterdeclarationclauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParameterdeclarationclauseContext.prototype.constructor = ParameterdeclarationclauseContext;

ParameterdeclarationclauseContext.prototype.parameterdeclarationlist = function() {
    return this.getTypedRuleContext(ParameterdeclarationlistContext,0);
};

ParameterdeclarationclauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParameterdeclarationclause(this);
	}
};

ParameterdeclarationclauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParameterdeclarationclause(this);
	}
};




CPP14Parser.ParameterdeclarationclauseContext = ParameterdeclarationclauseContext;

CPP14Parser.prototype.parameterdeclarationclause = function() {

    var localctx = new ParameterdeclarationclauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 264, CPP14Parser.RULE_parameterdeclarationclause);
    var _la = 0; // Token type
    try {
        this.state = 2222;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,211,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2213;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftBracket - 67)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
                this.state = 2212;
                this.parameterdeclarationlist(0);
            }

            this.state = 2216;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 2215;
                this.match(CPP14Parser.Ellipsis);
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2218;
            this.parameterdeclarationlist(0);
            this.state = 2219;
            this.match(CPP14Parser.Comma);
            this.state = 2220;
            this.match(CPP14Parser.Ellipsis);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ParameterdeclarationlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parameterdeclarationlist;
    return this;
}

ParameterdeclarationlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParameterdeclarationlistContext.prototype.constructor = ParameterdeclarationlistContext;

ParameterdeclarationlistContext.prototype.parameterdeclaration = function() {
    return this.getTypedRuleContext(ParameterdeclarationContext,0);
};

ParameterdeclarationlistContext.prototype.parameterdeclarationlist = function() {
    return this.getTypedRuleContext(ParameterdeclarationlistContext,0);
};

ParameterdeclarationlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParameterdeclarationlist(this);
	}
};

ParameterdeclarationlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParameterdeclarationlist(this);
	}
};



CPP14Parser.prototype.parameterdeclarationlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new ParameterdeclarationlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 266;
    this.enterRecursionRule(localctx, 266, CPP14Parser.RULE_parameterdeclarationlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2225;
        this.parameterdeclaration();
        this._ctx.stop = this._input.LT(-1);
        this.state = 2232;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,212,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new ParameterdeclarationlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_parameterdeclarationlist);
                this.state = 2227;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2228;
                this.match(CPP14Parser.Comma);
                this.state = 2229;
                this.parameterdeclaration(); 
            }
            this.state = 2234;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,212,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function ParameterdeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parameterdeclaration;
    return this;
}

ParameterdeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ParameterdeclarationContext.prototype.constructor = ParameterdeclarationContext;

ParameterdeclarationContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

ParameterdeclarationContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

ParameterdeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

ParameterdeclarationContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

ParameterdeclarationContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

ParameterdeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParameterdeclaration(this);
	}
};

ParameterdeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParameterdeclaration(this);
	}
};




CPP14Parser.ParameterdeclarationContext = ParameterdeclarationContext;

CPP14Parser.prototype.parameterdeclaration = function() {

    var localctx = new ParameterdeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 268, CPP14Parser.RULE_parameterdeclaration);
    var _la = 0; // Token type
    try {
        this.state = 2266;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,219,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2236;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2235;
                this.attributespecifierseq(0);
            }

            this.state = 2238;
            this.declspecifierseq();
            this.state = 2239;
            this.declarator();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2242;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2241;
                this.attributespecifierseq(0);
            }

            this.state = 2244;
            this.declspecifierseq();
            this.state = 2245;
            this.declarator();
            this.state = 2246;
            this.match(CPP14Parser.Assign);
            this.state = 2247;
            this.initializerclause();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2250;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2249;
                this.attributespecifierseq(0);
            }

            this.state = 2252;
            this.declspecifierseq();
            this.state = 2254;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,216,this._ctx);
            if(la_===1) {
                this.state = 2253;
                this.abstractdeclarator();

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2257;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2256;
                this.attributespecifierseq(0);
            }

            this.state = 2259;
            this.declspecifierseq();
            this.state = 2261;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 2260;
                this.abstractdeclarator();
            }

            this.state = 2263;
            this.match(CPP14Parser.Assign);
            this.state = 2264;
            this.initializerclause();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FunctiondefinitionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functiondefinition;
    return this;
}

FunctiondefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunctiondefinitionContext.prototype.constructor = FunctiondefinitionContext;

FunctiondefinitionContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

FunctiondefinitionContext.prototype.functionbody = function() {
    return this.getTypedRuleContext(FunctionbodyContext,0);
};

FunctiondefinitionContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

FunctiondefinitionContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

FunctiondefinitionContext.prototype.virtspecifierseq = function() {
    return this.getTypedRuleContext(VirtspecifierseqContext,0);
};

FunctiondefinitionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctiondefinition(this);
	}
};

FunctiondefinitionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctiondefinition(this);
	}
};




CPP14Parser.FunctiondefinitionContext = FunctiondefinitionContext;

CPP14Parser.prototype.functiondefinition = function() {

    var localctx = new FunctiondefinitionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 270, CPP14Parser.RULE_functiondefinition);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2269;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 2268;
            this.attributespecifierseq(0);
        }

        this.state = 2272;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,221,this._ctx);
        if(la_===1) {
            this.state = 2271;
            this.declspecifierseq();

        }
        this.state = 2274;
        this.declarator();
        this.state = 2276;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Final || _la===CPP14Parser.Override) {
            this.state = 2275;
            this.virtspecifierseq(0);
        }

        this.state = 2278;
        this.functionbody();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FunctionbodyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functionbody;
    return this;
}

FunctionbodyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunctionbodyContext.prototype.constructor = FunctionbodyContext;

FunctionbodyContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

FunctionbodyContext.prototype.ctorinitializer = function() {
    return this.getTypedRuleContext(CtorinitializerContext,0);
};

FunctionbodyContext.prototype.functiontryblock = function() {
    return this.getTypedRuleContext(FunctiontryblockContext,0);
};

FunctionbodyContext.prototype.Default = function() {
    return this.getToken(CPP14Parser.Default, 0);
};

FunctionbodyContext.prototype.Delete = function() {
    return this.getToken(CPP14Parser.Delete, 0);
};

FunctionbodyContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctionbody(this);
	}
};

FunctionbodyContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctionbody(this);
	}
};




CPP14Parser.FunctionbodyContext = FunctionbodyContext;

CPP14Parser.prototype.functionbody = function() {

    var localctx = new FunctionbodyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 272, CPP14Parser.RULE_functionbody);
    var _la = 0; // Token type
    try {
        this.state = 2291;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,224,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2281;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 2280;
                this.ctorinitializer();
            }

            this.state = 2283;
            this.compoundstatement();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2284;
            this.functiontryblock();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2285;
            this.match(CPP14Parser.Assign);
            this.state = 2286;
            this.match(CPP14Parser.Default);
            this.state = 2287;
            this.match(CPP14Parser.Semi);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2288;
            this.match(CPP14Parser.Assign);
            this.state = 2289;
            this.match(CPP14Parser.Delete);
            this.state = 2290;
            this.match(CPP14Parser.Semi);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initializer;
    return this;
}

InitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InitializerContext.prototype.constructor = InitializerContext;

InitializerContext.prototype.braceorequalinitializer = function() {
    return this.getTypedRuleContext(BraceorequalinitializerContext,0);
};

InitializerContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

InitializerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitializer(this);
	}
};

InitializerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitializer(this);
	}
};




CPP14Parser.InitializerContext = InitializerContext;

CPP14Parser.prototype.initializer = function() {

    var localctx = new InitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 274, CPP14Parser.RULE_initializer);
    try {
        this.state = 2298;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftBrace:
        case CPP14Parser.Assign:
            this.enterOuterAlt(localctx, 1);
            this.state = 2293;
            this.braceorequalinitializer();
            break;
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 2);
            this.state = 2294;
            this.match(CPP14Parser.LeftParen);
            this.state = 2295;
            this.expressionlist();
            this.state = 2296;
            this.match(CPP14Parser.RightParen);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BraceorequalinitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_braceorequalinitializer;
    return this;
}

BraceorequalinitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BraceorequalinitializerContext.prototype.constructor = BraceorequalinitializerContext;

BraceorequalinitializerContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

BraceorequalinitializerContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

BraceorequalinitializerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBraceorequalinitializer(this);
	}
};

BraceorequalinitializerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBraceorequalinitializer(this);
	}
};




CPP14Parser.BraceorequalinitializerContext = BraceorequalinitializerContext;

CPP14Parser.prototype.braceorequalinitializer = function() {

    var localctx = new BraceorequalinitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 276, CPP14Parser.RULE_braceorequalinitializer);
    try {
        this.state = 2303;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Assign:
            this.enterOuterAlt(localctx, 1);
            this.state = 2300;
            this.match(CPP14Parser.Assign);
            this.state = 2301;
            this.initializerclause();
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 2302;
            this.bracedinitlist();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InitializerclauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initializerclause;
    return this;
}

InitializerclauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InitializerclauseContext.prototype.constructor = InitializerclauseContext;

InitializerclauseContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

InitializerclauseContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

InitializerclauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitializerclause(this);
	}
};

InitializerclauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitializerclause(this);
	}
};




CPP14Parser.InitializerclauseContext = InitializerclauseContext;

CPP14Parser.prototype.initializerclause = function() {

    var localctx = new InitializerclauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 278, CPP14Parser.RULE_initializerclause);
    try {
        this.state = 2307;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Alignof:
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Const_cast:
        case CPP14Parser.Decltype:
        case CPP14Parser.Delete:
        case CPP14Parser.Double:
        case CPP14Parser.Dynamic_cast:
        case CPP14Parser.False:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.New:
        case CPP14Parser.Noexcept:
        case CPP14Parser.Nullptr:
        case CPP14Parser.Operator:
        case CPP14Parser.Reinterpret_cast:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Sizeof:
        case CPP14Parser.Static_cast:
        case CPP14Parser.This:
        case CPP14Parser.Throw:
        case CPP14Parser.True:
        case CPP14Parser.Typeid:
        case CPP14Parser.Typename:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
        case CPP14Parser.Plus:
        case CPP14Parser.Minus:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Or:
        case CPP14Parser.Tilde:
        case CPP14Parser.Not:
        case CPP14Parser.PlusPlus:
        case CPP14Parser.MinusMinus:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
        case CPP14Parser.Integerliteral:
        case CPP14Parser.Characterliteral:
        case CPP14Parser.Floatingliteral:
        case CPP14Parser.Stringliteral:
        case CPP14Parser.Userdefinedintegerliteral:
        case CPP14Parser.Userdefinedfloatingliteral:
        case CPP14Parser.Userdefinedstringliteral:
        case CPP14Parser.Userdefinedcharacterliteral:
            this.enterOuterAlt(localctx, 1);
            this.state = 2305;
            this.assignmentexpression();
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 2306;
            this.bracedinitlist();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function InitializerlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initializerlist;
    return this;
}

InitializerlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InitializerlistContext.prototype.constructor = InitializerlistContext;

InitializerlistContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

InitializerlistContext.prototype.initializerlist = function() {
    return this.getTypedRuleContext(InitializerlistContext,0);
};

InitializerlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitializerlist(this);
	}
};

InitializerlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitializerlist(this);
	}
};



CPP14Parser.prototype.initializerlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new InitializerlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 280;
    this.enterRecursionRule(localctx, 280, CPP14Parser.RULE_initializerlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2310;
        this.initializerclause();
        this.state = 2312;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,228,this._ctx);
        if(la_===1) {
            this.state = 2311;
            this.match(CPP14Parser.Ellipsis);

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2322;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,230,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new InitializerlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_initializerlist);
                this.state = 2314;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2315;
                this.match(CPP14Parser.Comma);
                this.state = 2316;
                this.initializerclause();
                this.state = 2318;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,229,this._ctx);
                if(la_===1) {
                    this.state = 2317;
                    this.match(CPP14Parser.Ellipsis);

                } 
            }
            this.state = 2324;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,230,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function BracedinitlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_bracedinitlist;
    return this;
}

BracedinitlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BracedinitlistContext.prototype.constructor = BracedinitlistContext;

BracedinitlistContext.prototype.initializerlist = function() {
    return this.getTypedRuleContext(InitializerlistContext,0);
};

BracedinitlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBracedinitlist(this);
	}
};

BracedinitlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBracedinitlist(this);
	}
};




CPP14Parser.BracedinitlistContext = BracedinitlistContext;

CPP14Parser.prototype.bracedinitlist = function() {

    var localctx = new BracedinitlistContext(this, this._ctx, this.state);
    this.enterRule(localctx, 282, CPP14Parser.RULE_bracedinitlist);
    var _la = 0; // Token type
    try {
        this.state = 2334;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,232,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2325;
            this.match(CPP14Parser.LeftBrace);
            this.state = 2326;
            this.initializerlist(0);
            this.state = 2328;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Comma) {
                this.state = 2327;
                this.match(CPP14Parser.Comma);
            }

            this.state = 2330;
            this.match(CPP14Parser.RightBrace);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2332;
            this.match(CPP14Parser.LeftBrace);
            this.state = 2333;
            this.match(CPP14Parser.RightBrace);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassnameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classname;
    return this;
}

ClassnameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassnameContext.prototype.constructor = ClassnameContext;

ClassnameContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

ClassnameContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

ClassnameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassname(this);
	}
};

ClassnameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassname(this);
	}
};




CPP14Parser.ClassnameContext = ClassnameContext;

CPP14Parser.prototype.classname = function() {

    var localctx = new ClassnameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 284, CPP14Parser.RULE_classname);
    try {
        this.state = 2338;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,233,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2336;
            this.match(CPP14Parser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2337;
            this.simpletemplateid();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classspecifier;
    return this;
}

ClassspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassspecifierContext.prototype.constructor = ClassspecifierContext;

ClassspecifierContext.prototype.classhead = function() {
    return this.getTypedRuleContext(ClassheadContext,0);
};

ClassspecifierContext.prototype.memberspecification = function() {
    return this.getTypedRuleContext(MemberspecificationContext,0);
};

ClassspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassspecifier(this);
	}
};

ClassspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassspecifier(this);
	}
};




CPP14Parser.ClassspecifierContext = ClassspecifierContext;

CPP14Parser.prototype.classspecifier = function() {

    var localctx = new ClassspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 286, CPP14Parser.RULE_classspecifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2340;
        this.classhead();
        this.state = 2341;
        this.match(CPP14Parser.LeftBrace);
        this.state = 2343;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Private - 32)) | (1 << (CPP14Parser.Protected - 32)) | (1 << (CPP14Parser.Public - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
            this.state = 2342;
            this.memberspecification();
        }

        this.state = 2345;
        this.match(CPP14Parser.RightBrace);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassheadContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classhead;
    return this;
}

ClassheadContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassheadContext.prototype.constructor = ClassheadContext;

ClassheadContext.prototype.classkey = function() {
    return this.getTypedRuleContext(ClasskeyContext,0);
};

ClassheadContext.prototype.classheadname = function() {
    return this.getTypedRuleContext(ClassheadnameContext,0);
};

ClassheadContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

ClassheadContext.prototype.classvirtspecifier = function() {
    return this.getTypedRuleContext(ClassvirtspecifierContext,0);
};

ClassheadContext.prototype.baseclause = function() {
    return this.getTypedRuleContext(BaseclauseContext,0);
};

ClassheadContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClasshead(this);
	}
};

ClassheadContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClasshead(this);
	}
};




CPP14Parser.ClassheadContext = ClassheadContext;

CPP14Parser.prototype.classhead = function() {

    var localctx = new ClassheadContext(this, this._ctx, this.state);
    this.enterRule(localctx, 288, CPP14Parser.RULE_classhead);
    var _la = 0; // Token type
    try {
        this.state = 2365;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,240,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2347;
            this.classkey();
            this.state = 2349;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2348;
                this.attributespecifierseq(0);
            }

            this.state = 2351;
            this.classheadname();
            this.state = 2353;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Final) {
                this.state = 2352;
                this.classvirtspecifier();
            }

            this.state = 2356;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 2355;
                this.baseclause();
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2358;
            this.classkey();
            this.state = 2360;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2359;
                this.attributespecifierseq(0);
            }

            this.state = 2363;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 2362;
                this.baseclause();
            }

            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassheadnameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classheadname;
    return this;
}

ClassheadnameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassheadnameContext.prototype.constructor = ClassheadnameContext;

ClassheadnameContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

ClassheadnameContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

ClassheadnameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassheadname(this);
	}
};

ClassheadnameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassheadname(this);
	}
};




CPP14Parser.ClassheadnameContext = ClassheadnameContext;

CPP14Parser.prototype.classheadname = function() {

    var localctx = new ClassheadnameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 290, CPP14Parser.RULE_classheadname);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2368;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,241,this._ctx);
        if(la_===1) {
            this.state = 2367;
            this.nestednamespecifier(0);

        }
        this.state = 2370;
        this.classname();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassvirtspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classvirtspecifier;
    return this;
}

ClassvirtspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassvirtspecifierContext.prototype.constructor = ClassvirtspecifierContext;

ClassvirtspecifierContext.prototype.Final = function() {
    return this.getToken(CPP14Parser.Final, 0);
};

ClassvirtspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassvirtspecifier(this);
	}
};

ClassvirtspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassvirtspecifier(this);
	}
};




CPP14Parser.ClassvirtspecifierContext = ClassvirtspecifierContext;

CPP14Parser.prototype.classvirtspecifier = function() {

    var localctx = new ClassvirtspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 292, CPP14Parser.RULE_classvirtspecifier);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2372;
        this.match(CPP14Parser.Final);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClasskeyContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classkey;
    return this;
}

ClasskeyContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClasskeyContext.prototype.constructor = ClasskeyContext;

ClasskeyContext.prototype.Class = function() {
    return this.getToken(CPP14Parser.Class, 0);
};

ClasskeyContext.prototype.Struct = function() {
    return this.getToken(CPP14Parser.Struct, 0);
};

ClasskeyContext.prototype.Union = function() {
    return this.getToken(CPP14Parser.Union, 0);
};

ClasskeyContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClasskey(this);
	}
};

ClasskeyContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClasskey(this);
	}
};




CPP14Parser.ClasskeyContext = ClasskeyContext;

CPP14Parser.prototype.classkey = function() {

    var localctx = new ClasskeyContext(this, this._ctx, this.state);
    this.enterRule(localctx, 294, CPP14Parser.RULE_classkey);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2374;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.Class || _la===CPP14Parser.Struct || _la===CPP14Parser.Union)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MemberspecificationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberspecification;
    return this;
}

MemberspecificationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MemberspecificationContext.prototype.constructor = MemberspecificationContext;

MemberspecificationContext.prototype.memberdeclaration = function() {
    return this.getTypedRuleContext(MemberdeclarationContext,0);
};

MemberspecificationContext.prototype.memberspecification = function() {
    return this.getTypedRuleContext(MemberspecificationContext,0);
};

MemberspecificationContext.prototype.accessspecifier = function() {
    return this.getTypedRuleContext(AccessspecifierContext,0);
};

MemberspecificationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberspecification(this);
	}
};

MemberspecificationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberspecification(this);
	}
};




CPP14Parser.MemberspecificationContext = MemberspecificationContext;

CPP14Parser.prototype.memberspecification = function() {

    var localctx = new MemberspecificationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 296, CPP14Parser.RULE_memberspecification);
    var _la = 0; // Token type
    try {
        this.state = 2385;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Alignas:
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Class:
        case CPP14Parser.Const:
        case CPP14Parser.Constexpr:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Enum:
        case CPP14Parser.Explicit:
        case CPP14Parser.Extern:
        case CPP14Parser.Float:
        case CPP14Parser.Friend:
        case CPP14Parser.Inline:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Mutable:
        case CPP14Parser.Operator:
        case CPP14Parser.Register:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Static:
        case CPP14Parser.Static_assert:
        case CPP14Parser.Struct:
        case CPP14Parser.Template:
        case CPP14Parser.Thread_local:
        case CPP14Parser.Typedef:
        case CPP14Parser.Typename:
        case CPP14Parser.Union:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Using:
        case CPP14Parser.Virtual:
        case CPP14Parser.Void:
        case CPP14Parser.Volatile:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Tilde:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Colon:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Semi:
        case CPP14Parser.Ellipsis:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 2376;
            this.memberdeclaration();
            this.state = 2378;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Private - 32)) | (1 << (CPP14Parser.Protected - 32)) | (1 << (CPP14Parser.Public - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 2377;
                this.memberspecification();
            }

            break;
        case CPP14Parser.Private:
        case CPP14Parser.Protected:
        case CPP14Parser.Public:
            this.enterOuterAlt(localctx, 2);
            this.state = 2380;
            this.accessspecifier();
            this.state = 2381;
            this.match(CPP14Parser.Colon);
            this.state = 2383;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Private - 32)) | (1 << (CPP14Parser.Protected - 32)) | (1 << (CPP14Parser.Public - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 2382;
                this.memberspecification();
            }

            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MemberdeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberdeclaration;
    return this;
}

MemberdeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MemberdeclarationContext.prototype.constructor = MemberdeclarationContext;

MemberdeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

MemberdeclarationContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

MemberdeclarationContext.prototype.memberdeclaratorlist = function() {
    return this.getTypedRuleContext(MemberdeclaratorlistContext,0);
};

MemberdeclarationContext.prototype.functiondefinition = function() {
    return this.getTypedRuleContext(FunctiondefinitionContext,0);
};

MemberdeclarationContext.prototype.usingdeclaration = function() {
    return this.getTypedRuleContext(UsingdeclarationContext,0);
};

MemberdeclarationContext.prototype.static_assertdeclaration = function() {
    return this.getTypedRuleContext(Static_assertdeclarationContext,0);
};

MemberdeclarationContext.prototype.templatedeclaration = function() {
    return this.getTypedRuleContext(TemplatedeclarationContext,0);
};

MemberdeclarationContext.prototype.aliasdeclaration = function() {
    return this.getTypedRuleContext(AliasdeclarationContext,0);
};

MemberdeclarationContext.prototype.emptydeclaration = function() {
    return this.getTypedRuleContext(EmptydeclarationContext,0);
};

MemberdeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberdeclaration(this);
	}
};

MemberdeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberdeclaration(this);
	}
};




CPP14Parser.MemberdeclarationContext = MemberdeclarationContext;

CPP14Parser.prototype.memberdeclaration = function() {

    var localctx = new MemberdeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 298, CPP14Parser.RULE_memberdeclaration);
    var _la = 0; // Token type
    try {
        this.state = 2403;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,248,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2388;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,245,this._ctx);
            if(la_===1) {
                this.state = 2387;
                this.attributespecifierseq(0);

            }
            this.state = 2391;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,246,this._ctx);
            if(la_===1) {
                this.state = 2390;
                this.declspecifierseq();

            }
            this.state = 2394;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.Decltype || _la===CPP14Parser.Operator || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)) | (1 << (CPP14Parser.Tilde - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 2393;
                this.memberdeclaratorlist(0);
            }

            this.state = 2396;
            this.match(CPP14Parser.Semi);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2397;
            this.functiondefinition();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2398;
            this.usingdeclaration();
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2399;
            this.static_assertdeclaration();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 2400;
            this.templatedeclaration();
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 2401;
            this.aliasdeclaration();
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 2402;
            this.emptydeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MemberdeclaratorlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberdeclaratorlist;
    return this;
}

MemberdeclaratorlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MemberdeclaratorlistContext.prototype.constructor = MemberdeclaratorlistContext;

MemberdeclaratorlistContext.prototype.memberdeclarator = function() {
    return this.getTypedRuleContext(MemberdeclaratorContext,0);
};

MemberdeclaratorlistContext.prototype.memberdeclaratorlist = function() {
    return this.getTypedRuleContext(MemberdeclaratorlistContext,0);
};

MemberdeclaratorlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberdeclaratorlist(this);
	}
};

MemberdeclaratorlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberdeclaratorlist(this);
	}
};



CPP14Parser.prototype.memberdeclaratorlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new MemberdeclaratorlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 300;
    this.enterRecursionRule(localctx, 300, CPP14Parser.RULE_memberdeclaratorlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2406;
        this.memberdeclarator();
        this._ctx.stop = this._input.LT(-1);
        this.state = 2413;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,249,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new MemberdeclaratorlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_memberdeclaratorlist);
                this.state = 2408;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2409;
                this.match(CPP14Parser.Comma);
                this.state = 2410;
                this.memberdeclarator(); 
            }
            this.state = 2415;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,249,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function MemberdeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberdeclarator;
    return this;
}

MemberdeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MemberdeclaratorContext.prototype.constructor = MemberdeclaratorContext;

MemberdeclaratorContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

MemberdeclaratorContext.prototype.virtspecifierseq = function() {
    return this.getTypedRuleContext(VirtspecifierseqContext,0);
};

MemberdeclaratorContext.prototype.purespecifier = function() {
    return this.getTypedRuleContext(PurespecifierContext,0);
};

MemberdeclaratorContext.prototype.braceorequalinitializer = function() {
    return this.getTypedRuleContext(BraceorequalinitializerContext,0);
};

MemberdeclaratorContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

MemberdeclaratorContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

MemberdeclaratorContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

MemberdeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberdeclarator(this);
	}
};

MemberdeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberdeclarator(this);
	}
};




CPP14Parser.MemberdeclaratorContext = MemberdeclaratorContext;

CPP14Parser.prototype.memberdeclarator = function() {

    var localctx = new MemberdeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 302, CPP14Parser.RULE_memberdeclarator);
    var _la = 0; // Token type
    try {
        this.state = 2435;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,255,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2416;
            this.declarator();
            this.state = 2418;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,250,this._ctx);
            if(la_===1) {
                this.state = 2417;
                this.virtspecifierseq(0);

            }
            this.state = 2421;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,251,this._ctx);
            if(la_===1) {
                this.state = 2420;
                this.purespecifier();

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2423;
            this.declarator();
            this.state = 2425;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,252,this._ctx);
            if(la_===1) {
                this.state = 2424;
                this.braceorequalinitializer();

            }
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2428;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 2427;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 2431;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2430;
                this.attributespecifierseq(0);
            }

            this.state = 2433;
            this.match(CPP14Parser.Colon);
            this.state = 2434;
            this.constantexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function VirtspecifierseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_virtspecifierseq;
    return this;
}

VirtspecifierseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VirtspecifierseqContext.prototype.constructor = VirtspecifierseqContext;

VirtspecifierseqContext.prototype.virtspecifier = function() {
    return this.getTypedRuleContext(VirtspecifierContext,0);
};

VirtspecifierseqContext.prototype.virtspecifierseq = function() {
    return this.getTypedRuleContext(VirtspecifierseqContext,0);
};

VirtspecifierseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterVirtspecifierseq(this);
	}
};

VirtspecifierseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitVirtspecifierseq(this);
	}
};



CPP14Parser.prototype.virtspecifierseq = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new VirtspecifierseqContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 304;
    this.enterRecursionRule(localctx, 304, CPP14Parser.RULE_virtspecifierseq, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2438;
        this.virtspecifier();
        this._ctx.stop = this._input.LT(-1);
        this.state = 2444;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,256,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new VirtspecifierseqContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_virtspecifierseq);
                this.state = 2440;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2441;
                this.virtspecifier(); 
            }
            this.state = 2446;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,256,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function VirtspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_virtspecifier;
    return this;
}

VirtspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VirtspecifierContext.prototype.constructor = VirtspecifierContext;

VirtspecifierContext.prototype.Override = function() {
    return this.getToken(CPP14Parser.Override, 0);
};

VirtspecifierContext.prototype.Final = function() {
    return this.getToken(CPP14Parser.Final, 0);
};

VirtspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterVirtspecifier(this);
	}
};

VirtspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitVirtspecifier(this);
	}
};




CPP14Parser.VirtspecifierContext = VirtspecifierContext;

CPP14Parser.prototype.virtspecifier = function() {

    var localctx = new VirtspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 306, CPP14Parser.RULE_virtspecifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2447;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.Final || _la===CPP14Parser.Override)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PurespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_purespecifier;
    this.val = null; // Token
    return this;
}

PurespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PurespecifierContext.prototype.constructor = PurespecifierContext;

PurespecifierContext.prototype.Assign = function() {
    return this.getToken(CPP14Parser.Assign, 0);
};

PurespecifierContext.prototype.Octalliteral = function() {
    return this.getToken(CPP14Parser.Octalliteral, 0);
};

PurespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPurespecifier(this);
	}
};

PurespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPurespecifier(this);
	}
};




CPP14Parser.PurespecifierContext = PurespecifierContext;

CPP14Parser.prototype.purespecifier = function() {

    var localctx = new PurespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 308, CPP14Parser.RULE_purespecifier);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2449;
        this.match(CPP14Parser.Assign);
        this.state = 2450;
        localctx.val = this.match(CPP14Parser.Octalliteral);
        if((localctx.val===null ? null : localctx.val.text).compareTo("0")!=0) throw new InputMismatchException(this);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BaseclauseContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_baseclause;
    return this;
}

BaseclauseContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BaseclauseContext.prototype.constructor = BaseclauseContext;

BaseclauseContext.prototype.basespecifierlist = function() {
    return this.getTypedRuleContext(BasespecifierlistContext,0);
};

BaseclauseContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBaseclause(this);
	}
};

BaseclauseContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBaseclause(this);
	}
};




CPP14Parser.BaseclauseContext = BaseclauseContext;

CPP14Parser.prototype.baseclause = function() {

    var localctx = new BaseclauseContext(this, this._ctx, this.state);
    this.enterRule(localctx, 310, CPP14Parser.RULE_baseclause);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2453;
        this.match(CPP14Parser.Colon);
        this.state = 2454;
        this.basespecifierlist(0);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BasespecifierlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_basespecifierlist;
    return this;
}

BasespecifierlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BasespecifierlistContext.prototype.constructor = BasespecifierlistContext;

BasespecifierlistContext.prototype.basespecifier = function() {
    return this.getTypedRuleContext(BasespecifierContext,0);
};

BasespecifierlistContext.prototype.basespecifierlist = function() {
    return this.getTypedRuleContext(BasespecifierlistContext,0);
};

BasespecifierlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBasespecifierlist(this);
	}
};

BasespecifierlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBasespecifierlist(this);
	}
};



CPP14Parser.prototype.basespecifierlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new BasespecifierlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 312;
    this.enterRecursionRule(localctx, 312, CPP14Parser.RULE_basespecifierlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2457;
        this.basespecifier();
        this.state = 2459;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,257,this._ctx);
        if(la_===1) {
            this.state = 2458;
            this.match(CPP14Parser.Ellipsis);

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2469;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,259,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new BasespecifierlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_basespecifierlist);
                this.state = 2461;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2462;
                this.match(CPP14Parser.Comma);
                this.state = 2463;
                this.basespecifier();
                this.state = 2465;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,258,this._ctx);
                if(la_===1) {
                    this.state = 2464;
                    this.match(CPP14Parser.Ellipsis);

                } 
            }
            this.state = 2471;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,259,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function BasespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_basespecifier;
    return this;
}

BasespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BasespecifierContext.prototype.constructor = BasespecifierContext;

BasespecifierContext.prototype.basetypespecifier = function() {
    return this.getTypedRuleContext(BasetypespecifierContext,0);
};

BasespecifierContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

BasespecifierContext.prototype.Virtual = function() {
    return this.getToken(CPP14Parser.Virtual, 0);
};

BasespecifierContext.prototype.accessspecifier = function() {
    return this.getTypedRuleContext(AccessspecifierContext,0);
};

BasespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBasespecifier(this);
	}
};

BasespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBasespecifier(this);
	}
};




CPP14Parser.BasespecifierContext = BasespecifierContext;

CPP14Parser.prototype.basespecifier = function() {

    var localctx = new BasespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 314, CPP14Parser.RULE_basespecifier);
    var _la = 0; // Token type
    try {
        this.state = 2493;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,265,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2473;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2472;
                this.attributespecifierseq(0);
            }

            this.state = 2475;
            this.basetypespecifier();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2477;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2476;
                this.attributespecifierseq(0);
            }

            this.state = 2479;
            this.match(CPP14Parser.Virtual);
            this.state = 2481;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(((((_la - 47)) & ~0x1f) == 0 && ((1 << (_la - 47)) & ((1 << (CPP14Parser.Private - 47)) | (1 << (CPP14Parser.Protected - 47)) | (1 << (CPP14Parser.Public - 47)))) !== 0)) {
                this.state = 2480;
                this.accessspecifier();
            }

            this.state = 2483;
            this.basetypespecifier();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2485;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2484;
                this.attributespecifierseq(0);
            }

            this.state = 2487;
            this.accessspecifier();
            this.state = 2489;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Virtual) {
                this.state = 2488;
                this.match(CPP14Parser.Virtual);
            }

            this.state = 2491;
            this.basetypespecifier();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ClassordecltypeContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classordecltype;
    return this;
}

ClassordecltypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ClassordecltypeContext.prototype.constructor = ClassordecltypeContext;

ClassordecltypeContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

ClassordecltypeContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

ClassordecltypeContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

ClassordecltypeContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassordecltype(this);
	}
};

ClassordecltypeContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassordecltype(this);
	}
};




CPP14Parser.ClassordecltypeContext = ClassordecltypeContext;

CPP14Parser.prototype.classordecltype = function() {

    var localctx = new ClassordecltypeContext(this, this._ctx, this.state);
    this.enterRule(localctx, 316, CPP14Parser.RULE_classordecltype);
    try {
        this.state = 2500;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,267,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2496;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,266,this._ctx);
            if(la_===1) {
                this.state = 2495;
                this.nestednamespecifier(0);

            }
            this.state = 2498;
            this.classname();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2499;
            this.decltypespecifier();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BasetypespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_basetypespecifier;
    return this;
}

BasetypespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BasetypespecifierContext.prototype.constructor = BasetypespecifierContext;

BasetypespecifierContext.prototype.classordecltype = function() {
    return this.getTypedRuleContext(ClassordecltypeContext,0);
};

BasetypespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBasetypespecifier(this);
	}
};

BasetypespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBasetypespecifier(this);
	}
};




CPP14Parser.BasetypespecifierContext = BasetypespecifierContext;

CPP14Parser.prototype.basetypespecifier = function() {

    var localctx = new BasetypespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 318, CPP14Parser.RULE_basetypespecifier);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2502;
        this.classordecltype();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function AccessspecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_accessspecifier;
    return this;
}

AccessspecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AccessspecifierContext.prototype.constructor = AccessspecifierContext;

AccessspecifierContext.prototype.Private = function() {
    return this.getToken(CPP14Parser.Private, 0);
};

AccessspecifierContext.prototype.Protected = function() {
    return this.getToken(CPP14Parser.Protected, 0);
};

AccessspecifierContext.prototype.Public = function() {
    return this.getToken(CPP14Parser.Public, 0);
};

AccessspecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAccessspecifier(this);
	}
};

AccessspecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAccessspecifier(this);
	}
};




CPP14Parser.AccessspecifierContext = AccessspecifierContext;

CPP14Parser.prototype.accessspecifier = function() {

    var localctx = new AccessspecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 320, CPP14Parser.RULE_accessspecifier);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2504;
        _la = this._input.LA(1);
        if(!(((((_la - 47)) & ~0x1f) == 0 && ((1 << (_la - 47)) & ((1 << (CPP14Parser.Private - 47)) | (1 << (CPP14Parser.Protected - 47)) | (1 << (CPP14Parser.Public - 47)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConversionfunctionidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conversionfunctionid;
    return this;
}

ConversionfunctionidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConversionfunctionidContext.prototype.constructor = ConversionfunctionidContext;

ConversionfunctionidContext.prototype.Operator = function() {
    return this.getToken(CPP14Parser.Operator, 0);
};

ConversionfunctionidContext.prototype.conversiontypeid = function() {
    return this.getTypedRuleContext(ConversiontypeidContext,0);
};

ConversionfunctionidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConversionfunctionid(this);
	}
};

ConversionfunctionidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConversionfunctionid(this);
	}
};




CPP14Parser.ConversionfunctionidContext = ConversionfunctionidContext;

CPP14Parser.prototype.conversionfunctionid = function() {

    var localctx = new ConversionfunctionidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 322, CPP14Parser.RULE_conversionfunctionid);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2506;
        this.match(CPP14Parser.Operator);
        this.state = 2507;
        this.conversiontypeid();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConversiontypeidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conversiontypeid;
    return this;
}

ConversiontypeidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConversiontypeidContext.prototype.constructor = ConversiontypeidContext;

ConversiontypeidContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

ConversiontypeidContext.prototype.conversiondeclarator = function() {
    return this.getTypedRuleContext(ConversiondeclaratorContext,0);
};

ConversiontypeidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConversiontypeid(this);
	}
};

ConversiontypeidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConversiontypeid(this);
	}
};




CPP14Parser.ConversiontypeidContext = ConversiontypeidContext;

CPP14Parser.prototype.conversiontypeid = function() {

    var localctx = new ConversiontypeidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 324, CPP14Parser.RULE_conversiontypeid);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2509;
        this.typespecifierseq();
        this.state = 2511;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,268,this._ctx);
        if(la_===1) {
            this.state = 2510;
            this.conversiondeclarator();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ConversiondeclaratorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conversiondeclarator;
    return this;
}

ConversiondeclaratorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ConversiondeclaratorContext.prototype.constructor = ConversiondeclaratorContext;

ConversiondeclaratorContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

ConversiondeclaratorContext.prototype.conversiondeclarator = function() {
    return this.getTypedRuleContext(ConversiondeclaratorContext,0);
};

ConversiondeclaratorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConversiondeclarator(this);
	}
};

ConversiondeclaratorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConversiondeclarator(this);
	}
};




CPP14Parser.ConversiondeclaratorContext = ConversiondeclaratorContext;

CPP14Parser.prototype.conversiondeclarator = function() {

    var localctx = new ConversiondeclaratorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 326, CPP14Parser.RULE_conversiondeclarator);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2513;
        this.ptroperator();
        this.state = 2515;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,269,this._ctx);
        if(la_===1) {
            this.state = 2514;
            this.conversiondeclarator();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function CtorinitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ctorinitializer;
    return this;
}

CtorinitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
CtorinitializerContext.prototype.constructor = CtorinitializerContext;

CtorinitializerContext.prototype.meminitializerlist = function() {
    return this.getTypedRuleContext(MeminitializerlistContext,0);
};

CtorinitializerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCtorinitializer(this);
	}
};

CtorinitializerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCtorinitializer(this);
	}
};




CPP14Parser.CtorinitializerContext = CtorinitializerContext;

CPP14Parser.prototype.ctorinitializer = function() {

    var localctx = new CtorinitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 328, CPP14Parser.RULE_ctorinitializer);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2517;
        this.match(CPP14Parser.Colon);
        this.state = 2518;
        this.meminitializerlist();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MeminitializerlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_meminitializerlist;
    return this;
}

MeminitializerlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MeminitializerlistContext.prototype.constructor = MeminitializerlistContext;

MeminitializerlistContext.prototype.meminitializer = function() {
    return this.getTypedRuleContext(MeminitializerContext,0);
};

MeminitializerlistContext.prototype.meminitializerlist = function() {
    return this.getTypedRuleContext(MeminitializerlistContext,0);
};

MeminitializerlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMeminitializerlist(this);
	}
};

MeminitializerlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMeminitializerlist(this);
	}
};




CPP14Parser.MeminitializerlistContext = MeminitializerlistContext;

CPP14Parser.prototype.meminitializerlist = function() {

    var localctx = new MeminitializerlistContext(this, this._ctx, this.state);
    this.enterRule(localctx, 330, CPP14Parser.RULE_meminitializerlist);
    var _la = 0; // Token type
    try {
        this.state = 2531;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,272,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2520;
            this.meminitializer();
            this.state = 2522;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 2521;
                this.match(CPP14Parser.Ellipsis);
            }

            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2524;
            this.meminitializer();
            this.state = 2526;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 2525;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 2528;
            this.match(CPP14Parser.Comma);
            this.state = 2529;
            this.meminitializerlist();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MeminitializerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_meminitializer;
    return this;
}

MeminitializerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MeminitializerContext.prototype.constructor = MeminitializerContext;

MeminitializerContext.prototype.meminitializerid = function() {
    return this.getTypedRuleContext(MeminitializeridContext,0);
};

MeminitializerContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

MeminitializerContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

MeminitializerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMeminitializer(this);
	}
};

MeminitializerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMeminitializer(this);
	}
};




CPP14Parser.MeminitializerContext = MeminitializerContext;

CPP14Parser.prototype.meminitializer = function() {

    var localctx = new MeminitializerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 332, CPP14Parser.RULE_meminitializer);
    var _la = 0; // Token type
    try {
        this.state = 2543;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,274,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2533;
            this.meminitializerid();
            this.state = 2534;
            this.match(CPP14Parser.LeftParen);
            this.state = 2536;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 2535;
                this.expressionlist();
            }

            this.state = 2538;
            this.match(CPP14Parser.RightParen);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2540;
            this.meminitializerid();
            this.state = 2541;
            this.bracedinitlist();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function MeminitializeridContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_meminitializerid;
    return this;
}

MeminitializeridContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
MeminitializeridContext.prototype.constructor = MeminitializeridContext;

MeminitializeridContext.prototype.classordecltype = function() {
    return this.getTypedRuleContext(ClassordecltypeContext,0);
};

MeminitializeridContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

MeminitializeridContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMeminitializerid(this);
	}
};

MeminitializeridContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMeminitializerid(this);
	}
};




CPP14Parser.MeminitializeridContext = MeminitializeridContext;

CPP14Parser.prototype.meminitializerid = function() {

    var localctx = new MeminitializeridContext(this, this._ctx, this.state);
    this.enterRule(localctx, 334, CPP14Parser.RULE_meminitializerid);
    try {
        this.state = 2547;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,275,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2545;
            this.classordecltype();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2546;
            this.match(CPP14Parser.Identifier);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OperatorfunctionidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_operatorfunctionid;
    return this;
}

OperatorfunctionidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OperatorfunctionidContext.prototype.constructor = OperatorfunctionidContext;

OperatorfunctionidContext.prototype.Operator = function() {
    return this.getToken(CPP14Parser.Operator, 0);
};

OperatorfunctionidContext.prototype.operator = function() {
    return this.getTypedRuleContext(OperatorContext,0);
};

OperatorfunctionidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOperatorfunctionid(this);
	}
};

OperatorfunctionidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOperatorfunctionid(this);
	}
};




CPP14Parser.OperatorfunctionidContext = OperatorfunctionidContext;

CPP14Parser.prototype.operatorfunctionid = function() {

    var localctx = new OperatorfunctionidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 336, CPP14Parser.RULE_operatorfunctionid);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2549;
        this.match(CPP14Parser.Operator);
        this.state = 2550;
        this.operator();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LiteraloperatoridContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_literaloperatorid;
    return this;
}

LiteraloperatoridContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LiteraloperatoridContext.prototype.constructor = LiteraloperatoridContext;

LiteraloperatoridContext.prototype.Operator = function() {
    return this.getToken(CPP14Parser.Operator, 0);
};

LiteraloperatoridContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

LiteraloperatoridContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

LiteraloperatoridContext.prototype.Userdefinedstringliteral = function() {
    return this.getToken(CPP14Parser.Userdefinedstringliteral, 0);
};

LiteraloperatoridContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLiteraloperatorid(this);
	}
};

LiteraloperatoridContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLiteraloperatorid(this);
	}
};




CPP14Parser.LiteraloperatoridContext = LiteraloperatoridContext;

CPP14Parser.prototype.literaloperatorid = function() {

    var localctx = new LiteraloperatoridContext(this, this._ctx, this.state);
    this.enterRule(localctx, 338, CPP14Parser.RULE_literaloperatorid);
    try {
        this.state = 2557;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,276,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2552;
            this.match(CPP14Parser.Operator);
            this.state = 2553;
            this.match(CPP14Parser.Stringliteral);
            this.state = 2554;
            this.match(CPP14Parser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2555;
            this.match(CPP14Parser.Operator);
            this.state = 2556;
            this.match(CPP14Parser.Userdefinedstringliteral);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TemplatedeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templatedeclaration;
    return this;
}

TemplatedeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplatedeclarationContext.prototype.constructor = TemplatedeclarationContext;

TemplatedeclarationContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

TemplatedeclarationContext.prototype.templateparameterlist = function() {
    return this.getTypedRuleContext(TemplateparameterlistContext,0);
};

TemplatedeclarationContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

TemplatedeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplatedeclaration(this);
	}
};

TemplatedeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplatedeclaration(this);
	}
};




CPP14Parser.TemplatedeclarationContext = TemplatedeclarationContext;

CPP14Parser.prototype.templatedeclaration = function() {

    var localctx = new TemplatedeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 340, CPP14Parser.RULE_templatedeclaration);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2559;
        this.match(CPP14Parser.Template);
        this.state = 2560;
        this.match(CPP14Parser.Less);
        this.state = 2561;
        this.templateparameterlist(0);
        this.state = 2562;
        this.match(CPP14Parser.Greater);
        this.state = 2563;
        this.declaration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TemplateparameterlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateparameterlist;
    return this;
}

TemplateparameterlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplateparameterlistContext.prototype.constructor = TemplateparameterlistContext;

TemplateparameterlistContext.prototype.templateparameter = function() {
    return this.getTypedRuleContext(TemplateparameterContext,0);
};

TemplateparameterlistContext.prototype.templateparameterlist = function() {
    return this.getTypedRuleContext(TemplateparameterlistContext,0);
};

TemplateparameterlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateparameterlist(this);
	}
};

TemplateparameterlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateparameterlist(this);
	}
};



CPP14Parser.prototype.templateparameterlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new TemplateparameterlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 342;
    this.enterRecursionRule(localctx, 342, CPP14Parser.RULE_templateparameterlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2566;
        this.templateparameter();
        this._ctx.stop = this._input.LT(-1);
        this.state = 2573;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,277,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new TemplateparameterlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_templateparameterlist);
                this.state = 2568;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2569;
                this.match(CPP14Parser.Comma);
                this.state = 2570;
                this.templateparameter(); 
            }
            this.state = 2575;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,277,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function TemplateparameterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateparameter;
    return this;
}

TemplateparameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplateparameterContext.prototype.constructor = TemplateparameterContext;

TemplateparameterContext.prototype.typeparameter = function() {
    return this.getTypedRuleContext(TypeparameterContext,0);
};

TemplateparameterContext.prototype.parameterdeclaration = function() {
    return this.getTypedRuleContext(ParameterdeclarationContext,0);
};

TemplateparameterContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateparameter(this);
	}
};

TemplateparameterContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateparameter(this);
	}
};




CPP14Parser.TemplateparameterContext = TemplateparameterContext;

CPP14Parser.prototype.templateparameter = function() {

    var localctx = new TemplateparameterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 344, CPP14Parser.RULE_templateparameter);
    try {
        this.state = 2578;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,278,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2576;
            this.typeparameter();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2577;
            this.parameterdeclaration();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeparameterContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typeparameter;
    return this;
}

TypeparameterContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeparameterContext.prototype.constructor = TypeparameterContext;

TypeparameterContext.prototype.Class = function() {
    return this.getToken(CPP14Parser.Class, 0);
};

TypeparameterContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

TypeparameterContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

TypeparameterContext.prototype.Typename = function() {
    return this.getToken(CPP14Parser.Typename, 0);
};

TypeparameterContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

TypeparameterContext.prototype.templateparameterlist = function() {
    return this.getTypedRuleContext(TemplateparameterlistContext,0);
};

TypeparameterContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

TypeparameterContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypeparameter(this);
	}
};

TypeparameterContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypeparameter(this);
	}
};




CPP14Parser.TypeparameterContext = TypeparameterContext;

CPP14Parser.prototype.typeparameter = function() {

    var localctx = new TypeparameterContext(this, this._ctx, this.state);
    this.enterRule(localctx, 346, CPP14Parser.RULE_typeparameter);
    var _la = 0; // Token type
    try {
        this.state = 2628;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,288,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2580;
            this.match(CPP14Parser.Class);
            this.state = 2582;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,279,this._ctx);
            if(la_===1) {
                this.state = 2581;
                this.match(CPP14Parser.Ellipsis);

            }
            this.state = 2585;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,280,this._ctx);
            if(la_===1) {
                this.state = 2584;
                this.match(CPP14Parser.Identifier);

            }
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2587;
            this.match(CPP14Parser.Class);
            this.state = 2589;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 2588;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 2591;
            this.match(CPP14Parser.Assign);
            this.state = 2592;
            this.typeid();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2593;
            this.match(CPP14Parser.Typename);
            this.state = 2595;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,282,this._ctx);
            if(la_===1) {
                this.state = 2594;
                this.match(CPP14Parser.Ellipsis);

            }
            this.state = 2598;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,283,this._ctx);
            if(la_===1) {
                this.state = 2597;
                this.match(CPP14Parser.Identifier);

            }
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2600;
            this.match(CPP14Parser.Typename);
            this.state = 2602;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 2601;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 2604;
            this.match(CPP14Parser.Assign);
            this.state = 2605;
            this.typeid();
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 2606;
            this.match(CPP14Parser.Template);
            this.state = 2607;
            this.match(CPP14Parser.Less);
            this.state = 2608;
            this.templateparameterlist(0);
            this.state = 2609;
            this.match(CPP14Parser.Greater);
            this.state = 2610;
            this.match(CPP14Parser.Class);
            this.state = 2612;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,285,this._ctx);
            if(la_===1) {
                this.state = 2611;
                this.match(CPP14Parser.Ellipsis);

            }
            this.state = 2615;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,286,this._ctx);
            if(la_===1) {
                this.state = 2614;
                this.match(CPP14Parser.Identifier);

            }
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 2617;
            this.match(CPP14Parser.Template);
            this.state = 2618;
            this.match(CPP14Parser.Less);
            this.state = 2619;
            this.templateparameterlist(0);
            this.state = 2620;
            this.match(CPP14Parser.Greater);
            this.state = 2621;
            this.match(CPP14Parser.Class);
            this.state = 2623;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 2622;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 2625;
            this.match(CPP14Parser.Assign);
            this.state = 2626;
            this.idexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function SimpletemplateidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simpletemplateid;
    return this;
}

SimpletemplateidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SimpletemplateidContext.prototype.constructor = SimpletemplateidContext;

SimpletemplateidContext.prototype.templatename = function() {
    return this.getTypedRuleContext(TemplatenameContext,0);
};

SimpletemplateidContext.prototype.templateargumentlist = function() {
    return this.getTypedRuleContext(TemplateargumentlistContext,0);
};

SimpletemplateidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimpletemplateid(this);
	}
};

SimpletemplateidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimpletemplateid(this);
	}
};




CPP14Parser.SimpletemplateidContext = SimpletemplateidContext;

CPP14Parser.prototype.simpletemplateid = function() {

    var localctx = new SimpletemplateidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 348, CPP14Parser.RULE_simpletemplateid);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2630;
        this.templatename();
        this.state = 2631;
        this.match(CPP14Parser.Less);
        this.state = 2633;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Union - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Volatile - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
            this.state = 2632;
            this.templateargumentlist(0);
        }

        this.state = 2635;
        this.match(CPP14Parser.Greater);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TemplateidContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateid;
    return this;
}

TemplateidContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplateidContext.prototype.constructor = TemplateidContext;

TemplateidContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

TemplateidContext.prototype.operatorfunctionid = function() {
    return this.getTypedRuleContext(OperatorfunctionidContext,0);
};

TemplateidContext.prototype.templateargumentlist = function() {
    return this.getTypedRuleContext(TemplateargumentlistContext,0);
};

TemplateidContext.prototype.literaloperatorid = function() {
    return this.getTypedRuleContext(LiteraloperatoridContext,0);
};

TemplateidContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateid(this);
	}
};

TemplateidContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateid(this);
	}
};




CPP14Parser.TemplateidContext = TemplateidContext;

CPP14Parser.prototype.templateid = function() {

    var localctx = new TemplateidContext(this, this._ctx, this.state);
    this.enterRule(localctx, 350, CPP14Parser.RULE_templateid);
    var _la = 0; // Token type
    try {
        this.state = 2652;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,292,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2637;
            this.simpletemplateid();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2638;
            this.operatorfunctionid();
            this.state = 2639;
            this.match(CPP14Parser.Less);
            this.state = 2641;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Union - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Volatile - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 2640;
                this.templateargumentlist(0);
            }

            this.state = 2643;
            this.match(CPP14Parser.Greater);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2645;
            this.literaloperatorid();
            this.state = 2646;
            this.match(CPP14Parser.Less);
            this.state = 2648;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Union - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Volatile - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 2647;
                this.templateargumentlist(0);
            }

            this.state = 2650;
            this.match(CPP14Parser.Greater);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TemplatenameContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templatename;
    return this;
}

TemplatenameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplatenameContext.prototype.constructor = TemplatenameContext;

TemplatenameContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

TemplatenameContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplatename(this);
	}
};

TemplatenameContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplatename(this);
	}
};




CPP14Parser.TemplatenameContext = TemplatenameContext;

CPP14Parser.prototype.templatename = function() {

    var localctx = new TemplatenameContext(this, this._ctx, this.state);
    this.enterRule(localctx, 352, CPP14Parser.RULE_templatename);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2654;
        this.match(CPP14Parser.Identifier);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TemplateargumentlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateargumentlist;
    return this;
}

TemplateargumentlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplateargumentlistContext.prototype.constructor = TemplateargumentlistContext;

TemplateargumentlistContext.prototype.templateargument = function() {
    return this.getTypedRuleContext(TemplateargumentContext,0);
};

TemplateargumentlistContext.prototype.templateargumentlist = function() {
    return this.getTypedRuleContext(TemplateargumentlistContext,0);
};

TemplateargumentlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateargumentlist(this);
	}
};

TemplateargumentlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateargumentlist(this);
	}
};



CPP14Parser.prototype.templateargumentlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new TemplateargumentlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 354;
    this.enterRecursionRule(localctx, 354, CPP14Parser.RULE_templateargumentlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2657;
        this.templateargument();
        this.state = 2659;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,293,this._ctx);
        if(la_===1) {
            this.state = 2658;
            this.match(CPP14Parser.Ellipsis);

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2669;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,295,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new TemplateargumentlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_templateargumentlist);
                this.state = 2661;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2662;
                this.match(CPP14Parser.Comma);
                this.state = 2663;
                this.templateargument();
                this.state = 2665;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,294,this._ctx);
                if(la_===1) {
                    this.state = 2664;
                    this.match(CPP14Parser.Ellipsis);

                } 
            }
            this.state = 2671;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,295,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function TemplateargumentContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateargument;
    return this;
}

TemplateargumentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TemplateargumentContext.prototype.constructor = TemplateargumentContext;

TemplateargumentContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

TemplateargumentContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

TemplateargumentContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

TemplateargumentContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateargument(this);
	}
};

TemplateargumentContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateargument(this);
	}
};




CPP14Parser.TemplateargumentContext = TemplateargumentContext;

CPP14Parser.prototype.templateargument = function() {

    var localctx = new TemplateargumentContext(this, this._ctx, this.state);
    this.enterRule(localctx, 356, CPP14Parser.RULE_templateargument);
    try {
        this.state = 2675;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,296,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2672;
            this.typeid();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2673;
            this.constantexpression();
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2674;
            this.idexpression();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypenamespecifierContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typenamespecifier;
    return this;
}

TypenamespecifierContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypenamespecifierContext.prototype.constructor = TypenamespecifierContext;

TypenamespecifierContext.prototype.Typename = function() {
    return this.getToken(CPP14Parser.Typename, 0);
};

TypenamespecifierContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

TypenamespecifierContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

TypenamespecifierContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

TypenamespecifierContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

TypenamespecifierContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypenamespecifier(this);
	}
};

TypenamespecifierContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypenamespecifier(this);
	}
};




CPP14Parser.TypenamespecifierContext = TypenamespecifierContext;

CPP14Parser.prototype.typenamespecifier = function() {

    var localctx = new TypenamespecifierContext(this, this._ctx, this.state);
    this.enterRule(localctx, 358, CPP14Parser.RULE_typenamespecifier);
    var _la = 0; // Token type
    try {
        this.state = 2688;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,298,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2677;
            this.match(CPP14Parser.Typename);
            this.state = 2678;
            this.nestednamespecifier(0);
            this.state = 2679;
            this.match(CPP14Parser.Identifier);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2681;
            this.match(CPP14Parser.Typename);
            this.state = 2682;
            this.nestednamespecifier(0);
            this.state = 2684;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Template) {
                this.state = 2683;
                this.match(CPP14Parser.Template);
            }

            this.state = 2686;
            this.simpletemplateid();
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExplicitinstantiationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_explicitinstantiation;
    return this;
}

ExplicitinstantiationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExplicitinstantiationContext.prototype.constructor = ExplicitinstantiationContext;

ExplicitinstantiationContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

ExplicitinstantiationContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

ExplicitinstantiationContext.prototype.Extern = function() {
    return this.getToken(CPP14Parser.Extern, 0);
};

ExplicitinstantiationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExplicitinstantiation(this);
	}
};

ExplicitinstantiationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExplicitinstantiation(this);
	}
};




CPP14Parser.ExplicitinstantiationContext = ExplicitinstantiationContext;

CPP14Parser.prototype.explicitinstantiation = function() {

    var localctx = new ExplicitinstantiationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 360, CPP14Parser.RULE_explicitinstantiation);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2691;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Extern) {
            this.state = 2690;
            this.match(CPP14Parser.Extern);
        }

        this.state = 2693;
        this.match(CPP14Parser.Template);
        this.state = 2694;
        this.declaration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExplicitspecializationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_explicitspecialization;
    return this;
}

ExplicitspecializationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExplicitspecializationContext.prototype.constructor = ExplicitspecializationContext;

ExplicitspecializationContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

ExplicitspecializationContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

ExplicitspecializationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExplicitspecialization(this);
	}
};

ExplicitspecializationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExplicitspecialization(this);
	}
};




CPP14Parser.ExplicitspecializationContext = ExplicitspecializationContext;

CPP14Parser.prototype.explicitspecialization = function() {

    var localctx = new ExplicitspecializationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 362, CPP14Parser.RULE_explicitspecialization);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2696;
        this.match(CPP14Parser.Template);
        this.state = 2697;
        this.match(CPP14Parser.Less);
        this.state = 2698;
        this.match(CPP14Parser.Greater);
        this.state = 2699;
        this.declaration();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TryblockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_tryblock;
    return this;
}

TryblockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TryblockContext.prototype.constructor = TryblockContext;

TryblockContext.prototype.Try = function() {
    return this.getToken(CPP14Parser.Try, 0);
};

TryblockContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

TryblockContext.prototype.handlerseq = function() {
    return this.getTypedRuleContext(HandlerseqContext,0);
};

TryblockContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTryblock(this);
	}
};

TryblockContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTryblock(this);
	}
};




CPP14Parser.TryblockContext = TryblockContext;

CPP14Parser.prototype.tryblock = function() {

    var localctx = new TryblockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 364, CPP14Parser.RULE_tryblock);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2701;
        this.match(CPP14Parser.Try);
        this.state = 2702;
        this.compoundstatement();
        this.state = 2703;
        this.handlerseq();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function FunctiontryblockContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functiontryblock;
    return this;
}

FunctiontryblockContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FunctiontryblockContext.prototype.constructor = FunctiontryblockContext;

FunctiontryblockContext.prototype.Try = function() {
    return this.getToken(CPP14Parser.Try, 0);
};

FunctiontryblockContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

FunctiontryblockContext.prototype.handlerseq = function() {
    return this.getTypedRuleContext(HandlerseqContext,0);
};

FunctiontryblockContext.prototype.ctorinitializer = function() {
    return this.getTypedRuleContext(CtorinitializerContext,0);
};

FunctiontryblockContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctiontryblock(this);
	}
};

FunctiontryblockContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctiontryblock(this);
	}
};




CPP14Parser.FunctiontryblockContext = FunctiontryblockContext;

CPP14Parser.prototype.functiontryblock = function() {

    var localctx = new FunctiontryblockContext(this, this._ctx, this.state);
    this.enterRule(localctx, 366, CPP14Parser.RULE_functiontryblock);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2705;
        this.match(CPP14Parser.Try);
        this.state = 2707;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Colon) {
            this.state = 2706;
            this.ctorinitializer();
        }

        this.state = 2709;
        this.compoundstatement();
        this.state = 2710;
        this.handlerseq();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function HandlerseqContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_handlerseq;
    return this;
}

HandlerseqContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
HandlerseqContext.prototype.constructor = HandlerseqContext;

HandlerseqContext.prototype.handler = function() {
    return this.getTypedRuleContext(HandlerContext,0);
};

HandlerseqContext.prototype.handlerseq = function() {
    return this.getTypedRuleContext(HandlerseqContext,0);
};

HandlerseqContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterHandlerseq(this);
	}
};

HandlerseqContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitHandlerseq(this);
	}
};




CPP14Parser.HandlerseqContext = HandlerseqContext;

CPP14Parser.prototype.handlerseq = function() {

    var localctx = new HandlerseqContext(this, this._ctx, this.state);
    this.enterRule(localctx, 368, CPP14Parser.RULE_handlerseq);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2712;
        this.handler();
        this.state = 2714;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,301,this._ctx);
        if(la_===1) {
            this.state = 2713;
            this.handlerseq();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function HandlerContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_handler;
    return this;
}

HandlerContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
HandlerContext.prototype.constructor = HandlerContext;

HandlerContext.prototype.Catch = function() {
    return this.getToken(CPP14Parser.Catch, 0);
};

HandlerContext.prototype.exceptiondeclaration = function() {
    return this.getTypedRuleContext(ExceptiondeclarationContext,0);
};

HandlerContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

HandlerContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterHandler(this);
	}
};

HandlerContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitHandler(this);
	}
};




CPP14Parser.HandlerContext = HandlerContext;

CPP14Parser.prototype.handler = function() {

    var localctx = new HandlerContext(this, this._ctx, this.state);
    this.enterRule(localctx, 370, CPP14Parser.RULE_handler);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2716;
        this.match(CPP14Parser.Catch);
        this.state = 2717;
        this.match(CPP14Parser.LeftParen);
        this.state = 2718;
        this.exceptiondeclaration();
        this.state = 2719;
        this.match(CPP14Parser.RightParen);
        this.state = 2720;
        this.compoundstatement();
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExceptiondeclarationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_exceptiondeclaration;
    return this;
}

ExceptiondeclarationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExceptiondeclarationContext.prototype.constructor = ExceptiondeclarationContext;

ExceptiondeclarationContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

ExceptiondeclarationContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

ExceptiondeclarationContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

ExceptiondeclarationContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

ExceptiondeclarationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExceptiondeclaration(this);
	}
};

ExceptiondeclarationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExceptiondeclaration(this);
	}
};




CPP14Parser.ExceptiondeclarationContext = ExceptiondeclarationContext;

CPP14Parser.prototype.exceptiondeclaration = function() {

    var localctx = new ExceptiondeclarationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 372, CPP14Parser.RULE_exceptiondeclaration);
    var _la = 0; // Token type
    try {
        this.state = 2736;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,305,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2723;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2722;
                this.attributespecifierseq(0);
            }

            this.state = 2725;
            this.typespecifierseq();
            this.state = 2726;
            this.declarator();
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2729;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 2728;
                this.attributespecifierseq(0);
            }

            this.state = 2731;
            this.typespecifierseq();
            this.state = 2733;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 2732;
                this.abstractdeclarator();
            }

            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2735;
            this.match(CPP14Parser.Ellipsis);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ThrowexpressionContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_throwexpression;
    return this;
}

ThrowexpressionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ThrowexpressionContext.prototype.constructor = ThrowexpressionContext;

ThrowexpressionContext.prototype.Throw = function() {
    return this.getToken(CPP14Parser.Throw, 0);
};

ThrowexpressionContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

ThrowexpressionContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterThrowexpression(this);
	}
};

ThrowexpressionContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitThrowexpression(this);
	}
};




CPP14Parser.ThrowexpressionContext = ThrowexpressionContext;

CPP14Parser.prototype.throwexpression = function() {

    var localctx = new ThrowexpressionContext(this, this._ctx, this.state);
    this.enterRule(localctx, 374, CPP14Parser.RULE_throwexpression);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2738;
        this.match(CPP14Parser.Throw);
        this.state = 2740;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,306,this._ctx);
        if(la_===1) {
            this.state = 2739;
            this.assignmentexpression();

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function ExceptionspecificationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_exceptionspecification;
    return this;
}

ExceptionspecificationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExceptionspecificationContext.prototype.constructor = ExceptionspecificationContext;

ExceptionspecificationContext.prototype.dynamicexceptionspecification = function() {
    return this.getTypedRuleContext(DynamicexceptionspecificationContext,0);
};

ExceptionspecificationContext.prototype.noexceptspecification = function() {
    return this.getTypedRuleContext(NoexceptspecificationContext,0);
};

ExceptionspecificationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExceptionspecification(this);
	}
};

ExceptionspecificationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExceptionspecification(this);
	}
};




CPP14Parser.ExceptionspecificationContext = ExceptionspecificationContext;

CPP14Parser.prototype.exceptionspecification = function() {

    var localctx = new ExceptionspecificationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 376, CPP14Parser.RULE_exceptionspecification);
    try {
        this.state = 2744;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Throw:
            this.enterOuterAlt(localctx, 1);
            this.state = 2742;
            this.dynamicexceptionspecification();
            break;
        case CPP14Parser.Noexcept:
            this.enterOuterAlt(localctx, 2);
            this.state = 2743;
            this.noexceptspecification();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function DynamicexceptionspecificationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_dynamicexceptionspecification;
    return this;
}

DynamicexceptionspecificationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DynamicexceptionspecificationContext.prototype.constructor = DynamicexceptionspecificationContext;

DynamicexceptionspecificationContext.prototype.Throw = function() {
    return this.getToken(CPP14Parser.Throw, 0);
};

DynamicexceptionspecificationContext.prototype.typeidlist = function() {
    return this.getTypedRuleContext(TypeidlistContext,0);
};

DynamicexceptionspecificationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDynamicexceptionspecification(this);
	}
};

DynamicexceptionspecificationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDynamicexceptionspecification(this);
	}
};




CPP14Parser.DynamicexceptionspecificationContext = DynamicexceptionspecificationContext;

CPP14Parser.prototype.dynamicexceptionspecification = function() {

    var localctx = new DynamicexceptionspecificationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 378, CPP14Parser.RULE_dynamicexceptionspecification);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2746;
        this.match(CPP14Parser.Throw);
        this.state = 2747;
        this.match(CPP14Parser.LeftParen);
        this.state = 2749;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Struct - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (CPP14Parser.Typename - 69)) | (1 << (CPP14Parser.Union - 69)) | (1 << (CPP14Parser.Unsigned - 69)) | (1 << (CPP14Parser.Void - 69)) | (1 << (CPP14Parser.Volatile - 69)) | (1 << (CPP14Parser.Wchar - 69)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
            this.state = 2748;
            this.typeidlist(0);
        }

        this.state = 2751;
        this.match(CPP14Parser.RightParen);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function TypeidlistContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typeidlist;
    return this;
}

TypeidlistContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeidlistContext.prototype.constructor = TypeidlistContext;

TypeidlistContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

TypeidlistContext.prototype.typeidlist = function() {
    return this.getTypedRuleContext(TypeidlistContext,0);
};

TypeidlistContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypeidlist(this);
	}
};

TypeidlistContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypeidlist(this);
	}
};



CPP14Parser.prototype.typeidlist = function(_p) {
	if(_p===undefined) {
	    _p = 0;
	}
    var _parentctx = this._ctx;
    var _parentState = this.state;
    var localctx = new TypeidlistContext(this, this._ctx, _parentState);
    var _prevctx = localctx;
    var _startState = 380;
    this.enterRecursionRule(localctx, 380, CPP14Parser.RULE_typeidlist, _p);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2754;
        this.typeid();
        this.state = 2756;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,309,this._ctx);
        if(la_===1) {
            this.state = 2755;
            this.match(CPP14Parser.Ellipsis);

        }
        this._ctx.stop = this._input.LT(-1);
        this.state = 2766;
        this._errHandler.sync(this);
        var _alt = this._interp.adaptivePredict(this._input,311,this._ctx)
        while(_alt!=2 && _alt!=antlr4.atn.ATN.INVALID_ALT_NUMBER) {
            if(_alt===1) {
                if(this._parseListeners!==null) {
                    this.triggerExitRuleEvent();
                }
                _prevctx = localctx;
                localctx = new TypeidlistContext(this, _parentctx, _parentState);
                this.pushNewRecursionContext(localctx, _startState, CPP14Parser.RULE_typeidlist);
                this.state = 2758;
                if (!( this.precpred(this._ctx, 1))) {
                    throw new antlr4.error.FailedPredicateException(this, "this.precpred(this._ctx, 1)");
                }
                this.state = 2759;
                this.match(CPP14Parser.Comma);
                this.state = 2760;
                this.typeid();
                this.state = 2762;
                this._errHandler.sync(this);
                var la_ = this._interp.adaptivePredict(this._input,310,this._ctx);
                if(la_===1) {
                    this.state = 2761;
                    this.match(CPP14Parser.Ellipsis);

                } 
            }
            this.state = 2768;
            this._errHandler.sync(this);
            _alt = this._interp.adaptivePredict(this._input,311,this._ctx);
        }

    } catch( error) {
        if(error instanceof antlr4.error.RecognitionException) {
	        localctx.exception = error;
	        this._errHandler.reportError(this, error);
	        this._errHandler.recover(this, error);
	    } else {
	    	throw error;
	    }
    } finally {
        this.unrollRecursionContexts(_parentctx)
    }
    return localctx;
};

function NoexceptspecificationContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noexceptspecification;
    return this;
}

NoexceptspecificationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NoexceptspecificationContext.prototype.constructor = NoexceptspecificationContext;

NoexceptspecificationContext.prototype.Noexcept = function() {
    return this.getToken(CPP14Parser.Noexcept, 0);
};

NoexceptspecificationContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

NoexceptspecificationContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoexceptspecification(this);
	}
};

NoexceptspecificationContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoexceptspecification(this);
	}
};




CPP14Parser.NoexceptspecificationContext = NoexceptspecificationContext;

CPP14Parser.prototype.noexceptspecification = function() {

    var localctx = new NoexceptspecificationContext(this, this._ctx, this.state);
    this.enterRule(localctx, 382, CPP14Parser.RULE_noexceptspecification);
    try {
        this.state = 2775;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,312,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2769;
            this.match(CPP14Parser.Noexcept);
            this.state = 2770;
            this.match(CPP14Parser.LeftParen);
            this.state = 2771;
            this.constantexpression();
            this.state = 2772;
            this.match(CPP14Parser.RightParen);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2774;
            this.match(CPP14Parser.Noexcept);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Primaryexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_primaryexpression_DropletFile;
    return this;
}

Primaryexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Primaryexpression_DropletFileContext.prototype.constructor = Primaryexpression_DropletFileContext;

Primaryexpression_DropletFileContext.prototype.literal = function() {
    return this.getTypedRuleContext(LiteralContext,0);
};

Primaryexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Primaryexpression_DropletFileContext.prototype.This = function() {
    return this.getToken(CPP14Parser.This, 0);
};

Primaryexpression_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Primaryexpression_DropletFileContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

Primaryexpression_DropletFileContext.prototype.lambdaexpression = function() {
    return this.getTypedRuleContext(LambdaexpressionContext,0);
};

Primaryexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPrimaryexpression_DropletFile(this);
	}
};

Primaryexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPrimaryexpression_DropletFile(this);
	}
};




CPP14Parser.Primaryexpression_DropletFileContext = Primaryexpression_DropletFileContext;

CPP14Parser.prototype.primaryexpression_DropletFile = function() {

    var localctx = new Primaryexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 384, CPP14Parser.RULE_primaryexpression_DropletFile);
    try {
        this.state = 2793;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.False:
        case CPP14Parser.Nullptr:
        case CPP14Parser.True:
        case CPP14Parser.Integerliteral:
        case CPP14Parser.Characterliteral:
        case CPP14Parser.Floatingliteral:
        case CPP14Parser.Stringliteral:
        case CPP14Parser.Userdefinedintegerliteral:
        case CPP14Parser.Userdefinedfloatingliteral:
        case CPP14Parser.Userdefinedstringliteral:
        case CPP14Parser.Userdefinedcharacterliteral:
            this.enterOuterAlt(localctx, 1);
            this.state = 2777;
            this.literal();
            this.state = 2778;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.This:
            this.enterOuterAlt(localctx, 2);
            this.state = 2780;
            this.match(CPP14Parser.This);
            this.state = 2781;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 3);
            this.state = 2782;
            this.match(CPP14Parser.LeftParen);
            this.state = 2783;
            this.expression(0);
            this.state = 2784;
            this.match(CPP14Parser.RightParen);
            this.state = 2785;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Operator:
        case CPP14Parser.Tilde:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 4);
            this.state = 2787;
            this.idexpression();
            this.state = 2788;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 5);
            this.state = 2790;
            this.lambdaexpression();
            this.state = 2791;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Idexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_idexpression_DropletFile;
    return this;
}

Idexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Idexpression_DropletFileContext.prototype.constructor = Idexpression_DropletFileContext;

Idexpression_DropletFileContext.prototype.unqualifiedid = function() {
    return this.getTypedRuleContext(UnqualifiedidContext,0);
};

Idexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Idexpression_DropletFileContext.prototype.qualifiedid = function() {
    return this.getTypedRuleContext(QualifiedidContext,0);
};

Idexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterIdexpression_DropletFile(this);
	}
};

Idexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitIdexpression_DropletFile(this);
	}
};




CPP14Parser.Idexpression_DropletFileContext = Idexpression_DropletFileContext;

CPP14Parser.prototype.idexpression_DropletFile = function() {

    var localctx = new Idexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 386, CPP14Parser.RULE_idexpression_DropletFile);
    try {
        this.state = 2801;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,314,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2795;
            this.unqualifiedid();
            this.state = 2796;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2798;
            this.qualifiedid();
            this.state = 2799;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Unqualifiedid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unqualifiedid_DropletFile;
    return this;
}

Unqualifiedid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Unqualifiedid_DropletFileContext.prototype.constructor = Unqualifiedid_DropletFileContext;

Unqualifiedid_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Unqualifiedid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Unqualifiedid_DropletFileContext.prototype.operatorfunctionid = function() {
    return this.getTypedRuleContext(OperatorfunctionidContext,0);
};

Unqualifiedid_DropletFileContext.prototype.conversionfunctionid = function() {
    return this.getTypedRuleContext(ConversionfunctionidContext,0);
};

Unqualifiedid_DropletFileContext.prototype.literaloperatorid = function() {
    return this.getTypedRuleContext(LiteraloperatoridContext,0);
};

Unqualifiedid_DropletFileContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

Unqualifiedid_DropletFileContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

Unqualifiedid_DropletFileContext.prototype.templateid = function() {
    return this.getTypedRuleContext(TemplateidContext,0);
};

Unqualifiedid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnqualifiedid_DropletFile(this);
	}
};

Unqualifiedid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnqualifiedid_DropletFile(this);
	}
};




CPP14Parser.Unqualifiedid_DropletFileContext = Unqualifiedid_DropletFileContext;

CPP14Parser.prototype.unqualifiedid_DropletFile = function() {

    var localctx = new Unqualifiedid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 388, CPP14Parser.RULE_unqualifiedid_DropletFile);
    try {
        this.state = 2825;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,315,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2803;
            this.match(CPP14Parser.Identifier);
            this.state = 2804;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2805;
            this.operatorfunctionid();
            this.state = 2806;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2808;
            this.conversionfunctionid();
            this.state = 2809;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2811;
            this.literaloperatorid();
            this.state = 2812;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 2814;
            this.match(CPP14Parser.Tilde);
            this.state = 2815;
            this.classname();
            this.state = 2816;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 2818;
            this.match(CPP14Parser.Tilde);
            this.state = 2819;
            this.decltypespecifier();
            this.state = 2820;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 2822;
            this.templateid();
            this.state = 2823;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Qualifiedid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_qualifiedid_DropletFile;
    return this;
}

Qualifiedid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Qualifiedid_DropletFileContext.prototype.constructor = Qualifiedid_DropletFileContext;

Qualifiedid_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Qualifiedid_DropletFileContext.prototype.unqualifiedid = function() {
    return this.getTypedRuleContext(UnqualifiedidContext,0);
};

Qualifiedid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Qualifiedid_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Qualifiedid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterQualifiedid_DropletFile(this);
	}
};

Qualifiedid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitQualifiedid_DropletFile(this);
	}
};




CPP14Parser.Qualifiedid_DropletFileContext = Qualifiedid_DropletFileContext;

CPP14Parser.prototype.qualifiedid_DropletFile = function() {

    var localctx = new Qualifiedid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 390, CPP14Parser.RULE_qualifiedid_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2827;
        this.nestednamespecifier(0);
        this.state = 2829;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Template) {
            this.state = 2828;
            this.match(CPP14Parser.Template);
        }

        this.state = 2831;
        this.unqualifiedid();
        this.state = 2832;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Nestednamespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_nestednamespecifier_DropletFile;
    return this;
}

Nestednamespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Nestednamespecifier_DropletFileContext.prototype.constructor = Nestednamespecifier_DropletFileContext;

Nestednamespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Nestednamespecifier_DropletFileContext.prototype.typename = function() {
    return this.getTypedRuleContext(TypenameContext,0);
};

Nestednamespecifier_DropletFileContext.prototype.namespacename = function() {
    return this.getTypedRuleContext(NamespacenameContext,0);
};

Nestednamespecifier_DropletFileContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

Nestednamespecifier_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Nestednamespecifier_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Nestednamespecifier_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Nestednamespecifier_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Nestednamespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNestednamespecifier_DropletFile(this);
	}
};

Nestednamespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNestednamespecifier_DropletFile(this);
	}
};




CPP14Parser.Nestednamespecifier_DropletFileContext = Nestednamespecifier_DropletFileContext;

CPP14Parser.prototype.nestednamespecifier_DropletFile = function() {

    var localctx = new Nestednamespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 392, CPP14Parser.RULE_nestednamespecifier_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 2861;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,318,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2834;
            this.match(CPP14Parser.Doublecolon);
            this.state = 2835;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2836;
            this.typename();
            this.state = 2837;
            this.match(CPP14Parser.Doublecolon);
            this.state = 2838;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2840;
            this.namespacename();
            this.state = 2841;
            this.match(CPP14Parser.Doublecolon);
            this.state = 2842;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2844;
            this.decltypespecifier();
            this.state = 2845;
            this.match(CPP14Parser.Doublecolon);
            this.state = 2846;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 2848;
            this.nestednamespecifier(0);
            this.state = 2849;
            this.match(CPP14Parser.Identifier);
            this.state = 2850;
            this.match(CPP14Parser.Doublecolon);
            this.state = 2851;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 2853;
            this.nestednamespecifier(0);
            this.state = 2855;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Template) {
                this.state = 2854;
                this.match(CPP14Parser.Template);
            }

            this.state = 2857;
            this.simpletemplateid();
            this.state = 2858;
            this.match(CPP14Parser.Doublecolon);
            this.state = 2859;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Lambdaexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdaexpression_DropletFile;
    return this;
}

Lambdaexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Lambdaexpression_DropletFileContext.prototype.constructor = Lambdaexpression_DropletFileContext;

Lambdaexpression_DropletFileContext.prototype.lambdaintroducer = function() {
    return this.getTypedRuleContext(LambdaintroducerContext,0);
};

Lambdaexpression_DropletFileContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

Lambdaexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Lambdaexpression_DropletFileContext.prototype.lambdadeclarator = function() {
    return this.getTypedRuleContext(LambdadeclaratorContext,0);
};

Lambdaexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdaexpression_DropletFile(this);
	}
};

Lambdaexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdaexpression_DropletFile(this);
	}
};




CPP14Parser.Lambdaexpression_DropletFileContext = Lambdaexpression_DropletFileContext;

CPP14Parser.prototype.lambdaexpression_DropletFile = function() {

    var localctx = new Lambdaexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 394, CPP14Parser.RULE_lambdaexpression_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2863;
        this.lambdaintroducer();
        this.state = 2865;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.LeftParen) {
            this.state = 2864;
            this.lambdadeclarator();
        }

        this.state = 2867;
        this.compoundstatement();
        this.state = 2868;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Lambdaintroducer_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdaintroducer_DropletFile;
    return this;
}

Lambdaintroducer_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Lambdaintroducer_DropletFileContext.prototype.constructor = Lambdaintroducer_DropletFileContext;

Lambdaintroducer_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Lambdaintroducer_DropletFileContext.prototype.lambdacapture = function() {
    return this.getTypedRuleContext(LambdacaptureContext,0);
};

Lambdaintroducer_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdaintroducer_DropletFile(this);
	}
};

Lambdaintroducer_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdaintroducer_DropletFile(this);
	}
};




CPP14Parser.Lambdaintroducer_DropletFileContext = Lambdaintroducer_DropletFileContext;

CPP14Parser.prototype.lambdaintroducer_DropletFile = function() {

    var localctx = new Lambdaintroducer_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 396, CPP14Parser.RULE_lambdaintroducer_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2870;
        this.match(CPP14Parser.LeftBracket);
        this.state = 2872;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.This || _la===CPP14Parser.And || _la===CPP14Parser.Assign || _la===CPP14Parser.Identifier) {
            this.state = 2871;
            this.lambdacapture();
        }

        this.state = 2874;
        this.match(CPP14Parser.RightBracket);
        this.state = 2875;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Lambdacapture_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdacapture_DropletFile;
    return this;
}

Lambdacapture_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Lambdacapture_DropletFileContext.prototype.constructor = Lambdacapture_DropletFileContext;

Lambdacapture_DropletFileContext.prototype.capturedefault = function() {
    return this.getTypedRuleContext(CapturedefaultContext,0);
};

Lambdacapture_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Lambdacapture_DropletFileContext.prototype.capturelist = function() {
    return this.getTypedRuleContext(CapturelistContext,0);
};

Lambdacapture_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdacapture_DropletFile(this);
	}
};

Lambdacapture_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdacapture_DropletFile(this);
	}
};




CPP14Parser.Lambdacapture_DropletFileContext = Lambdacapture_DropletFileContext;

CPP14Parser.prototype.lambdacapture_DropletFile = function() {

    var localctx = new Lambdacapture_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 398, CPP14Parser.RULE_lambdacapture_DropletFile);
    try {
        this.state = 2888;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,321,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2877;
            this.capturedefault();
            this.state = 2878;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2880;
            this.capturelist(0);
            this.state = 2881;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2883;
            this.capturedefault();
            this.state = 2884;
            this.match(CPP14Parser.Comma);
            this.state = 2885;
            this.capturelist(0);
            this.state = 2886;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Capturedefault_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_capturedefault_DropletFile;
    return this;
}

Capturedefault_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Capturedefault_DropletFileContext.prototype.constructor = Capturedefault_DropletFileContext;

Capturedefault_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Capturedefault_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCapturedefault_DropletFile(this);
	}
};

Capturedefault_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCapturedefault_DropletFile(this);
	}
};




CPP14Parser.Capturedefault_DropletFileContext = Capturedefault_DropletFileContext;

CPP14Parser.prototype.capturedefault_DropletFile = function() {

    var localctx = new Capturedefault_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 400, CPP14Parser.RULE_capturedefault_DropletFile);
    try {
        this.state = 2894;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 1);
            this.state = 2890;
            this.match(CPP14Parser.And);
            this.state = 2891;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Assign:
            this.enterOuterAlt(localctx, 2);
            this.state = 2892;
            this.match(CPP14Parser.Assign);
            this.state = 2893;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Capturelist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_capturelist_DropletFile;
    return this;
}

Capturelist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Capturelist_DropletFileContext.prototype.constructor = Capturelist_DropletFileContext;

Capturelist_DropletFileContext.prototype.capture = function() {
    return this.getTypedRuleContext(CaptureContext,0);
};

Capturelist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Capturelist_DropletFileContext.prototype.capturelist = function() {
    return this.getTypedRuleContext(CapturelistContext,0);
};

Capturelist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCapturelist_DropletFile(this);
	}
};

Capturelist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCapturelist_DropletFile(this);
	}
};




CPP14Parser.Capturelist_DropletFileContext = Capturelist_DropletFileContext;

CPP14Parser.prototype.capturelist_DropletFile = function() {

    var localctx = new Capturelist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 402, CPP14Parser.RULE_capturelist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 2910;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,325,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2896;
            this.capture();
            this.state = 2898;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 2897;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 2900;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2902;
            this.capturelist(0);
            this.state = 2903;
            this.match(CPP14Parser.Comma);
            this.state = 2904;
            this.capture();
            this.state = 2906;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 2905;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 2908;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Capture_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_capture_DropletFile;
    return this;
}

Capture_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Capture_DropletFileContext.prototype.constructor = Capture_DropletFileContext;

Capture_DropletFileContext.prototype.simplecapture = function() {
    return this.getTypedRuleContext(SimplecaptureContext,0);
};

Capture_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Capture_DropletFileContext.prototype.initcapture = function() {
    return this.getTypedRuleContext(InitcaptureContext,0);
};

Capture_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCapture_DropletFile(this);
	}
};

Capture_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCapture_DropletFile(this);
	}
};




CPP14Parser.Capture_DropletFileContext = Capture_DropletFileContext;

CPP14Parser.prototype.capture_DropletFile = function() {

    var localctx = new Capture_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 404, CPP14Parser.RULE_capture_DropletFile);
    try {
        this.state = 2918;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,326,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2912;
            this.simplecapture();
            this.state = 2913;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2915;
            this.initcapture();
            this.state = 2916;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Simplecapture_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simplecapture_DropletFile;
    return this;
}

Simplecapture_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Simplecapture_DropletFileContext.prototype.constructor = Simplecapture_DropletFileContext;

Simplecapture_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Simplecapture_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Simplecapture_DropletFileContext.prototype.This = function() {
    return this.getToken(CPP14Parser.This, 0);
};

Simplecapture_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimplecapture_DropletFile(this);
	}
};

Simplecapture_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimplecapture_DropletFile(this);
	}
};




CPP14Parser.Simplecapture_DropletFileContext = Simplecapture_DropletFileContext;

CPP14Parser.prototype.simplecapture_DropletFile = function() {

    var localctx = new Simplecapture_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 406, CPP14Parser.RULE_simplecapture_DropletFile);
    try {
        this.state = 2927;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 2920;
            this.match(CPP14Parser.Identifier);
            this.state = 2921;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 2);
            this.state = 2922;
            this.match(CPP14Parser.And);
            this.state = 2923;
            this.match(CPP14Parser.Identifier);
            this.state = 2924;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.This:
            this.enterOuterAlt(localctx, 3);
            this.state = 2925;
            this.match(CPP14Parser.This);
            this.state = 2926;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Initcapture_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initcapture_DropletFile;
    return this;
}

Initcapture_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Initcapture_DropletFileContext.prototype.constructor = Initcapture_DropletFileContext;

Initcapture_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Initcapture_DropletFileContext.prototype.initializer = function() {
    return this.getTypedRuleContext(InitializerContext,0);
};

Initcapture_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Initcapture_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitcapture_DropletFile(this);
	}
};

Initcapture_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitcapture_DropletFile(this);
	}
};




CPP14Parser.Initcapture_DropletFileContext = Initcapture_DropletFileContext;

CPP14Parser.prototype.initcapture_DropletFile = function() {

    var localctx = new Initcapture_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 408, CPP14Parser.RULE_initcapture_DropletFile);
    try {
        this.state = 2938;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 2929;
            this.match(CPP14Parser.Identifier);
            this.state = 2930;
            this.initializer();
            this.state = 2931;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 2);
            this.state = 2933;
            this.match(CPP14Parser.And);
            this.state = 2934;
            this.match(CPP14Parser.Identifier);
            this.state = 2935;
            this.initializer();
            this.state = 2936;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Lambdadeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_lambdadeclarator_DropletFile;
    return this;
}

Lambdadeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Lambdadeclarator_DropletFileContext.prototype.constructor = Lambdadeclarator_DropletFileContext;

Lambdadeclarator_DropletFileContext.prototype.parameterdeclarationclause = function() {
    return this.getTypedRuleContext(ParameterdeclarationclauseContext,0);
};

Lambdadeclarator_DropletFileContext.prototype.EOF = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.EOF);
    } else {
        return this.getToken(CPP14Parser.EOF, i);
    }
};


Lambdadeclarator_DropletFileContext.prototype.Mutable = function() {
    return this.getToken(CPP14Parser.Mutable, 0);
};

Lambdadeclarator_DropletFileContext.prototype.exceptionspecification = function() {
    return this.getTypedRuleContext(ExceptionspecificationContext,0);
};

Lambdadeclarator_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Lambdadeclarator_DropletFileContext.prototype.trailingreturntype = function() {
    return this.getTypedRuleContext(TrailingreturntypeContext,0);
};

Lambdadeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLambdadeclarator_DropletFile(this);
	}
};

Lambdadeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLambdadeclarator_DropletFile(this);
	}
};




CPP14Parser.Lambdadeclarator_DropletFileContext = Lambdadeclarator_DropletFileContext;

CPP14Parser.prototype.lambdadeclarator_DropletFile = function() {

    var localctx = new Lambdadeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 410, CPP14Parser.RULE_lambdadeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 2940;
        this.match(CPP14Parser.LeftParen);
        this.state = 2941;
        this.parameterdeclarationclause();
        this.state = 2942;
        this.match(CPP14Parser.RightParen);
        this.state = 2944;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Mutable) {
            this.state = 2943;
            this.match(CPP14Parser.Mutable);
        }

        this.state = 2947;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Noexcept || _la===CPP14Parser.Throw) {
            this.state = 2946;
            this.exceptionspecification();
        }

        this.state = 2949;
        this.match(CPP14Parser.EOF);
        this.state = 2951;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 2950;
            this.attributespecifierseq(0);
        }

        this.state = 2954;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Arrow) {
            this.state = 2953;
            this.trailingreturntype();
        }

        this.state = 2956;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Postfixexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_postfixexpression_DropletFile;
    return this;
}

Postfixexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Postfixexpression_DropletFileContext.prototype.constructor = Postfixexpression_DropletFileContext;

Postfixexpression_DropletFileContext.prototype.primaryexpression = function() {
    return this.getTypedRuleContext(PrimaryexpressionContext,0);
};

Postfixexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Postfixexpression_DropletFileContext.prototype.postfixexpression = function() {
    return this.getTypedRuleContext(PostfixexpressionContext,0);
};

Postfixexpression_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Postfixexpression_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Postfixexpression_DropletFileContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

Postfixexpression_DropletFileContext.prototype.simpletypespecifier = function() {
    return this.getTypedRuleContext(SimpletypespecifierContext,0);
};

Postfixexpression_DropletFileContext.prototype.typenamespecifier = function() {
    return this.getTypedRuleContext(TypenamespecifierContext,0);
};

Postfixexpression_DropletFileContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

Postfixexpression_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Postfixexpression_DropletFileContext.prototype.pseudodestructorname = function() {
    return this.getTypedRuleContext(PseudodestructornameContext,0);
};

Postfixexpression_DropletFileContext.prototype.Dynamic_cast = function() {
    return this.getToken(CPP14Parser.Dynamic_cast, 0);
};

Postfixexpression_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Postfixexpression_DropletFileContext.prototype.Static_cast = function() {
    return this.getToken(CPP14Parser.Static_cast, 0);
};

Postfixexpression_DropletFileContext.prototype.Reinterpret_cast = function() {
    return this.getToken(CPP14Parser.Reinterpret_cast, 0);
};

Postfixexpression_DropletFileContext.prototype.Const_cast = function() {
    return this.getToken(CPP14Parser.Const_cast, 0);
};

Postfixexpression_DropletFileContext.prototype.Typeid = function() {
    return this.getToken(CPP14Parser.Typeid, 0);
};

Postfixexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPostfixexpression_DropletFile(this);
	}
};

Postfixexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPostfixexpression_DropletFile(this);
	}
};




CPP14Parser.Postfixexpression_DropletFileContext = Postfixexpression_DropletFileContext;

CPP14Parser.prototype.postfixexpression_DropletFile = function() {

    var localctx = new Postfixexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 412, CPP14Parser.RULE_postfixexpression_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3087;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,338,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 2958;
            this.primaryexpression();
            this.state = 2959;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 2961;
            this.postfixexpression(0);
            this.state = 2962;
            this.match(CPP14Parser.LeftBracket);
            this.state = 2963;
            this.expression(0);
            this.state = 2964;
            this.match(CPP14Parser.RightBracket);
            this.state = 2965;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 2967;
            this.postfixexpression(0);
            this.state = 2968;
            this.match(CPP14Parser.LeftBracket);
            this.state = 2969;
            this.bracedinitlist();
            this.state = 2970;
            this.match(CPP14Parser.RightBracket);
            this.state = 2971;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 2973;
            this.postfixexpression(0);
            this.state = 2974;
            this.match(CPP14Parser.LeftParen);
            this.state = 2976;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 2975;
                this.expressionlist();
            }

            this.state = 2978;
            this.match(CPP14Parser.RightParen);
            this.state = 2979;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 2981;
            this.simpletypespecifier();
            this.state = 2982;
            this.match(CPP14Parser.LeftParen);
            this.state = 2984;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 2983;
                this.expressionlist();
            }

            this.state = 2986;
            this.match(CPP14Parser.RightParen);
            this.state = 2987;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 2989;
            this.typenamespecifier();
            this.state = 2990;
            this.match(CPP14Parser.LeftParen);
            this.state = 2992;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 2991;
                this.expressionlist();
            }

            this.state = 2994;
            this.match(CPP14Parser.RightParen);
            this.state = 2995;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 2997;
            this.simpletypespecifier();
            this.state = 2998;
            this.bracedinitlist();
            this.state = 2999;
            this.match(CPP14Parser.EOF);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 3001;
            this.typenamespecifier();
            this.state = 3002;
            this.bracedinitlist();
            this.state = 3003;
            this.match(CPP14Parser.EOF);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 3005;
            this.postfixexpression(0);
            this.state = 3006;
            this.match(CPP14Parser.Dot);
            this.state = 3008;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Template) {
                this.state = 3007;
                this.match(CPP14Parser.Template);
            }

            this.state = 3010;
            this.idexpression();
            this.state = 3011;
            this.match(CPP14Parser.EOF);
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 3013;
            this.postfixexpression(0);
            this.state = 3014;
            this.match(CPP14Parser.Arrow);
            this.state = 3016;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Template) {
                this.state = 3015;
                this.match(CPP14Parser.Template);
            }

            this.state = 3018;
            this.idexpression();
            this.state = 3019;
            this.match(CPP14Parser.EOF);
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 3021;
            this.postfixexpression(0);
            this.state = 3022;
            this.match(CPP14Parser.Dot);
            this.state = 3023;
            this.pseudodestructorname();
            this.state = 3024;
            this.match(CPP14Parser.EOF);
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 3026;
            this.postfixexpression(0);
            this.state = 3027;
            this.match(CPP14Parser.Arrow);
            this.state = 3028;
            this.pseudodestructorname();
            this.state = 3029;
            this.match(CPP14Parser.EOF);
            break;

        case 13:
            this.enterOuterAlt(localctx, 13);
            this.state = 3031;
            this.postfixexpression(0);
            this.state = 3032;
            this.match(CPP14Parser.PlusPlus);
            this.state = 3033;
            this.match(CPP14Parser.EOF);
            break;

        case 14:
            this.enterOuterAlt(localctx, 14);
            this.state = 3035;
            this.postfixexpression(0);
            this.state = 3036;
            this.match(CPP14Parser.MinusMinus);
            this.state = 3037;
            this.match(CPP14Parser.EOF);
            break;

        case 15:
            this.enterOuterAlt(localctx, 15);
            this.state = 3039;
            this.match(CPP14Parser.Dynamic_cast);
            this.state = 3040;
            this.match(CPP14Parser.Less);
            this.state = 3041;
            this.typeid();
            this.state = 3042;
            this.match(CPP14Parser.Greater);
            this.state = 3043;
            this.match(CPP14Parser.LeftParen);
            this.state = 3044;
            this.expression(0);
            this.state = 3045;
            this.match(CPP14Parser.RightParen);
            this.state = 3046;
            this.match(CPP14Parser.EOF);
            break;

        case 16:
            this.enterOuterAlt(localctx, 16);
            this.state = 3048;
            this.match(CPP14Parser.Static_cast);
            this.state = 3049;
            this.match(CPP14Parser.Less);
            this.state = 3050;
            this.typeid();
            this.state = 3051;
            this.match(CPP14Parser.Greater);
            this.state = 3052;
            this.match(CPP14Parser.LeftParen);
            this.state = 3053;
            this.expression(0);
            this.state = 3054;
            this.match(CPP14Parser.RightParen);
            this.state = 3055;
            this.match(CPP14Parser.EOF);
            break;

        case 17:
            this.enterOuterAlt(localctx, 17);
            this.state = 3057;
            this.match(CPP14Parser.Reinterpret_cast);
            this.state = 3058;
            this.match(CPP14Parser.Less);
            this.state = 3059;
            this.typeid();
            this.state = 3060;
            this.match(CPP14Parser.Greater);
            this.state = 3061;
            this.match(CPP14Parser.LeftParen);
            this.state = 3062;
            this.expression(0);
            this.state = 3063;
            this.match(CPP14Parser.RightParen);
            this.state = 3064;
            this.match(CPP14Parser.EOF);
            break;

        case 18:
            this.enterOuterAlt(localctx, 18);
            this.state = 3066;
            this.match(CPP14Parser.Const_cast);
            this.state = 3067;
            this.match(CPP14Parser.Less);
            this.state = 3068;
            this.typeid();
            this.state = 3069;
            this.match(CPP14Parser.Greater);
            this.state = 3070;
            this.match(CPP14Parser.LeftParen);
            this.state = 3071;
            this.expression(0);
            this.state = 3072;
            this.match(CPP14Parser.RightParen);
            this.state = 3073;
            this.match(CPP14Parser.EOF);
            break;

        case 19:
            this.enterOuterAlt(localctx, 19);
            this.state = 3075;
            this.match(CPP14Parser.Typeid);
            this.state = 3076;
            this.match(CPP14Parser.LeftParen);
            this.state = 3077;
            this.expression(0);
            this.state = 3078;
            this.match(CPP14Parser.RightParen);
            this.state = 3079;
            this.match(CPP14Parser.EOF);
            break;

        case 20:
            this.enterOuterAlt(localctx, 20);
            this.state = 3081;
            this.match(CPP14Parser.Typeid);
            this.state = 3082;
            this.match(CPP14Parser.LeftParen);
            this.state = 3083;
            this.typeid();
            this.state = 3084;
            this.match(CPP14Parser.RightParen);
            this.state = 3085;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Expressionlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_expressionlist_DropletFile;
    return this;
}

Expressionlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Expressionlist_DropletFileContext.prototype.constructor = Expressionlist_DropletFileContext;

Expressionlist_DropletFileContext.prototype.initializerlist = function() {
    return this.getTypedRuleContext(InitializerlistContext,0);
};

Expressionlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Expressionlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExpressionlist_DropletFile(this);
	}
};

Expressionlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExpressionlist_DropletFile(this);
	}
};




CPP14Parser.Expressionlist_DropletFileContext = Expressionlist_DropletFileContext;

CPP14Parser.prototype.expressionlist_DropletFile = function() {

    var localctx = new Expressionlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 414, CPP14Parser.RULE_expressionlist_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3089;
        this.initializerlist(0);
        this.state = 3090;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pseudodestructorname_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_pseudodestructorname_DropletFile;
    return this;
}

Pseudodestructorname_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pseudodestructorname_DropletFileContext.prototype.constructor = Pseudodestructorname_DropletFileContext;

Pseudodestructorname_DropletFileContext.prototype.typename = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(TypenameContext);
    } else {
        return this.getTypedRuleContext(TypenameContext,i);
    }
};

Pseudodestructorname_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Pseudodestructorname_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Pseudodestructorname_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Pseudodestructorname_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Pseudodestructorname_DropletFileContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

Pseudodestructorname_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPseudodestructorname_DropletFile(this);
	}
};

Pseudodestructorname_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPseudodestructorname_DropletFile(this);
	}
};




CPP14Parser.Pseudodestructorname_DropletFileContext = Pseudodestructorname_DropletFileContext;

CPP14Parser.prototype.pseudodestructorname_DropletFile = function() {

    var localctx = new Pseudodestructorname_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 416, CPP14Parser.RULE_pseudodestructorname_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3120;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,341,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3093;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,339,this._ctx);
            if(la_===1) {
                this.state = 3092;
                this.nestednamespecifier(0);

            }
            this.state = 3095;
            this.typename();
            this.state = 3096;
            this.match(CPP14Parser.Doublecolon);
            this.state = 3097;
            this.match(CPP14Parser.Tilde);
            this.state = 3098;
            this.typename();
            this.state = 3099;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3101;
            this.nestednamespecifier(0);
            this.state = 3102;
            this.match(CPP14Parser.Template);
            this.state = 3103;
            this.simpletemplateid();
            this.state = 3104;
            this.match(CPP14Parser.Doublecolon);
            this.state = 3105;
            this.match(CPP14Parser.Tilde);
            this.state = 3106;
            this.typename();
            this.state = 3107;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3110;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
                this.state = 3109;
                this.nestednamespecifier(0);
            }

            this.state = 3112;
            this.match(CPP14Parser.Tilde);
            this.state = 3113;
            this.typename();
            this.state = 3114;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3116;
            this.match(CPP14Parser.Tilde);
            this.state = 3117;
            this.decltypespecifier();
            this.state = 3118;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Unaryexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unaryexpression_DropletFile;
    return this;
}

Unaryexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Unaryexpression_DropletFileContext.prototype.constructor = Unaryexpression_DropletFileContext;

Unaryexpression_DropletFileContext.prototype.postfixexpression = function() {
    return this.getTypedRuleContext(PostfixexpressionContext,0);
};

Unaryexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Unaryexpression_DropletFileContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

Unaryexpression_DropletFileContext.prototype.unaryoperator = function() {
    return this.getTypedRuleContext(UnaryoperatorContext,0);
};

Unaryexpression_DropletFileContext.prototype.Sizeof = function() {
    return this.getToken(CPP14Parser.Sizeof, 0);
};

Unaryexpression_DropletFileContext.prototype.unaryexpression = function() {
    return this.getTypedRuleContext(UnaryexpressionContext,0);
};

Unaryexpression_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Unaryexpression_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Unaryexpression_DropletFileContext.prototype.Alignof = function() {
    return this.getToken(CPP14Parser.Alignof, 0);
};

Unaryexpression_DropletFileContext.prototype.noexceptexpression = function() {
    return this.getTypedRuleContext(NoexceptexpressionContext,0);
};

Unaryexpression_DropletFileContext.prototype.newexpression = function() {
    return this.getTypedRuleContext(NewexpressionContext,0);
};

Unaryexpression_DropletFileContext.prototype.deleteexpression = function() {
    return this.getTypedRuleContext(DeleteexpressionContext,0);
};

Unaryexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnaryexpression_DropletFile(this);
	}
};

Unaryexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnaryexpression_DropletFile(this);
	}
};




CPP14Parser.Unaryexpression_DropletFileContext = Unaryexpression_DropletFileContext;

CPP14Parser.prototype.unaryexpression_DropletFile = function() {

    var localctx = new Unaryexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 418, CPP14Parser.RULE_unaryexpression_DropletFile);
    try {
        this.state = 3168;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,342,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3122;
            this.postfixexpression(0);
            this.state = 3123;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3125;
            this.match(CPP14Parser.PlusPlus);
            this.state = 3126;
            this.castexpression();
            this.state = 3127;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3129;
            this.match(CPP14Parser.MinusMinus);
            this.state = 3130;
            this.castexpression();
            this.state = 3131;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3133;
            this.unaryoperator();
            this.state = 3134;
            this.castexpression();
            this.state = 3135;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 3137;
            this.match(CPP14Parser.Sizeof);
            this.state = 3138;
            this.unaryexpression();
            this.state = 3139;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 3141;
            this.match(CPP14Parser.Sizeof);
            this.state = 3142;
            this.match(CPP14Parser.LeftParen);
            this.state = 3143;
            this.typeid();
            this.state = 3144;
            this.match(CPP14Parser.RightParen);
            this.state = 3145;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 3147;
            this.match(CPP14Parser.Sizeof);
            this.state = 3148;
            this.match(CPP14Parser.Ellipsis);
            this.state = 3149;
            this.match(CPP14Parser.LeftParen);
            this.state = 3150;
            this.match(CPP14Parser.Identifier);
            this.state = 3151;
            this.match(CPP14Parser.RightParen);
            this.state = 3152;
            this.match(CPP14Parser.EOF);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 3153;
            this.match(CPP14Parser.Alignof);
            this.state = 3154;
            this.match(CPP14Parser.LeftParen);
            this.state = 3155;
            this.typeid();
            this.state = 3156;
            this.match(CPP14Parser.RightParen);
            this.state = 3157;
            this.match(CPP14Parser.EOF);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 3159;
            this.noexceptexpression();
            this.state = 3160;
            this.match(CPP14Parser.EOF);
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 3162;
            this.newexpression();
            this.state = 3163;
            this.match(CPP14Parser.EOF);
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 3165;
            this.deleteexpression();
            this.state = 3166;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Unaryoperator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unaryoperator_DropletFile;
    return this;
}

Unaryoperator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Unaryoperator_DropletFileContext.prototype.constructor = Unaryoperator_DropletFileContext;

Unaryoperator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Unaryoperator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnaryoperator_DropletFile(this);
	}
};

Unaryoperator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnaryoperator_DropletFile(this);
	}
};




CPP14Parser.Unaryoperator_DropletFileContext = Unaryoperator_DropletFileContext;

CPP14Parser.prototype.unaryoperator_DropletFile = function() {

    var localctx = new Unaryoperator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 420, CPP14Parser.RULE_unaryoperator_DropletFile);
    try {
        this.state = 3184;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Or:
            this.enterOuterAlt(localctx, 1);
            this.state = 3170;
            this.match(CPP14Parser.Or);
            this.state = 3171;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Star:
            this.enterOuterAlt(localctx, 2);
            this.state = 3172;
            this.match(CPP14Parser.Star);
            this.state = 3173;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 3);
            this.state = 3174;
            this.match(CPP14Parser.And);
            this.state = 3175;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Plus:
            this.enterOuterAlt(localctx, 4);
            this.state = 3176;
            this.match(CPP14Parser.Plus);
            this.state = 3177;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Not:
            this.enterOuterAlt(localctx, 5);
            this.state = 3178;
            this.match(CPP14Parser.Not);
            this.state = 3179;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Tilde:
            this.enterOuterAlt(localctx, 6);
            this.state = 3180;
            this.match(CPP14Parser.Tilde);
            this.state = 3181;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Minus:
            this.enterOuterAlt(localctx, 7);
            this.state = 3182;
            this.match(CPP14Parser.Minus);
            this.state = 3183;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Newexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newexpression_DropletFile;
    return this;
}

Newexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Newexpression_DropletFileContext.prototype.constructor = Newexpression_DropletFileContext;

Newexpression_DropletFileContext.prototype.New = function() {
    return this.getToken(CPP14Parser.New, 0);
};

Newexpression_DropletFileContext.prototype.newtypeid = function() {
    return this.getTypedRuleContext(NewtypeidContext,0);
};

Newexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Newexpression_DropletFileContext.prototype.newplacement = function() {
    return this.getTypedRuleContext(NewplacementContext,0);
};

Newexpression_DropletFileContext.prototype.newinitializer = function() {
    return this.getTypedRuleContext(NewinitializerContext,0);
};

Newexpression_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Newexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewexpression_DropletFile(this);
	}
};

Newexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewexpression_DropletFile(this);
	}
};




CPP14Parser.Newexpression_DropletFileContext = Newexpression_DropletFileContext;

CPP14Parser.prototype.newexpression_DropletFile = function() {

    var localctx = new Newexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 422, CPP14Parser.RULE_newexpression_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3214;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,350,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3187;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 3186;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 3189;
            this.match(CPP14Parser.New);
            this.state = 3191;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.LeftParen) {
                this.state = 3190;
                this.newplacement();
            }

            this.state = 3193;
            this.newtypeid();
            this.state = 3195;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.LeftParen || _la===CPP14Parser.LeftBrace) {
                this.state = 3194;
                this.newinitializer();
            }

            this.state = 3197;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3200;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 3199;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 3202;
            this.match(CPP14Parser.New);
            this.state = 3204;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,348,this._ctx);
            if(la_===1) {
                this.state = 3203;
                this.newplacement();

            }
            this.state = 3206;
            this.match(CPP14Parser.LeftParen);
            this.state = 3207;
            this.typeid();
            this.state = 3208;
            this.match(CPP14Parser.RightParen);
            this.state = 3210;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.LeftParen || _la===CPP14Parser.LeftBrace) {
                this.state = 3209;
                this.newinitializer();
            }

            this.state = 3212;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Newplacement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newplacement_DropletFile;
    return this;
}

Newplacement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Newplacement_DropletFileContext.prototype.constructor = Newplacement_DropletFileContext;

Newplacement_DropletFileContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

Newplacement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Newplacement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewplacement_DropletFile(this);
	}
};

Newplacement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewplacement_DropletFile(this);
	}
};




CPP14Parser.Newplacement_DropletFileContext = Newplacement_DropletFileContext;

CPP14Parser.prototype.newplacement_DropletFile = function() {

    var localctx = new Newplacement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 424, CPP14Parser.RULE_newplacement_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3216;
        this.match(CPP14Parser.LeftParen);
        this.state = 3217;
        this.expressionlist();
        this.state = 3218;
        this.match(CPP14Parser.RightParen);
        this.state = 3219;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Newtypeid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newtypeid_DropletFile;
    return this;
}

Newtypeid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Newtypeid_DropletFileContext.prototype.constructor = Newtypeid_DropletFileContext;

Newtypeid_DropletFileContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

Newtypeid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Newtypeid_DropletFileContext.prototype.newdeclarator = function() {
    return this.getTypedRuleContext(NewdeclaratorContext,0);
};

Newtypeid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewtypeid_DropletFile(this);
	}
};

Newtypeid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewtypeid_DropletFile(this);
	}
};




CPP14Parser.Newtypeid_DropletFileContext = Newtypeid_DropletFileContext;

CPP14Parser.prototype.newtypeid_DropletFile = function() {

    var localctx = new Newtypeid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 426, CPP14Parser.RULE_newtypeid_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3221;
        this.typespecifierseq();
        this.state = 3223;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Decltype || ((((_la - 80)) & ~0x1f) == 0 && ((1 << (_la - 80)) & ((1 << (CPP14Parser.LeftBracket - 80)) | (1 << (CPP14Parser.Star - 80)) | (1 << (CPP14Parser.And - 80)) | (1 << (CPP14Parser.AndAnd - 80)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
            this.state = 3222;
            this.newdeclarator();
        }

        this.state = 3225;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Newdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newdeclarator_DropletFile;
    return this;
}

Newdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Newdeclarator_DropletFileContext.prototype.constructor = Newdeclarator_DropletFileContext;

Newdeclarator_DropletFileContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

Newdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Newdeclarator_DropletFileContext.prototype.newdeclarator = function() {
    return this.getTypedRuleContext(NewdeclaratorContext,0);
};

Newdeclarator_DropletFileContext.prototype.noptrnewdeclarator = function() {
    return this.getTypedRuleContext(NoptrnewdeclaratorContext,0);
};

Newdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewdeclarator_DropletFile(this);
	}
};

Newdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewdeclarator_DropletFile(this);
	}
};




CPP14Parser.Newdeclarator_DropletFileContext = Newdeclarator_DropletFileContext;

CPP14Parser.prototype.newdeclarator_DropletFile = function() {

    var localctx = new Newdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 428, CPP14Parser.RULE_newdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3236;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Decltype:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 3227;
            this.ptroperator();
            this.state = 3229;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || ((((_la - 80)) & ~0x1f) == 0 && ((1 << (_la - 80)) & ((1 << (CPP14Parser.LeftBracket - 80)) | (1 << (CPP14Parser.Star - 80)) | (1 << (CPP14Parser.And - 80)) | (1 << (CPP14Parser.AndAnd - 80)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
                this.state = 3228;
                this.newdeclarator();
            }

            this.state = 3231;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 2);
            this.state = 3233;
            this.noptrnewdeclarator(0);
            this.state = 3234;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Noptrnewdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrnewdeclarator_DropletFile;
    return this;
}

Noptrnewdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Noptrnewdeclarator_DropletFileContext.prototype.constructor = Noptrnewdeclarator_DropletFileContext;

Noptrnewdeclarator_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Noptrnewdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Noptrnewdeclarator_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Noptrnewdeclarator_DropletFileContext.prototype.noptrnewdeclarator = function() {
    return this.getTypedRuleContext(NoptrnewdeclaratorContext,0);
};

Noptrnewdeclarator_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Noptrnewdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrnewdeclarator_DropletFile(this);
	}
};

Noptrnewdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrnewdeclarator_DropletFile(this);
	}
};




CPP14Parser.Noptrnewdeclarator_DropletFileContext = Noptrnewdeclarator_DropletFileContext;

CPP14Parser.prototype.noptrnewdeclarator_DropletFile = function() {

    var localctx = new Noptrnewdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 430, CPP14Parser.RULE_noptrnewdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3255;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,356,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3238;
            this.match(CPP14Parser.LeftBracket);
            this.state = 3239;
            this.expression(0);
            this.state = 3240;
            this.match(CPP14Parser.RightBracket);
            this.state = 3242;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3241;
                this.attributespecifierseq(0);
            }

            this.state = 3244;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3246;
            this.noptrnewdeclarator(0);
            this.state = 3247;
            this.match(CPP14Parser.LeftBracket);
            this.state = 3248;
            this.constantexpression();
            this.state = 3249;
            this.match(CPP14Parser.RightBracket);
            this.state = 3251;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3250;
                this.attributespecifierseq(0);
            }

            this.state = 3253;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Newinitializer_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_newinitializer_DropletFile;
    return this;
}

Newinitializer_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Newinitializer_DropletFileContext.prototype.constructor = Newinitializer_DropletFileContext;

Newinitializer_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Newinitializer_DropletFileContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

Newinitializer_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Newinitializer_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNewinitializer_DropletFile(this);
	}
};

Newinitializer_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNewinitializer_DropletFile(this);
	}
};




CPP14Parser.Newinitializer_DropletFileContext = Newinitializer_DropletFileContext;

CPP14Parser.prototype.newinitializer_DropletFile = function() {

    var localctx = new Newinitializer_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 432, CPP14Parser.RULE_newinitializer_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3266;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 1);
            this.state = 3257;
            this.match(CPP14Parser.LeftParen);
            this.state = 3259;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 3258;
                this.expressionlist();
            }

            this.state = 3261;
            this.match(CPP14Parser.RightParen);
            this.state = 3262;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 3263;
            this.bracedinitlist();
            this.state = 3264;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Deleteexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_deleteexpression_DropletFile;
    return this;
}

Deleteexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Deleteexpression_DropletFileContext.prototype.constructor = Deleteexpression_DropletFileContext;

Deleteexpression_DropletFileContext.prototype.Delete = function() {
    return this.getToken(CPP14Parser.Delete, 0);
};

Deleteexpression_DropletFileContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

Deleteexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Deleteexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeleteexpression_DropletFile(this);
	}
};

Deleteexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeleteexpression_DropletFile(this);
	}
};




CPP14Parser.Deleteexpression_DropletFileContext = Deleteexpression_DropletFileContext;

CPP14Parser.prototype.deleteexpression_DropletFile = function() {

    var localctx = new Deleteexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 434, CPP14Parser.RULE_deleteexpression_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3284;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,361,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3269;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 3268;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 3271;
            this.match(CPP14Parser.Delete);
            this.state = 3272;
            this.castexpression();
            this.state = 3273;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3276;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Doublecolon) {
                this.state = 3275;
                this.match(CPP14Parser.Doublecolon);
            }

            this.state = 3278;
            this.match(CPP14Parser.Delete);
            this.state = 3279;
            this.match(CPP14Parser.LeftBracket);
            this.state = 3280;
            this.match(CPP14Parser.RightBracket);
            this.state = 3281;
            this.castexpression();
            this.state = 3282;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Noexceptexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noexceptexpression_DropletFile;
    return this;
}

Noexceptexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Noexceptexpression_DropletFileContext.prototype.constructor = Noexceptexpression_DropletFileContext;

Noexceptexpression_DropletFileContext.prototype.Noexcept = function() {
    return this.getToken(CPP14Parser.Noexcept, 0);
};

Noexceptexpression_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Noexceptexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Noexceptexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoexceptexpression_DropletFile(this);
	}
};

Noexceptexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoexceptexpression_DropletFile(this);
	}
};




CPP14Parser.Noexceptexpression_DropletFileContext = Noexceptexpression_DropletFileContext;

CPP14Parser.prototype.noexceptexpression_DropletFile = function() {

    var localctx = new Noexceptexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 436, CPP14Parser.RULE_noexceptexpression_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3286;
        this.match(CPP14Parser.Noexcept);
        this.state = 3287;
        this.match(CPP14Parser.LeftParen);
        this.state = 3288;
        this.expression(0);
        this.state = 3289;
        this.match(CPP14Parser.RightParen);
        this.state = 3290;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Castexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_castexpression_DropletFile;
    return this;
}

Castexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Castexpression_DropletFileContext.prototype.constructor = Castexpression_DropletFileContext;

Castexpression_DropletFileContext.prototype.unaryexpression = function() {
    return this.getTypedRuleContext(UnaryexpressionContext,0);
};

Castexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Castexpression_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Castexpression_DropletFileContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

Castexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCastexpression_DropletFile(this);
	}
};

Castexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCastexpression_DropletFile(this);
	}
};




CPP14Parser.Castexpression_DropletFileContext = Castexpression_DropletFileContext;

CPP14Parser.prototype.castexpression_DropletFile = function() {

    var localctx = new Castexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 438, CPP14Parser.RULE_castexpression_DropletFile);
    try {
        this.state = 3301;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,362,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3292;
            this.unaryexpression();
            this.state = 3293;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3295;
            this.match(CPP14Parser.LeftParen);
            this.state = 3296;
            this.typeid();
            this.state = 3297;
            this.match(CPP14Parser.RightParen);
            this.state = 3298;
            this.castexpression();
            this.state = 3299;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Pmexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_pmexpression_DropletFile;
    return this;
}

Pmexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Pmexpression_DropletFileContext.prototype.constructor = Pmexpression_DropletFileContext;

Pmexpression_DropletFileContext.prototype.castexpression = function() {
    return this.getTypedRuleContext(CastexpressionContext,0);
};

Pmexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Pmexpression_DropletFileContext.prototype.pmexpression = function() {
    return this.getTypedRuleContext(PmexpressionContext,0);
};

Pmexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPmexpression_DropletFile(this);
	}
};

Pmexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPmexpression_DropletFile(this);
	}
};




CPP14Parser.Pmexpression_DropletFileContext = Pmexpression_DropletFileContext;

CPP14Parser.prototype.pmexpression_DropletFile = function() {

    var localctx = new Pmexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 440, CPP14Parser.RULE_pmexpression_DropletFile);
    try {
        this.state = 3316;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,363,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3303;
            this.castexpression();
            this.state = 3304;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3306;
            this.pmexpression(0);
            this.state = 3307;
            this.match(CPP14Parser.DotStar);
            this.state = 3308;
            this.castexpression();
            this.state = 3309;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3311;
            this.pmexpression(0);
            this.state = 3312;
            this.match(CPP14Parser.ArrowStar);
            this.state = 3313;
            this.castexpression();
            this.state = 3314;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Multiplicativeexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_multiplicativeexpression_DropletFile;
    return this;
}

Multiplicativeexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Multiplicativeexpression_DropletFileContext.prototype.constructor = Multiplicativeexpression_DropletFileContext;

Multiplicativeexpression_DropletFileContext.prototype.pmexpression = function() {
    return this.getTypedRuleContext(PmexpressionContext,0);
};

Multiplicativeexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Multiplicativeexpression_DropletFileContext.prototype.multiplicativeexpression = function() {
    return this.getTypedRuleContext(MultiplicativeexpressionContext,0);
};

Multiplicativeexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMultiplicativeexpression_DropletFile(this);
	}
};

Multiplicativeexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMultiplicativeexpression_DropletFile(this);
	}
};




CPP14Parser.Multiplicativeexpression_DropletFileContext = Multiplicativeexpression_DropletFileContext;

CPP14Parser.prototype.multiplicativeexpression_DropletFile = function() {

    var localctx = new Multiplicativeexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 442, CPP14Parser.RULE_multiplicativeexpression_DropletFile);
    try {
        this.state = 3336;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,364,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3318;
            this.pmexpression(0);
            this.state = 3319;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3321;
            this.multiplicativeexpression(0);
            this.state = 3322;
            this.match(CPP14Parser.Star);
            this.state = 3323;
            this.pmexpression(0);
            this.state = 3324;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3326;
            this.multiplicativeexpression(0);
            this.state = 3327;
            this.match(CPP14Parser.Div);
            this.state = 3328;
            this.pmexpression(0);
            this.state = 3329;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3331;
            this.multiplicativeexpression(0);
            this.state = 3332;
            this.match(CPP14Parser.Mod);
            this.state = 3333;
            this.pmexpression(0);
            this.state = 3334;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Additiveexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_additiveexpression_DropletFile;
    return this;
}

Additiveexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Additiveexpression_DropletFileContext.prototype.constructor = Additiveexpression_DropletFileContext;

Additiveexpression_DropletFileContext.prototype.multiplicativeexpression = function() {
    return this.getTypedRuleContext(MultiplicativeexpressionContext,0);
};

Additiveexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Additiveexpression_DropletFileContext.prototype.additiveexpression = function() {
    return this.getTypedRuleContext(AdditiveexpressionContext,0);
};

Additiveexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAdditiveexpression_DropletFile(this);
	}
};

Additiveexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAdditiveexpression_DropletFile(this);
	}
};




CPP14Parser.Additiveexpression_DropletFileContext = Additiveexpression_DropletFileContext;

CPP14Parser.prototype.additiveexpression_DropletFile = function() {

    var localctx = new Additiveexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 444, CPP14Parser.RULE_additiveexpression_DropletFile);
    try {
        this.state = 3351;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,365,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3338;
            this.multiplicativeexpression(0);
            this.state = 3339;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3341;
            this.additiveexpression(0);
            this.state = 3342;
            this.match(CPP14Parser.Plus);
            this.state = 3343;
            this.multiplicativeexpression(0);
            this.state = 3344;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3346;
            this.additiveexpression(0);
            this.state = 3347;
            this.match(CPP14Parser.Minus);
            this.state = 3348;
            this.multiplicativeexpression(0);
            this.state = 3349;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Shiftexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_shiftexpression_DropletFile;
    return this;
}

Shiftexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Shiftexpression_DropletFileContext.prototype.constructor = Shiftexpression_DropletFileContext;

Shiftexpression_DropletFileContext.prototype.additiveexpression = function() {
    return this.getTypedRuleContext(AdditiveexpressionContext,0);
};

Shiftexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Shiftexpression_DropletFileContext.prototype.shiftexpression = function() {
    return this.getTypedRuleContext(ShiftexpressionContext,0);
};

Shiftexpression_DropletFileContext.prototype.rightShift = function() {
    return this.getTypedRuleContext(RightShiftContext,0);
};

Shiftexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterShiftexpression_DropletFile(this);
	}
};

Shiftexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitShiftexpression_DropletFile(this);
	}
};




CPP14Parser.Shiftexpression_DropletFileContext = Shiftexpression_DropletFileContext;

CPP14Parser.prototype.shiftexpression_DropletFile = function() {

    var localctx = new Shiftexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 446, CPP14Parser.RULE_shiftexpression_DropletFile);
    try {
        this.state = 3366;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,366,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3353;
            this.additiveexpression(0);
            this.state = 3354;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3356;
            this.shiftexpression(0);
            this.state = 3357;
            this.match(CPP14Parser.LeftShift);
            this.state = 3358;
            this.additiveexpression(0);
            this.state = 3359;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3361;
            this.shiftexpression(0);
            this.state = 3362;
            this.rightShift();
            this.state = 3363;
            this.additiveexpression(0);
            this.state = 3364;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Relationalexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_relationalexpression_DropletFile;
    return this;
}

Relationalexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Relationalexpression_DropletFileContext.prototype.constructor = Relationalexpression_DropletFileContext;

Relationalexpression_DropletFileContext.prototype.shiftexpression = function() {
    return this.getTypedRuleContext(ShiftexpressionContext,0);
};

Relationalexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Relationalexpression_DropletFileContext.prototype.relationalexpression = function() {
    return this.getTypedRuleContext(RelationalexpressionContext,0);
};

Relationalexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterRelationalexpression_DropletFile(this);
	}
};

Relationalexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitRelationalexpression_DropletFile(this);
	}
};




CPP14Parser.Relationalexpression_DropletFileContext = Relationalexpression_DropletFileContext;

CPP14Parser.prototype.relationalexpression_DropletFile = function() {

    var localctx = new Relationalexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 448, CPP14Parser.RULE_relationalexpression_DropletFile);
    try {
        this.state = 3391;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,367,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3368;
            this.shiftexpression(0);
            this.state = 3369;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3371;
            this.relationalexpression(0);
            this.state = 3372;
            this.match(CPP14Parser.Less);
            this.state = 3373;
            this.shiftexpression(0);
            this.state = 3374;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3376;
            this.relationalexpression(0);
            this.state = 3377;
            this.match(CPP14Parser.Greater);
            this.state = 3378;
            this.shiftexpression(0);
            this.state = 3379;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3381;
            this.relationalexpression(0);
            this.state = 3382;
            this.match(CPP14Parser.LessEqual);
            this.state = 3383;
            this.shiftexpression(0);
            this.state = 3384;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 3386;
            this.relationalexpression(0);
            this.state = 3387;
            this.match(CPP14Parser.GreaterEqual);
            this.state = 3388;
            this.shiftexpression(0);
            this.state = 3389;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Equalityexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_equalityexpression_DropletFile;
    return this;
}

Equalityexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Equalityexpression_DropletFileContext.prototype.constructor = Equalityexpression_DropletFileContext;

Equalityexpression_DropletFileContext.prototype.relationalexpression = function() {
    return this.getTypedRuleContext(RelationalexpressionContext,0);
};

Equalityexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Equalityexpression_DropletFileContext.prototype.equalityexpression = function() {
    return this.getTypedRuleContext(EqualityexpressionContext,0);
};

Equalityexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEqualityexpression_DropletFile(this);
	}
};

Equalityexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEqualityexpression_DropletFile(this);
	}
};




CPP14Parser.Equalityexpression_DropletFileContext = Equalityexpression_DropletFileContext;

CPP14Parser.prototype.equalityexpression_DropletFile = function() {

    var localctx = new Equalityexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 450, CPP14Parser.RULE_equalityexpression_DropletFile);
    try {
        this.state = 3406;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,368,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3393;
            this.relationalexpression(0);
            this.state = 3394;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3396;
            this.equalityexpression(0);
            this.state = 3397;
            this.match(CPP14Parser.Equal);
            this.state = 3398;
            this.relationalexpression(0);
            this.state = 3399;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3401;
            this.equalityexpression(0);
            this.state = 3402;
            this.match(CPP14Parser.NotEqual);
            this.state = 3403;
            this.relationalexpression(0);
            this.state = 3404;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Andexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_andexpression_DropletFile;
    return this;
}

Andexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Andexpression_DropletFileContext.prototype.constructor = Andexpression_DropletFileContext;

Andexpression_DropletFileContext.prototype.equalityexpression = function() {
    return this.getTypedRuleContext(EqualityexpressionContext,0);
};

Andexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Andexpression_DropletFileContext.prototype.andexpression = function() {
    return this.getTypedRuleContext(AndexpressionContext,0);
};

Andexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAndexpression_DropletFile(this);
	}
};

Andexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAndexpression_DropletFile(this);
	}
};




CPP14Parser.Andexpression_DropletFileContext = Andexpression_DropletFileContext;

CPP14Parser.prototype.andexpression_DropletFile = function() {

    var localctx = new Andexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 452, CPP14Parser.RULE_andexpression_DropletFile);
    try {
        this.state = 3416;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,369,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3408;
            this.equalityexpression(0);
            this.state = 3409;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3411;
            this.andexpression(0);
            this.state = 3412;
            this.match(CPP14Parser.And);
            this.state = 3413;
            this.equalityexpression(0);
            this.state = 3414;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Exclusiveorexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_exclusiveorexpression_DropletFile;
    return this;
}

Exclusiveorexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Exclusiveorexpression_DropletFileContext.prototype.constructor = Exclusiveorexpression_DropletFileContext;

Exclusiveorexpression_DropletFileContext.prototype.andexpression = function() {
    return this.getTypedRuleContext(AndexpressionContext,0);
};

Exclusiveorexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Exclusiveorexpression_DropletFileContext.prototype.exclusiveorexpression = function() {
    return this.getTypedRuleContext(ExclusiveorexpressionContext,0);
};

Exclusiveorexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExclusiveorexpression_DropletFile(this);
	}
};

Exclusiveorexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExclusiveorexpression_DropletFile(this);
	}
};




CPP14Parser.Exclusiveorexpression_DropletFileContext = Exclusiveorexpression_DropletFileContext;

CPP14Parser.prototype.exclusiveorexpression_DropletFile = function() {

    var localctx = new Exclusiveorexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 454, CPP14Parser.RULE_exclusiveorexpression_DropletFile);
    try {
        this.state = 3426;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,370,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3418;
            this.andexpression(0);
            this.state = 3419;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3421;
            this.exclusiveorexpression(0);
            this.state = 3422;
            this.match(CPP14Parser.Caret);
            this.state = 3423;
            this.andexpression(0);
            this.state = 3424;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Inclusiveorexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_inclusiveorexpression_DropletFile;
    return this;
}

Inclusiveorexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Inclusiveorexpression_DropletFileContext.prototype.constructor = Inclusiveorexpression_DropletFileContext;

Inclusiveorexpression_DropletFileContext.prototype.exclusiveorexpression = function() {
    return this.getTypedRuleContext(ExclusiveorexpressionContext,0);
};

Inclusiveorexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Inclusiveorexpression_DropletFileContext.prototype.inclusiveorexpression = function() {
    return this.getTypedRuleContext(InclusiveorexpressionContext,0);
};

Inclusiveorexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInclusiveorexpression_DropletFile(this);
	}
};

Inclusiveorexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInclusiveorexpression_DropletFile(this);
	}
};




CPP14Parser.Inclusiveorexpression_DropletFileContext = Inclusiveorexpression_DropletFileContext;

CPP14Parser.prototype.inclusiveorexpression_DropletFile = function() {

    var localctx = new Inclusiveorexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 456, CPP14Parser.RULE_inclusiveorexpression_DropletFile);
    try {
        this.state = 3436;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,371,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3428;
            this.exclusiveorexpression(0);
            this.state = 3429;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3431;
            this.inclusiveorexpression(0);
            this.state = 3432;
            this.match(CPP14Parser.Or);
            this.state = 3433;
            this.exclusiveorexpression(0);
            this.state = 3434;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logicalandexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_logicalandexpression_DropletFile;
    return this;
}

Logicalandexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logicalandexpression_DropletFileContext.prototype.constructor = Logicalandexpression_DropletFileContext;

Logicalandexpression_DropletFileContext.prototype.inclusiveorexpression = function() {
    return this.getTypedRuleContext(InclusiveorexpressionContext,0);
};

Logicalandexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Logicalandexpression_DropletFileContext.prototype.logicalandexpression = function() {
    return this.getTypedRuleContext(LogicalandexpressionContext,0);
};

Logicalandexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLogicalandexpression_DropletFile(this);
	}
};

Logicalandexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLogicalandexpression_DropletFile(this);
	}
};




CPP14Parser.Logicalandexpression_DropletFileContext = Logicalandexpression_DropletFileContext;

CPP14Parser.prototype.logicalandexpression_DropletFile = function() {

    var localctx = new Logicalandexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 458, CPP14Parser.RULE_logicalandexpression_DropletFile);
    try {
        this.state = 3446;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,372,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3438;
            this.inclusiveorexpression(0);
            this.state = 3439;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3441;
            this.logicalandexpression(0);
            this.state = 3442;
            this.match(CPP14Parser.AndAnd);
            this.state = 3443;
            this.inclusiveorexpression(0);
            this.state = 3444;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Logicalorexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_logicalorexpression_DropletFile;
    return this;
}

Logicalorexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Logicalorexpression_DropletFileContext.prototype.constructor = Logicalorexpression_DropletFileContext;

Logicalorexpression_DropletFileContext.prototype.logicalandexpression = function() {
    return this.getTypedRuleContext(LogicalandexpressionContext,0);
};

Logicalorexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Logicalorexpression_DropletFileContext.prototype.logicalorexpression = function() {
    return this.getTypedRuleContext(LogicalorexpressionContext,0);
};

Logicalorexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLogicalorexpression_DropletFile(this);
	}
};

Logicalorexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLogicalorexpression_DropletFile(this);
	}
};




CPP14Parser.Logicalorexpression_DropletFileContext = Logicalorexpression_DropletFileContext;

CPP14Parser.prototype.logicalorexpression_DropletFile = function() {

    var localctx = new Logicalorexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 460, CPP14Parser.RULE_logicalorexpression_DropletFile);
    try {
        this.state = 3456;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,373,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3448;
            this.logicalandexpression(0);
            this.state = 3449;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3451;
            this.logicalorexpression(0);
            this.state = 3452;
            this.match(CPP14Parser.OrOr);
            this.state = 3453;
            this.logicalandexpression(0);
            this.state = 3454;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Conditionalexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conditionalexpression_DropletFile;
    return this;
}

Conditionalexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Conditionalexpression_DropletFileContext.prototype.constructor = Conditionalexpression_DropletFileContext;

Conditionalexpression_DropletFileContext.prototype.logicalorexpression = function() {
    return this.getTypedRuleContext(LogicalorexpressionContext,0);
};

Conditionalexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Conditionalexpression_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Conditionalexpression_DropletFileContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

Conditionalexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConditionalexpression_DropletFile(this);
	}
};

Conditionalexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConditionalexpression_DropletFile(this);
	}
};




CPP14Parser.Conditionalexpression_DropletFileContext = Conditionalexpression_DropletFileContext;

CPP14Parser.prototype.conditionalexpression_DropletFile = function() {

    var localctx = new Conditionalexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 462, CPP14Parser.RULE_conditionalexpression_DropletFile);
    try {
        this.state = 3468;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,374,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3458;
            this.logicalorexpression(0);
            this.state = 3459;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3461;
            this.logicalorexpression(0);
            this.state = 3462;
            this.match(CPP14Parser.Question);
            this.state = 3463;
            this.expression(0);
            this.state = 3464;
            this.match(CPP14Parser.Colon);
            this.state = 3465;
            this.assignmentexpression();
            this.state = 3466;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Assignmentexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_assignmentexpression_DropletFile;
    return this;
}

Assignmentexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Assignmentexpression_DropletFileContext.prototype.constructor = Assignmentexpression_DropletFileContext;

Assignmentexpression_DropletFileContext.prototype.conditionalexpression = function() {
    return this.getTypedRuleContext(ConditionalexpressionContext,0);
};

Assignmentexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Assignmentexpression_DropletFileContext.prototype.logicalorexpression = function() {
    return this.getTypedRuleContext(LogicalorexpressionContext,0);
};

Assignmentexpression_DropletFileContext.prototype.assignmentoperator = function() {
    return this.getTypedRuleContext(AssignmentoperatorContext,0);
};

Assignmentexpression_DropletFileContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

Assignmentexpression_DropletFileContext.prototype.throwexpression = function() {
    return this.getTypedRuleContext(ThrowexpressionContext,0);
};

Assignmentexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAssignmentexpression_DropletFile(this);
	}
};

Assignmentexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAssignmentexpression_DropletFile(this);
	}
};




CPP14Parser.Assignmentexpression_DropletFileContext = Assignmentexpression_DropletFileContext;

CPP14Parser.prototype.assignmentexpression_DropletFile = function() {

    var localctx = new Assignmentexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 464, CPP14Parser.RULE_assignmentexpression_DropletFile);
    try {
        this.state = 3481;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,375,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3470;
            this.conditionalexpression();
            this.state = 3471;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3473;
            this.logicalorexpression(0);
            this.state = 3474;
            this.assignmentoperator();
            this.state = 3475;
            this.initializerclause();
            this.state = 3476;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3478;
            this.throwexpression();
            this.state = 3479;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Assignmentoperator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_assignmentoperator_DropletFile;
    return this;
}

Assignmentoperator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Assignmentoperator_DropletFileContext.prototype.constructor = Assignmentoperator_DropletFileContext;

Assignmentoperator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Assignmentoperator_DropletFileContext.prototype.rightShiftAssign = function() {
    return this.getTypedRuleContext(RightShiftAssignContext,0);
};

Assignmentoperator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAssignmentoperator_DropletFile(this);
	}
};

Assignmentoperator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAssignmentoperator_DropletFile(this);
	}
};




CPP14Parser.Assignmentoperator_DropletFileContext = Assignmentoperator_DropletFileContext;

CPP14Parser.prototype.assignmentoperator_DropletFile = function() {

    var localctx = new Assignmentoperator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 466, CPP14Parser.RULE_assignmentoperator_DropletFile);
    try {
        this.state = 3506;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Assign:
            this.enterOuterAlt(localctx, 1);
            this.state = 3483;
            this.match(CPP14Parser.Assign);
            this.state = 3484;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.StarAssign:
            this.enterOuterAlt(localctx, 2);
            this.state = 3485;
            this.match(CPP14Parser.StarAssign);
            this.state = 3486;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.DivAssign:
            this.enterOuterAlt(localctx, 3);
            this.state = 3487;
            this.match(CPP14Parser.DivAssign);
            this.state = 3488;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.ModAssign:
            this.enterOuterAlt(localctx, 4);
            this.state = 3489;
            this.match(CPP14Parser.ModAssign);
            this.state = 3490;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.PlusAssign:
            this.enterOuterAlt(localctx, 5);
            this.state = 3491;
            this.match(CPP14Parser.PlusAssign);
            this.state = 3492;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.MinusAssign:
            this.enterOuterAlt(localctx, 6);
            this.state = 3493;
            this.match(CPP14Parser.MinusAssign);
            this.state = 3494;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Greater:
            this.enterOuterAlt(localctx, 7);
            this.state = 3495;
            this.rightShiftAssign();
            this.state = 3496;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftShiftAssign:
            this.enterOuterAlt(localctx, 8);
            this.state = 3498;
            this.match(CPP14Parser.LeftShiftAssign);
            this.state = 3499;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.AndAssign:
            this.enterOuterAlt(localctx, 9);
            this.state = 3500;
            this.match(CPP14Parser.AndAssign);
            this.state = 3501;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.XorAssign:
            this.enterOuterAlt(localctx, 10);
            this.state = 3502;
            this.match(CPP14Parser.XorAssign);
            this.state = 3503;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.OrAssign:
            this.enterOuterAlt(localctx, 11);
            this.state = 3504;
            this.match(CPP14Parser.OrAssign);
            this.state = 3505;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Expression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_expression_DropletFile;
    return this;
}

Expression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Expression_DropletFileContext.prototype.constructor = Expression_DropletFileContext;

Expression_DropletFileContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

Expression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Expression_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Expression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExpression_DropletFile(this);
	}
};

Expression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExpression_DropletFile(this);
	}
};




CPP14Parser.Expression_DropletFileContext = Expression_DropletFileContext;

CPP14Parser.prototype.expression_DropletFile = function() {

    var localctx = new Expression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 468, CPP14Parser.RULE_expression_DropletFile);
    try {
        this.state = 3516;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,377,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3508;
            this.assignmentexpression();
            this.state = 3509;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3511;
            this.expression(0);
            this.state = 3512;
            this.match(CPP14Parser.Comma);
            this.state = 3513;
            this.assignmentexpression();
            this.state = 3514;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Constantexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_constantexpression_DropletFile;
    return this;
}

Constantexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Constantexpression_DropletFileContext.prototype.constructor = Constantexpression_DropletFileContext;

Constantexpression_DropletFileContext.prototype.conditionalexpression = function() {
    return this.getTypedRuleContext(ConditionalexpressionContext,0);
};

Constantexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Constantexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConstantexpression_DropletFile(this);
	}
};

Constantexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConstantexpression_DropletFile(this);
	}
};




CPP14Parser.Constantexpression_DropletFileContext = Constantexpression_DropletFileContext;

CPP14Parser.prototype.constantexpression_DropletFile = function() {

    var localctx = new Constantexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 470, CPP14Parser.RULE_constantexpression_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3518;
        this.conditionalexpression();
        this.state = 3519;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Statement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_statement_DropletFile;
    return this;
}

Statement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Statement_DropletFileContext.prototype.constructor = Statement_DropletFileContext;

Statement_DropletFileContext.prototype.labeledstatement = function() {
    return this.getTypedRuleContext(LabeledstatementContext,0);
};

Statement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Statement_DropletFileContext.prototype.expressionstatement = function() {
    return this.getTypedRuleContext(ExpressionstatementContext,0);
};

Statement_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Statement_DropletFileContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

Statement_DropletFileContext.prototype.selectionstatement = function() {
    return this.getTypedRuleContext(SelectionstatementContext,0);
};

Statement_DropletFileContext.prototype.iterationstatement = function() {
    return this.getTypedRuleContext(IterationstatementContext,0);
};

Statement_DropletFileContext.prototype.jumpstatement = function() {
    return this.getTypedRuleContext(JumpstatementContext,0);
};

Statement_DropletFileContext.prototype.declarationstatement = function() {
    return this.getTypedRuleContext(DeclarationstatementContext,0);
};

Statement_DropletFileContext.prototype.tryblock = function() {
    return this.getTypedRuleContext(TryblockContext,0);
};

Statement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStatement_DropletFile(this);
	}
};

Statement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStatement_DropletFile(this);
	}
};




CPP14Parser.Statement_DropletFileContext = Statement_DropletFileContext;

CPP14Parser.prototype.statement_DropletFile = function() {

    var localctx = new Statement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 472, CPP14Parser.RULE_statement_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3563;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,384,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3521;
            this.labeledstatement();
            this.state = 3522;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3525;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,378,this._ctx);
            if(la_===1) {
                this.state = 3524;
                this.attributespecifierseq(0);

            }
            this.state = 3527;
            this.expressionstatement();
            this.state = 3528;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3531;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3530;
                this.attributespecifierseq(0);
            }

            this.state = 3533;
            this.compoundstatement();
            this.state = 3534;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3537;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3536;
                this.attributespecifierseq(0);
            }

            this.state = 3539;
            this.selectionstatement();
            this.state = 3540;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 3543;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3542;
                this.attributespecifierseq(0);
            }

            this.state = 3545;
            this.iterationstatement();
            this.state = 3546;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 3549;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3548;
                this.attributespecifierseq(0);
            }

            this.state = 3551;
            this.jumpstatement();
            this.state = 3552;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 3554;
            this.declarationstatement();
            this.state = 3555;
            this.match(CPP14Parser.EOF);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 3558;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3557;
                this.attributespecifierseq(0);
            }

            this.state = 3560;
            this.tryblock();
            this.state = 3561;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Labeledstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_labeledstatement_DropletFile;
    return this;
}

Labeledstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Labeledstatement_DropletFileContext.prototype.constructor = Labeledstatement_DropletFileContext;

Labeledstatement_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Labeledstatement_DropletFileContext.prototype.statement = function() {
    return this.getTypedRuleContext(StatementContext,0);
};

Labeledstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Labeledstatement_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Labeledstatement_DropletFileContext.prototype.Case = function() {
    return this.getToken(CPP14Parser.Case, 0);
};

Labeledstatement_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Labeledstatement_DropletFileContext.prototype.Default = function() {
    return this.getToken(CPP14Parser.Default, 0);
};

Labeledstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLabeledstatement_DropletFile(this);
	}
};

Labeledstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLabeledstatement_DropletFile(this);
	}
};




CPP14Parser.Labeledstatement_DropletFileContext = Labeledstatement_DropletFileContext;

CPP14Parser.prototype.labeledstatement_DropletFile = function() {

    var localctx = new Labeledstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 474, CPP14Parser.RULE_labeledstatement_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3590;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,388,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3566;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3565;
                this.attributespecifierseq(0);
            }

            this.state = 3568;
            this.match(CPP14Parser.Identifier);
            this.state = 3569;
            this.match(CPP14Parser.Colon);
            this.state = 3570;
            this.statement();
            this.state = 3571;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3574;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3573;
                this.attributespecifierseq(0);
            }

            this.state = 3576;
            this.match(CPP14Parser.Case);
            this.state = 3577;
            this.constantexpression();
            this.state = 3578;
            this.match(CPP14Parser.Colon);
            this.state = 3579;
            this.statement();
            this.state = 3580;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3583;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3582;
                this.attributespecifierseq(0);
            }

            this.state = 3585;
            this.match(CPP14Parser.Default);
            this.state = 3586;
            this.match(CPP14Parser.Colon);
            this.state = 3587;
            this.statement();
            this.state = 3588;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Expressionstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_expressionstatement_DropletFile;
    return this;
}

Expressionstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Expressionstatement_DropletFileContext.prototype.constructor = Expressionstatement_DropletFileContext;

Expressionstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Expressionstatement_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Expressionstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExpressionstatement_DropletFile(this);
	}
};

Expressionstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExpressionstatement_DropletFile(this);
	}
};




CPP14Parser.Expressionstatement_DropletFileContext = Expressionstatement_DropletFileContext;

CPP14Parser.prototype.expressionstatement_DropletFile = function() {

    var localctx = new Expressionstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 476, CPP14Parser.RULE_expressionstatement_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3593;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
            this.state = 3592;
            this.expression(0);
        }

        this.state = 3595;
        this.match(CPP14Parser.Semi);
        this.state = 3596;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Compoundstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_compoundstatement_DropletFile;
    return this;
}

Compoundstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Compoundstatement_DropletFileContext.prototype.constructor = Compoundstatement_DropletFileContext;

Compoundstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Compoundstatement_DropletFileContext.prototype.statementseq = function() {
    return this.getTypedRuleContext(StatementseqContext,0);
};

Compoundstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCompoundstatement_DropletFile(this);
	}
};

Compoundstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCompoundstatement_DropletFile(this);
	}
};




CPP14Parser.Compoundstatement_DropletFileContext = Compoundstatement_DropletFileContext;

CPP14Parser.prototype.compoundstatement_DropletFile = function() {

    var localctx = new Compoundstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 478, CPP14Parser.RULE_compoundstatement_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3598;
        this.match(CPP14Parser.LeftBrace);
        this.state = 3600;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Asm) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Break) | (1 << CPP14Parser.Case) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Continue) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Default) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Do) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.For - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Goto - 32)) | (1 << (CPP14Parser.If - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Namespace - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Return - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Switch - 32)) | (1 << (CPP14Parser.This - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Try - 64)) | (1 << (CPP14Parser.Typedef - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Union - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Using - 64)) | (1 << (CPP14Parser.Virtual - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Volatile - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.While - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.PlusPlus - 111)) | (1 << (CPP14Parser.MinusMinus - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)) | (1 << (CPP14Parser.Integerliteral - 111)) | (1 << (CPP14Parser.Characterliteral - 111)) | (1 << (CPP14Parser.Floatingliteral - 111)) | (1 << (CPP14Parser.Stringliteral - 111)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 111)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 111)) | (1 << (CPP14Parser.Userdefinedstringliteral - 111)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 111)))) !== 0)) {
            this.state = 3599;
            this.statementseq(0);
        }

        this.state = 3602;
        this.match(CPP14Parser.RightBrace);
        this.state = 3603;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Statementseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_statementseq_DropletFile;
    return this;
}

Statementseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Statementseq_DropletFileContext.prototype.constructor = Statementseq_DropletFileContext;

Statementseq_DropletFileContext.prototype.statement = function() {
    return this.getTypedRuleContext(StatementContext,0);
};

Statementseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Statementseq_DropletFileContext.prototype.statementseq = function() {
    return this.getTypedRuleContext(StatementseqContext,0);
};

Statementseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStatementseq_DropletFile(this);
	}
};

Statementseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStatementseq_DropletFile(this);
	}
};




CPP14Parser.Statementseq_DropletFileContext = Statementseq_DropletFileContext;

CPP14Parser.prototype.statementseq_DropletFile = function() {

    var localctx = new Statementseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 480, CPP14Parser.RULE_statementseq_DropletFile);
    try {
        this.state = 3612;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,391,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3605;
            this.statement();
            this.state = 3606;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3608;
            this.statementseq(0);
            this.state = 3609;
            this.statement();
            this.state = 3610;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Selectionstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_selectionstatement_DropletFile;
    return this;
}

Selectionstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Selectionstatement_DropletFileContext.prototype.constructor = Selectionstatement_DropletFileContext;

Selectionstatement_DropletFileContext.prototype.If = function() {
    return this.getToken(CPP14Parser.If, 0);
};

Selectionstatement_DropletFileContext.prototype.condition = function() {
    return this.getTypedRuleContext(ConditionContext,0);
};

Selectionstatement_DropletFileContext.prototype.statement = function(i) {
    if(i===undefined) {
        i = null;
    }
    if(i===null) {
        return this.getTypedRuleContexts(StatementContext);
    } else {
        return this.getTypedRuleContext(StatementContext,i);
    }
};

Selectionstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Selectionstatement_DropletFileContext.prototype.Else = function() {
    return this.getToken(CPP14Parser.Else, 0);
};

Selectionstatement_DropletFileContext.prototype.Switch = function() {
    return this.getToken(CPP14Parser.Switch, 0);
};

Selectionstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSelectionstatement_DropletFile(this);
	}
};

Selectionstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSelectionstatement_DropletFile(this);
	}
};




CPP14Parser.Selectionstatement_DropletFileContext = Selectionstatement_DropletFileContext;

CPP14Parser.prototype.selectionstatement_DropletFile = function() {

    var localctx = new Selectionstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 482, CPP14Parser.RULE_selectionstatement_DropletFile);
    try {
        this.state = 3637;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,392,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3614;
            this.match(CPP14Parser.If);
            this.state = 3615;
            this.match(CPP14Parser.LeftParen);
            this.state = 3616;
            this.condition();
            this.state = 3617;
            this.match(CPP14Parser.RightParen);
            this.state = 3618;
            this.statement();
            this.state = 3619;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3621;
            this.match(CPP14Parser.If);
            this.state = 3622;
            this.match(CPP14Parser.LeftParen);
            this.state = 3623;
            this.condition();
            this.state = 3624;
            this.match(CPP14Parser.RightParen);
            this.state = 3625;
            this.statement();
            this.state = 3626;
            this.match(CPP14Parser.Else);
            this.state = 3627;
            this.statement();
            this.state = 3628;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3630;
            this.match(CPP14Parser.Switch);
            this.state = 3631;
            this.match(CPP14Parser.LeftParen);
            this.state = 3632;
            this.condition();
            this.state = 3633;
            this.match(CPP14Parser.RightParen);
            this.state = 3634;
            this.statement();
            this.state = 3635;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Condition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_condition_DropletFile;
    return this;
}

Condition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Condition_DropletFileContext.prototype.constructor = Condition_DropletFileContext;

Condition_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Condition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Condition_DropletFileContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

Condition_DropletFileContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

Condition_DropletFileContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

Condition_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Condition_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Condition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCondition_DropletFile(this);
	}
};

Condition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCondition_DropletFile(this);
	}
};




CPP14Parser.Condition_DropletFileContext = Condition_DropletFileContext;

CPP14Parser.prototype.condition_DropletFile = function() {

    var localctx = new Condition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 484, CPP14Parser.RULE_condition_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3659;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,395,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3639;
            this.expression(0);
            this.state = 3640;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3643;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3642;
                this.attributespecifierseq(0);
            }

            this.state = 3645;
            this.declspecifierseq();
            this.state = 3646;
            this.declarator();
            this.state = 3647;
            this.match(CPP14Parser.Assign);
            this.state = 3648;
            this.initializerclause();
            this.state = 3649;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3652;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3651;
                this.attributespecifierseq(0);
            }

            this.state = 3654;
            this.declspecifierseq();
            this.state = 3655;
            this.declarator();
            this.state = 3656;
            this.bracedinitlist();
            this.state = 3657;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Iterationstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_iterationstatement_DropletFile;
    return this;
}

Iterationstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Iterationstatement_DropletFileContext.prototype.constructor = Iterationstatement_DropletFileContext;

Iterationstatement_DropletFileContext.prototype.While = function() {
    return this.getToken(CPP14Parser.While, 0);
};

Iterationstatement_DropletFileContext.prototype.condition = function() {
    return this.getTypedRuleContext(ConditionContext,0);
};

Iterationstatement_DropletFileContext.prototype.statement = function() {
    return this.getTypedRuleContext(StatementContext,0);
};

Iterationstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Iterationstatement_DropletFileContext.prototype.Do = function() {
    return this.getToken(CPP14Parser.Do, 0);
};

Iterationstatement_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Iterationstatement_DropletFileContext.prototype.For = function() {
    return this.getToken(CPP14Parser.For, 0);
};

Iterationstatement_DropletFileContext.prototype.forinitstatement = function() {
    return this.getTypedRuleContext(ForinitstatementContext,0);
};

Iterationstatement_DropletFileContext.prototype.forrangedeclaration = function() {
    return this.getTypedRuleContext(ForrangedeclarationContext,0);
};

Iterationstatement_DropletFileContext.prototype.forrangeinitializer = function() {
    return this.getTypedRuleContext(ForrangeinitializerContext,0);
};

Iterationstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterIterationstatement_DropletFile(this);
	}
};

Iterationstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitIterationstatement_DropletFile(this);
	}
};




CPP14Parser.Iterationstatement_DropletFileContext = Iterationstatement_DropletFileContext;

CPP14Parser.prototype.iterationstatement_DropletFile = function() {

    var localctx = new Iterationstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 486, CPP14Parser.RULE_iterationstatement_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3700;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,398,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3661;
            this.match(CPP14Parser.While);
            this.state = 3662;
            this.match(CPP14Parser.LeftParen);
            this.state = 3663;
            this.condition();
            this.state = 3664;
            this.match(CPP14Parser.RightParen);
            this.state = 3665;
            this.statement();
            this.state = 3666;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3668;
            this.match(CPP14Parser.Do);
            this.state = 3669;
            this.statement();
            this.state = 3670;
            this.match(CPP14Parser.While);
            this.state = 3671;
            this.match(CPP14Parser.LeftParen);
            this.state = 3672;
            this.expression(0);
            this.state = 3673;
            this.match(CPP14Parser.RightParen);
            this.state = 3674;
            this.match(CPP14Parser.Semi);
            this.state = 3675;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3677;
            this.match(CPP14Parser.For);
            this.state = 3678;
            this.match(CPP14Parser.LeftParen);
            this.state = 3679;
            this.forinitstatement();
            this.state = 3681;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typedef - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Union - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Virtual - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Volatile - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 3680;
                this.condition();
            }

            this.state = 3683;
            this.match(CPP14Parser.Semi);
            this.state = 3685;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 3684;
                this.expression(0);
            }

            this.state = 3687;
            this.match(CPP14Parser.RightParen);
            this.state = 3688;
            this.statement();
            this.state = 3689;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3691;
            this.match(CPP14Parser.For);
            this.state = 3692;
            this.match(CPP14Parser.LeftParen);
            this.state = 3693;
            this.forrangedeclaration();
            this.state = 3694;
            this.match(CPP14Parser.Colon);
            this.state = 3695;
            this.forrangeinitializer();
            this.state = 3696;
            this.match(CPP14Parser.RightParen);
            this.state = 3697;
            this.statement();
            this.state = 3698;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Forinitstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_forinitstatement_DropletFile;
    return this;
}

Forinitstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Forinitstatement_DropletFileContext.prototype.constructor = Forinitstatement_DropletFileContext;

Forinitstatement_DropletFileContext.prototype.expressionstatement = function() {
    return this.getTypedRuleContext(ExpressionstatementContext,0);
};

Forinitstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Forinitstatement_DropletFileContext.prototype.simpledeclaration = function() {
    return this.getTypedRuleContext(SimpledeclarationContext,0);
};

Forinitstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterForinitstatement_DropletFile(this);
	}
};

Forinitstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitForinitstatement_DropletFile(this);
	}
};




CPP14Parser.Forinitstatement_DropletFileContext = Forinitstatement_DropletFileContext;

CPP14Parser.prototype.forinitstatement_DropletFile = function() {

    var localctx = new Forinitstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 488, CPP14Parser.RULE_forinitstatement_DropletFile);
    try {
        this.state = 3708;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,399,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3702;
            this.expressionstatement();
            this.state = 3703;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3705;
            this.simpledeclaration();
            this.state = 3706;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Forrangedeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_forrangedeclaration_DropletFile;
    return this;
}

Forrangedeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Forrangedeclaration_DropletFileContext.prototype.constructor = Forrangedeclaration_DropletFileContext;

Forrangedeclaration_DropletFileContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

Forrangedeclaration_DropletFileContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

Forrangedeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Forrangedeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Forrangedeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterForrangedeclaration_DropletFile(this);
	}
};

Forrangedeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitForrangedeclaration_DropletFile(this);
	}
};




CPP14Parser.Forrangedeclaration_DropletFileContext = Forrangedeclaration_DropletFileContext;

CPP14Parser.prototype.forrangedeclaration_DropletFile = function() {

    var localctx = new Forrangedeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 490, CPP14Parser.RULE_forrangedeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3711;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 3710;
            this.attributespecifierseq(0);
        }

        this.state = 3713;
        this.declspecifierseq();
        this.state = 3714;
        this.declarator();
        this.state = 3715;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Forrangeinitializer_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_forrangeinitializer_DropletFile;
    return this;
}

Forrangeinitializer_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Forrangeinitializer_DropletFileContext.prototype.constructor = Forrangeinitializer_DropletFileContext;

Forrangeinitializer_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Forrangeinitializer_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Forrangeinitializer_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Forrangeinitializer_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterForrangeinitializer_DropletFile(this);
	}
};

Forrangeinitializer_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitForrangeinitializer_DropletFile(this);
	}
};




CPP14Parser.Forrangeinitializer_DropletFileContext = Forrangeinitializer_DropletFileContext;

CPP14Parser.prototype.forrangeinitializer_DropletFile = function() {

    var localctx = new Forrangeinitializer_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 492, CPP14Parser.RULE_forrangeinitializer_DropletFile);
    try {
        this.state = 3723;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Alignof:
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Const_cast:
        case CPP14Parser.Decltype:
        case CPP14Parser.Delete:
        case CPP14Parser.Double:
        case CPP14Parser.Dynamic_cast:
        case CPP14Parser.False:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.New:
        case CPP14Parser.Noexcept:
        case CPP14Parser.Nullptr:
        case CPP14Parser.Operator:
        case CPP14Parser.Reinterpret_cast:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Sizeof:
        case CPP14Parser.Static_cast:
        case CPP14Parser.This:
        case CPP14Parser.Throw:
        case CPP14Parser.True:
        case CPP14Parser.Typeid:
        case CPP14Parser.Typename:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
        case CPP14Parser.Plus:
        case CPP14Parser.Minus:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Or:
        case CPP14Parser.Tilde:
        case CPP14Parser.Not:
        case CPP14Parser.PlusPlus:
        case CPP14Parser.MinusMinus:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
        case CPP14Parser.Integerliteral:
        case CPP14Parser.Characterliteral:
        case CPP14Parser.Floatingliteral:
        case CPP14Parser.Stringliteral:
        case CPP14Parser.Userdefinedintegerliteral:
        case CPP14Parser.Userdefinedfloatingliteral:
        case CPP14Parser.Userdefinedstringliteral:
        case CPP14Parser.Userdefinedcharacterliteral:
            this.enterOuterAlt(localctx, 1);
            this.state = 3717;
            this.expression(0);
            this.state = 3718;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 3720;
            this.bracedinitlist();
            this.state = 3721;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Jumpstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_jumpstatement_DropletFile;
    return this;
}

Jumpstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Jumpstatement_DropletFileContext.prototype.constructor = Jumpstatement_DropletFileContext;

Jumpstatement_DropletFileContext.prototype.Break = function() {
    return this.getToken(CPP14Parser.Break, 0);
};

Jumpstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Jumpstatement_DropletFileContext.prototype.Continue = function() {
    return this.getToken(CPP14Parser.Continue, 0);
};

Jumpstatement_DropletFileContext.prototype.Return = function() {
    return this.getToken(CPP14Parser.Return, 0);
};

Jumpstatement_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Jumpstatement_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Jumpstatement_DropletFileContext.prototype.Goto = function() {
    return this.getToken(CPP14Parser.Goto, 0);
};

Jumpstatement_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Jumpstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterJumpstatement_DropletFile(this);
	}
};

Jumpstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitJumpstatement_DropletFile(this);
	}
};




CPP14Parser.Jumpstatement_DropletFileContext = Jumpstatement_DropletFileContext;

CPP14Parser.prototype.jumpstatement_DropletFile = function() {

    var localctx = new Jumpstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 494, CPP14Parser.RULE_jumpstatement_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3746;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,403,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3725;
            this.match(CPP14Parser.Break);
            this.state = 3726;
            this.match(CPP14Parser.Semi);
            this.state = 3727;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3728;
            this.match(CPP14Parser.Continue);
            this.state = 3729;
            this.match(CPP14Parser.Semi);
            this.state = 3730;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3731;
            this.match(CPP14Parser.Return);
            this.state = 3733;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 3732;
                this.expression(0);
            }

            this.state = 3735;
            this.match(CPP14Parser.Semi);
            this.state = 3736;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3737;
            this.match(CPP14Parser.Return);
            this.state = 3738;
            this.bracedinitlist();
            this.state = 3739;
            this.match(CPP14Parser.Semi);
            this.state = 3740;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 3742;
            this.match(CPP14Parser.Goto);
            this.state = 3743;
            this.match(CPP14Parser.Identifier);
            this.state = 3744;
            this.match(CPP14Parser.Semi);
            this.state = 3745;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Declarationstatement_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declarationstatement_DropletFile;
    return this;
}

Declarationstatement_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Declarationstatement_DropletFileContext.prototype.constructor = Declarationstatement_DropletFileContext;

Declarationstatement_DropletFileContext.prototype.blockdeclaration = function() {
    return this.getTypedRuleContext(BlockdeclarationContext,0);
};

Declarationstatement_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Declarationstatement_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclarationstatement_DropletFile(this);
	}
};

Declarationstatement_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclarationstatement_DropletFile(this);
	}
};




CPP14Parser.Declarationstatement_DropletFileContext = Declarationstatement_DropletFileContext;

CPP14Parser.prototype.declarationstatement_DropletFile = function() {

    var localctx = new Declarationstatement_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 496, CPP14Parser.RULE_declarationstatement_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3748;
        this.blockdeclaration();
        this.state = 3749;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Declarationseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declarationseq_DropletFile;
    return this;
}

Declarationseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Declarationseq_DropletFileContext.prototype.constructor = Declarationseq_DropletFileContext;

Declarationseq_DropletFileContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

Declarationseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Declarationseq_DropletFileContext.prototype.declarationseq = function() {
    return this.getTypedRuleContext(DeclarationseqContext,0);
};

Declarationseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclarationseq_DropletFile(this);
	}
};

Declarationseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclarationseq_DropletFile(this);
	}
};




CPP14Parser.Declarationseq_DropletFileContext = Declarationseq_DropletFileContext;

CPP14Parser.prototype.declarationseq_DropletFile = function() {

    var localctx = new Declarationseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 498, CPP14Parser.RULE_declarationseq_DropletFile);
    try {
        this.state = 3758;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,404,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3751;
            this.declaration();
            this.state = 3752;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3754;
            this.declarationseq(0);
            this.state = 3755;
            this.declaration();
            this.state = 3756;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Declaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declaration_DropletFile;
    return this;
}

Declaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Declaration_DropletFileContext.prototype.constructor = Declaration_DropletFileContext;

Declaration_DropletFileContext.prototype.blockdeclaration = function() {
    return this.getTypedRuleContext(BlockdeclarationContext,0);
};

Declaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Declaration_DropletFileContext.prototype.functiondefinition = function() {
    return this.getTypedRuleContext(FunctiondefinitionContext,0);
};

Declaration_DropletFileContext.prototype.templatedeclaration = function() {
    return this.getTypedRuleContext(TemplatedeclarationContext,0);
};

Declaration_DropletFileContext.prototype.explicitinstantiation = function() {
    return this.getTypedRuleContext(ExplicitinstantiationContext,0);
};

Declaration_DropletFileContext.prototype.explicitspecialization = function() {
    return this.getTypedRuleContext(ExplicitspecializationContext,0);
};

Declaration_DropletFileContext.prototype.linkagespecification = function() {
    return this.getTypedRuleContext(LinkagespecificationContext,0);
};

Declaration_DropletFileContext.prototype.namespacedefinition = function() {
    return this.getTypedRuleContext(NamespacedefinitionContext,0);
};

Declaration_DropletFileContext.prototype.emptydeclaration = function() {
    return this.getTypedRuleContext(EmptydeclarationContext,0);
};

Declaration_DropletFileContext.prototype.attributedeclaration = function() {
    return this.getTypedRuleContext(AttributedeclarationContext,0);
};

Declaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclaration_DropletFile(this);
	}
};

Declaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclaration_DropletFile(this);
	}
};




CPP14Parser.Declaration_DropletFileContext = Declaration_DropletFileContext;

CPP14Parser.prototype.declaration_DropletFile = function() {

    var localctx = new Declaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 500, CPP14Parser.RULE_declaration_DropletFile);
    try {
        this.state = 3787;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,405,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3760;
            this.blockdeclaration();
            this.state = 3761;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3763;
            this.functiondefinition();
            this.state = 3764;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3766;
            this.templatedeclaration();
            this.state = 3767;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3769;
            this.explicitinstantiation();
            this.state = 3770;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 3772;
            this.explicitspecialization();
            this.state = 3773;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 3775;
            this.linkagespecification();
            this.state = 3776;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 3778;
            this.namespacedefinition();
            this.state = 3779;
            this.match(CPP14Parser.EOF);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 3781;
            this.emptydeclaration();
            this.state = 3782;
            this.match(CPP14Parser.EOF);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 3784;
            this.attributedeclaration();
            this.state = 3785;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Blockdeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_blockdeclaration_DropletFile;
    return this;
}

Blockdeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Blockdeclaration_DropletFileContext.prototype.constructor = Blockdeclaration_DropletFileContext;

Blockdeclaration_DropletFileContext.prototype.simpledeclaration = function() {
    return this.getTypedRuleContext(SimpledeclarationContext,0);
};

Blockdeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Blockdeclaration_DropletFileContext.prototype.asmdefinition = function() {
    return this.getTypedRuleContext(AsmdefinitionContext,0);
};

Blockdeclaration_DropletFileContext.prototype.namespacealiasdefinition = function() {
    return this.getTypedRuleContext(NamespacealiasdefinitionContext,0);
};

Blockdeclaration_DropletFileContext.prototype.usingdeclaration = function() {
    return this.getTypedRuleContext(UsingdeclarationContext,0);
};

Blockdeclaration_DropletFileContext.prototype.usingdirective = function() {
    return this.getTypedRuleContext(UsingdirectiveContext,0);
};

Blockdeclaration_DropletFileContext.prototype.static_assertdeclaration = function() {
    return this.getTypedRuleContext(Static_assertdeclarationContext,0);
};

Blockdeclaration_DropletFileContext.prototype.aliasdeclaration = function() {
    return this.getTypedRuleContext(AliasdeclarationContext,0);
};

Blockdeclaration_DropletFileContext.prototype.opaqueenumdeclaration = function() {
    return this.getTypedRuleContext(OpaqueenumdeclarationContext,0);
};

Blockdeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBlockdeclaration_DropletFile(this);
	}
};

Blockdeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBlockdeclaration_DropletFile(this);
	}
};




CPP14Parser.Blockdeclaration_DropletFileContext = Blockdeclaration_DropletFileContext;

CPP14Parser.prototype.blockdeclaration_DropletFile = function() {

    var localctx = new Blockdeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 502, CPP14Parser.RULE_blockdeclaration_DropletFile);
    try {
        this.state = 3813;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,406,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3789;
            this.simpledeclaration();
            this.state = 3790;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3792;
            this.asmdefinition();
            this.state = 3793;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3795;
            this.namespacealiasdefinition();
            this.state = 3796;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3798;
            this.usingdeclaration();
            this.state = 3799;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 3801;
            this.usingdirective();
            this.state = 3802;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 3804;
            this.static_assertdeclaration();
            this.state = 3805;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 3807;
            this.aliasdeclaration();
            this.state = 3808;
            this.match(CPP14Parser.EOF);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 3810;
            this.opaqueenumdeclaration();
            this.state = 3811;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Aliasdeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_aliasdeclaration_DropletFile;
    return this;
}

Aliasdeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Aliasdeclaration_DropletFileContext.prototype.constructor = Aliasdeclaration_DropletFileContext;

Aliasdeclaration_DropletFileContext.prototype.Using = function() {
    return this.getToken(CPP14Parser.Using, 0);
};

Aliasdeclaration_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Aliasdeclaration_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Aliasdeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Aliasdeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Aliasdeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAliasdeclaration_DropletFile(this);
	}
};

Aliasdeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAliasdeclaration_DropletFile(this);
	}
};




CPP14Parser.Aliasdeclaration_DropletFileContext = Aliasdeclaration_DropletFileContext;

CPP14Parser.prototype.aliasdeclaration_DropletFile = function() {

    var localctx = new Aliasdeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 504, CPP14Parser.RULE_aliasdeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3815;
        this.match(CPP14Parser.Using);
        this.state = 3816;
        this.match(CPP14Parser.Identifier);
        this.state = 3818;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 3817;
            this.attributespecifierseq(0);
        }

        this.state = 3820;
        this.match(CPP14Parser.Assign);
        this.state = 3821;
        this.typeid();
        this.state = 3822;
        this.match(CPP14Parser.Semi);
        this.state = 3823;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Simpledeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simpledeclaration_DropletFile;
    return this;
}

Simpledeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Simpledeclaration_DropletFileContext.prototype.constructor = Simpledeclaration_DropletFileContext;

Simpledeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Simpledeclaration_DropletFileContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

Simpledeclaration_DropletFileContext.prototype.initdeclaratorlist = function() {
    return this.getTypedRuleContext(InitdeclaratorlistContext,0);
};

Simpledeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Simpledeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimpledeclaration_DropletFile(this);
	}
};

Simpledeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimpledeclaration_DropletFile(this);
	}
};




CPP14Parser.Simpledeclaration_DropletFileContext = Simpledeclaration_DropletFileContext;

CPP14Parser.prototype.simpledeclaration_DropletFile = function() {

    var localctx = new Simpledeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 506, CPP14Parser.RULE_simpledeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3841;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Class:
        case CPP14Parser.Const:
        case CPP14Parser.Constexpr:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Enum:
        case CPP14Parser.Explicit:
        case CPP14Parser.Extern:
        case CPP14Parser.Float:
        case CPP14Parser.Friend:
        case CPP14Parser.Inline:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Mutable:
        case CPP14Parser.Operator:
        case CPP14Parser.Register:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Static:
        case CPP14Parser.Struct:
        case CPP14Parser.Thread_local:
        case CPP14Parser.Typedef:
        case CPP14Parser.Typename:
        case CPP14Parser.Union:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Virtual:
        case CPP14Parser.Void:
        case CPP14Parser.Volatile:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Tilde:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Semi:
        case CPP14Parser.Ellipsis:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 3826;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,408,this._ctx);
            if(la_===1) {
                this.state = 3825;
                this.declspecifierseq();

            }
            this.state = 3829;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || _la===CPP14Parser.Operator || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)) | (1 << (CPP14Parser.Tilde - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 3828;
                this.initdeclaratorlist(0);
            }

            this.state = 3831;
            this.match(CPP14Parser.Semi);
            this.state = 3832;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Alignas:
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 2);
            this.state = 3833;
            this.attributespecifierseq(0);
            this.state = 3835;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,410,this._ctx);
            if(la_===1) {
                this.state = 3834;
                this.declspecifierseq();

            }
            this.state = 3837;
            this.initdeclaratorlist(0);
            this.state = 3838;
            this.match(CPP14Parser.Semi);
            this.state = 3839;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Static_assertdeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_static_assertdeclaration_DropletFile;
    return this;
}

Static_assertdeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Static_assertdeclaration_DropletFileContext.prototype.constructor = Static_assertdeclaration_DropletFileContext;

Static_assertdeclaration_DropletFileContext.prototype.Static_assert = function() {
    return this.getToken(CPP14Parser.Static_assert, 0);
};

Static_assertdeclaration_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Static_assertdeclaration_DropletFileContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

Static_assertdeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Static_assertdeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStatic_assertdeclaration_DropletFile(this);
	}
};

Static_assertdeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStatic_assertdeclaration_DropletFile(this);
	}
};




CPP14Parser.Static_assertdeclaration_DropletFileContext = Static_assertdeclaration_DropletFileContext;

CPP14Parser.prototype.static_assertdeclaration_DropletFile = function() {

    var localctx = new Static_assertdeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 508, CPP14Parser.RULE_static_assertdeclaration_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3843;
        this.match(CPP14Parser.Static_assert);
        this.state = 3844;
        this.match(CPP14Parser.LeftParen);
        this.state = 3845;
        this.constantexpression();
        this.state = 3846;
        this.match(CPP14Parser.Comma);
        this.state = 3847;
        this.match(CPP14Parser.Stringliteral);
        this.state = 3848;
        this.match(CPP14Parser.RightParen);
        this.state = 3849;
        this.match(CPP14Parser.Semi);
        this.state = 3850;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Emptydeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_emptydeclaration_DropletFile;
    return this;
}

Emptydeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Emptydeclaration_DropletFileContext.prototype.constructor = Emptydeclaration_DropletFileContext;

Emptydeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Emptydeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEmptydeclaration_DropletFile(this);
	}
};

Emptydeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEmptydeclaration_DropletFile(this);
	}
};




CPP14Parser.Emptydeclaration_DropletFileContext = Emptydeclaration_DropletFileContext;

CPP14Parser.prototype.emptydeclaration_DropletFile = function() {

    var localctx = new Emptydeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 510, CPP14Parser.RULE_emptydeclaration_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3852;
        this.match(CPP14Parser.Semi);
        this.state = 3853;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributedeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributedeclaration_DropletFile;
    return this;
}

Attributedeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributedeclaration_DropletFileContext.prototype.constructor = Attributedeclaration_DropletFileContext;

Attributedeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Attributedeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributedeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributedeclaration_DropletFile(this);
	}
};

Attributedeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributedeclaration_DropletFile(this);
	}
};




CPP14Parser.Attributedeclaration_DropletFileContext = Attributedeclaration_DropletFileContext;

CPP14Parser.prototype.attributedeclaration_DropletFile = function() {

    var localctx = new Attributedeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 512, CPP14Parser.RULE_attributedeclaration_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3855;
        this.attributespecifierseq(0);
        this.state = 3856;
        this.match(CPP14Parser.Semi);
        this.state = 3857;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Declspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declspecifier_DropletFile;
    return this;
}

Declspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Declspecifier_DropletFileContext.prototype.constructor = Declspecifier_DropletFileContext;

Declspecifier_DropletFileContext.prototype.storageclassspecifier = function() {
    return this.getTypedRuleContext(StorageclassspecifierContext,0);
};

Declspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Declspecifier_DropletFileContext.prototype.typespecifier = function() {
    return this.getTypedRuleContext(TypespecifierContext,0);
};

Declspecifier_DropletFileContext.prototype.functionspecifier = function() {
    return this.getTypedRuleContext(FunctionspecifierContext,0);
};

Declspecifier_DropletFileContext.prototype.Friend = function() {
    return this.getToken(CPP14Parser.Friend, 0);
};

Declspecifier_DropletFileContext.prototype.Typedef = function() {
    return this.getToken(CPP14Parser.Typedef, 0);
};

Declspecifier_DropletFileContext.prototype.Constexpr = function() {
    return this.getToken(CPP14Parser.Constexpr, 0);
};

Declspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclspecifier_DropletFile(this);
	}
};

Declspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclspecifier_DropletFile(this);
	}
};




CPP14Parser.Declspecifier_DropletFileContext = Declspecifier_DropletFileContext;

CPP14Parser.prototype.declspecifier_DropletFile = function() {

    var localctx = new Declspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 514, CPP14Parser.RULE_declspecifier_DropletFile);
    try {
        this.state = 3874;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Extern:
        case CPP14Parser.Mutable:
        case CPP14Parser.Register:
        case CPP14Parser.Static:
        case CPP14Parser.Thread_local:
            this.enterOuterAlt(localctx, 1);
            this.state = 3859;
            this.storageclassspecifier();
            this.state = 3860;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Class:
        case CPP14Parser.Const:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Enum:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Struct:
        case CPP14Parser.Typename:
        case CPP14Parser.Union:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Volatile:
        case CPP14Parser.Wchar:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 3862;
            this.typespecifier();
            this.state = 3863;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Explicit:
        case CPP14Parser.Inline:
        case CPP14Parser.Virtual:
            this.enterOuterAlt(localctx, 3);
            this.state = 3865;
            this.functionspecifier();
            this.state = 3866;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Friend:
            this.enterOuterAlt(localctx, 4);
            this.state = 3868;
            this.match(CPP14Parser.Friend);
            this.state = 3869;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Typedef:
            this.enterOuterAlt(localctx, 5);
            this.state = 3870;
            this.match(CPP14Parser.Typedef);
            this.state = 3871;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Constexpr:
            this.enterOuterAlt(localctx, 6);
            this.state = 3872;
            this.match(CPP14Parser.Constexpr);
            this.state = 3873;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Declspecifierseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declspecifierseq_DropletFile;
    return this;
}

Declspecifierseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Declspecifierseq_DropletFileContext.prototype.constructor = Declspecifierseq_DropletFileContext;

Declspecifierseq_DropletFileContext.prototype.declspecifier = function() {
    return this.getTypedRuleContext(DeclspecifierContext,0);
};

Declspecifierseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Declspecifierseq_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Declspecifierseq_DropletFileContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

Declspecifierseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclspecifierseq_DropletFile(this);
	}
};

Declspecifierseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclspecifierseq_DropletFile(this);
	}
};




CPP14Parser.Declspecifierseq_DropletFileContext = Declspecifierseq_DropletFileContext;

CPP14Parser.prototype.declspecifierseq_DropletFile = function() {

    var localctx = new Declspecifierseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 516, CPP14Parser.RULE_declspecifierseq_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3886;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,414,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3876;
            this.declspecifier();
            this.state = 3878;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3877;
                this.attributespecifierseq(0);
            }

            this.state = 3880;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3882;
            this.declspecifier();
            this.state = 3883;
            this.declspecifierseq();
            this.state = 3884;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Storageclassspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_storageclassspecifier_DropletFile;
    return this;
}

Storageclassspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Storageclassspecifier_DropletFileContext.prototype.constructor = Storageclassspecifier_DropletFileContext;

Storageclassspecifier_DropletFileContext.prototype.Register = function() {
    return this.getToken(CPP14Parser.Register, 0);
};

Storageclassspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Storageclassspecifier_DropletFileContext.prototype.Static = function() {
    return this.getToken(CPP14Parser.Static, 0);
};

Storageclassspecifier_DropletFileContext.prototype.Thread_local = function() {
    return this.getToken(CPP14Parser.Thread_local, 0);
};

Storageclassspecifier_DropletFileContext.prototype.Extern = function() {
    return this.getToken(CPP14Parser.Extern, 0);
};

Storageclassspecifier_DropletFileContext.prototype.Mutable = function() {
    return this.getToken(CPP14Parser.Mutable, 0);
};

Storageclassspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterStorageclassspecifier_DropletFile(this);
	}
};

Storageclassspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitStorageclassspecifier_DropletFile(this);
	}
};




CPP14Parser.Storageclassspecifier_DropletFileContext = Storageclassspecifier_DropletFileContext;

CPP14Parser.prototype.storageclassspecifier_DropletFile = function() {

    var localctx = new Storageclassspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 518, CPP14Parser.RULE_storageclassspecifier_DropletFile);
    try {
        this.state = 3898;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Register:
            this.enterOuterAlt(localctx, 1);
            this.state = 3888;
            this.match(CPP14Parser.Register);
            this.state = 3889;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Static:
            this.enterOuterAlt(localctx, 2);
            this.state = 3890;
            this.match(CPP14Parser.Static);
            this.state = 3891;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Thread_local:
            this.enterOuterAlt(localctx, 3);
            this.state = 3892;
            this.match(CPP14Parser.Thread_local);
            this.state = 3893;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Extern:
            this.enterOuterAlt(localctx, 4);
            this.state = 3894;
            this.match(CPP14Parser.Extern);
            this.state = 3895;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Mutable:
            this.enterOuterAlt(localctx, 5);
            this.state = 3896;
            this.match(CPP14Parser.Mutable);
            this.state = 3897;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Functionspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functionspecifier_DropletFile;
    return this;
}

Functionspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Functionspecifier_DropletFileContext.prototype.constructor = Functionspecifier_DropletFileContext;

Functionspecifier_DropletFileContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

Functionspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Functionspecifier_DropletFileContext.prototype.Virtual = function() {
    return this.getToken(CPP14Parser.Virtual, 0);
};

Functionspecifier_DropletFileContext.prototype.Explicit = function() {
    return this.getToken(CPP14Parser.Explicit, 0);
};

Functionspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctionspecifier_DropletFile(this);
	}
};

Functionspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctionspecifier_DropletFile(this);
	}
};




CPP14Parser.Functionspecifier_DropletFileContext = Functionspecifier_DropletFileContext;

CPP14Parser.prototype.functionspecifier_DropletFile = function() {

    var localctx = new Functionspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 520, CPP14Parser.RULE_functionspecifier_DropletFile);
    try {
        this.state = 3906;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Inline:
            this.enterOuterAlt(localctx, 1);
            this.state = 3900;
            this.match(CPP14Parser.Inline);
            this.state = 3901;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Virtual:
            this.enterOuterAlt(localctx, 2);
            this.state = 3902;
            this.match(CPP14Parser.Virtual);
            this.state = 3903;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Explicit:
            this.enterOuterAlt(localctx, 3);
            this.state = 3904;
            this.match(CPP14Parser.Explicit);
            this.state = 3905;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typedefname_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typedefname_DropletFile;
    return this;
}

Typedefname_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typedefname_DropletFileContext.prototype.constructor = Typedefname_DropletFileContext;

Typedefname_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Typedefname_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typedefname_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypedefname_DropletFile(this);
	}
};

Typedefname_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypedefname_DropletFile(this);
	}
};




CPP14Parser.Typedefname_DropletFileContext = Typedefname_DropletFileContext;

CPP14Parser.prototype.typedefname_DropletFile = function() {

    var localctx = new Typedefname_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 522, CPP14Parser.RULE_typedefname_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 3908;
        this.match(CPP14Parser.Identifier);
        this.state = 3909;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typespecifier_DropletFile;
    return this;
}

Typespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typespecifier_DropletFileContext.prototype.constructor = Typespecifier_DropletFileContext;

Typespecifier_DropletFileContext.prototype.trailingtypespecifier = function() {
    return this.getTypedRuleContext(TrailingtypespecifierContext,0);
};

Typespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typespecifier_DropletFileContext.prototype.classspecifier = function() {
    return this.getTypedRuleContext(ClassspecifierContext,0);
};

Typespecifier_DropletFileContext.prototype.enumspecifier = function() {
    return this.getTypedRuleContext(EnumspecifierContext,0);
};

Typespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypespecifier_DropletFile(this);
	}
};

Typespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypespecifier_DropletFile(this);
	}
};




CPP14Parser.Typespecifier_DropletFileContext = Typespecifier_DropletFileContext;

CPP14Parser.prototype.typespecifier_DropletFile = function() {

    var localctx = new Typespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 524, CPP14Parser.RULE_typespecifier_DropletFile);
    try {
        this.state = 3920;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,417,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3911;
            this.trailingtypespecifier();
            this.state = 3912;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3914;
            this.classspecifier();
            this.state = 3915;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3917;
            this.enumspecifier();
            this.state = 3918;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Trailingtypespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_trailingtypespecifier_DropletFile;
    return this;
}

Trailingtypespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trailingtypespecifier_DropletFileContext.prototype.constructor = Trailingtypespecifier_DropletFileContext;

Trailingtypespecifier_DropletFileContext.prototype.simpletypespecifier = function() {
    return this.getTypedRuleContext(SimpletypespecifierContext,0);
};

Trailingtypespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Trailingtypespecifier_DropletFileContext.prototype.elaboratedtypespecifier = function() {
    return this.getTypedRuleContext(ElaboratedtypespecifierContext,0);
};

Trailingtypespecifier_DropletFileContext.prototype.typenamespecifier = function() {
    return this.getTypedRuleContext(TypenamespecifierContext,0);
};

Trailingtypespecifier_DropletFileContext.prototype.cvqualifier = function() {
    return this.getTypedRuleContext(CvqualifierContext,0);
};

Trailingtypespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTrailingtypespecifier_DropletFile(this);
	}
};

Trailingtypespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTrailingtypespecifier_DropletFile(this);
	}
};




CPP14Parser.Trailingtypespecifier_DropletFileContext = Trailingtypespecifier_DropletFileContext;

CPP14Parser.prototype.trailingtypespecifier_DropletFile = function() {

    var localctx = new Trailingtypespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 526, CPP14Parser.RULE_trailingtypespecifier_DropletFile);
    try {
        this.state = 3934;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Wchar:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 3922;
            this.simpletypespecifier();
            this.state = 3923;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Class:
        case CPP14Parser.Enum:
        case CPP14Parser.Struct:
        case CPP14Parser.Union:
            this.enterOuterAlt(localctx, 2);
            this.state = 3925;
            this.elaboratedtypespecifier();
            this.state = 3926;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Typename:
            this.enterOuterAlt(localctx, 3);
            this.state = 3928;
            this.typenamespecifier();
            this.state = 3929;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Const:
        case CPP14Parser.Volatile:
            this.enterOuterAlt(localctx, 4);
            this.state = 3931;
            this.cvqualifier();
            this.state = 3932;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typespecifierseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typespecifierseq_DropletFile;
    return this;
}

Typespecifierseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typespecifierseq_DropletFileContext.prototype.constructor = Typespecifierseq_DropletFileContext;

Typespecifierseq_DropletFileContext.prototype.typespecifier = function() {
    return this.getTypedRuleContext(TypespecifierContext,0);
};

Typespecifierseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typespecifierseq_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Typespecifierseq_DropletFileContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

Typespecifierseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypespecifierseq_DropletFile(this);
	}
};

Typespecifierseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypespecifierseq_DropletFile(this);
	}
};




CPP14Parser.Typespecifierseq_DropletFileContext = Typespecifierseq_DropletFileContext;

CPP14Parser.prototype.typespecifierseq_DropletFile = function() {

    var localctx = new Typespecifierseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 528, CPP14Parser.RULE_typespecifierseq_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3946;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,420,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3936;
            this.typespecifier();
            this.state = 3938;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3937;
                this.attributespecifierseq(0);
            }

            this.state = 3940;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3942;
            this.typespecifier();
            this.state = 3943;
            this.typespecifierseq();
            this.state = 3944;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Trailingtypespecifierseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_trailingtypespecifierseq_DropletFile;
    return this;
}

Trailingtypespecifierseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trailingtypespecifierseq_DropletFileContext.prototype.constructor = Trailingtypespecifierseq_DropletFileContext;

Trailingtypespecifierseq_DropletFileContext.prototype.trailingtypespecifier = function() {
    return this.getTypedRuleContext(TrailingtypespecifierContext,0);
};

Trailingtypespecifierseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Trailingtypespecifierseq_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Trailingtypespecifierseq_DropletFileContext.prototype.trailingtypespecifierseq = function() {
    return this.getTypedRuleContext(TrailingtypespecifierseqContext,0);
};

Trailingtypespecifierseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTrailingtypespecifierseq_DropletFile(this);
	}
};

Trailingtypespecifierseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTrailingtypespecifierseq_DropletFile(this);
	}
};




CPP14Parser.Trailingtypespecifierseq_DropletFileContext = Trailingtypespecifierseq_DropletFileContext;

CPP14Parser.prototype.trailingtypespecifierseq_DropletFile = function() {

    var localctx = new Trailingtypespecifierseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 530, CPP14Parser.RULE_trailingtypespecifierseq_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 3958;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,422,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3948;
            this.trailingtypespecifier();
            this.state = 3950;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 3949;
                this.attributespecifierseq(0);
            }

            this.state = 3952;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3954;
            this.trailingtypespecifier();
            this.state = 3955;
            this.trailingtypespecifierseq();
            this.state = 3956;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Simpletypespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simpletypespecifier_DropletFile;
    return this;
}

Simpletypespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Simpletypespecifier_DropletFileContext.prototype.constructor = Simpletypespecifier_DropletFileContext;

Simpletypespecifier_DropletFileContext.prototype.typename = function() {
    return this.getTypedRuleContext(TypenameContext,0);
};

Simpletypespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Simpletypespecifier_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Simpletypespecifier_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Simpletypespecifier_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Simpletypespecifier_DropletFileContext.prototype.Char = function() {
    return this.getToken(CPP14Parser.Char, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Char16 = function() {
    return this.getToken(CPP14Parser.Char16, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Char32 = function() {
    return this.getToken(CPP14Parser.Char32, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Wchar = function() {
    return this.getToken(CPP14Parser.Wchar, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Bool = function() {
    return this.getToken(CPP14Parser.Bool, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Short = function() {
    return this.getToken(CPP14Parser.Short, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Int = function() {
    return this.getToken(CPP14Parser.Int, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Long = function() {
    return this.getToken(CPP14Parser.Long, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Signed = function() {
    return this.getToken(CPP14Parser.Signed, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Unsigned = function() {
    return this.getToken(CPP14Parser.Unsigned, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Float = function() {
    return this.getToken(CPP14Parser.Float, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Double = function() {
    return this.getToken(CPP14Parser.Double, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Void = function() {
    return this.getToken(CPP14Parser.Void, 0);
};

Simpletypespecifier_DropletFileContext.prototype.Auto = function() {
    return this.getToken(CPP14Parser.Auto, 0);
};

Simpletypespecifier_DropletFileContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

Simpletypespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimpletypespecifier_DropletFile(this);
	}
};

Simpletypespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimpletypespecifier_DropletFile(this);
	}
};




CPP14Parser.Simpletypespecifier_DropletFileContext = Simpletypespecifier_DropletFileContext;

CPP14Parser.prototype.simpletypespecifier_DropletFile = function() {

    var localctx = new Simpletypespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 532, CPP14Parser.RULE_simpletypespecifier_DropletFile);
    try {
        this.state = 4002;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,424,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 3961;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,423,this._ctx);
            if(la_===1) {
                this.state = 3960;
                this.nestednamespecifier(0);

            }
            this.state = 3963;
            this.typename();
            this.state = 3964;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 3966;
            this.nestednamespecifier(0);
            this.state = 3967;
            this.match(CPP14Parser.Template);
            this.state = 3968;
            this.simpletemplateid();
            this.state = 3969;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 3971;
            this.match(CPP14Parser.Char);
            this.state = 3972;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 3973;
            this.match(CPP14Parser.Char16);
            this.state = 3974;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 3975;
            this.match(CPP14Parser.Char32);
            this.state = 3976;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 3977;
            this.match(CPP14Parser.Wchar);
            this.state = 3978;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 3979;
            this.match(CPP14Parser.Bool);
            this.state = 3980;
            this.match(CPP14Parser.EOF);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 3981;
            this.match(CPP14Parser.Short);
            this.state = 3982;
            this.match(CPP14Parser.EOF);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 3983;
            this.match(CPP14Parser.Int);
            this.state = 3984;
            this.match(CPP14Parser.EOF);
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 3985;
            this.match(CPP14Parser.Long);
            this.state = 3986;
            this.match(CPP14Parser.EOF);
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 3987;
            this.match(CPP14Parser.Signed);
            this.state = 3988;
            this.match(CPP14Parser.EOF);
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 3989;
            this.match(CPP14Parser.Unsigned);
            this.state = 3990;
            this.match(CPP14Parser.EOF);
            break;

        case 13:
            this.enterOuterAlt(localctx, 13);
            this.state = 3991;
            this.match(CPP14Parser.Float);
            this.state = 3992;
            this.match(CPP14Parser.EOF);
            break;

        case 14:
            this.enterOuterAlt(localctx, 14);
            this.state = 3993;
            this.match(CPP14Parser.Double);
            this.state = 3994;
            this.match(CPP14Parser.EOF);
            break;

        case 15:
            this.enterOuterAlt(localctx, 15);
            this.state = 3995;
            this.match(CPP14Parser.Void);
            this.state = 3996;
            this.match(CPP14Parser.EOF);
            break;

        case 16:
            this.enterOuterAlt(localctx, 16);
            this.state = 3997;
            this.match(CPP14Parser.Auto);
            this.state = 3998;
            this.match(CPP14Parser.EOF);
            break;

        case 17:
            this.enterOuterAlt(localctx, 17);
            this.state = 3999;
            this.decltypespecifier();
            this.state = 4000;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typename_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typename_DropletFile;
    return this;
}

Typename_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typename_DropletFileContext.prototype.constructor = Typename_DropletFileContext;

Typename_DropletFileContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

Typename_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typename_DropletFileContext.prototype.enumname = function() {
    return this.getTypedRuleContext(EnumnameContext,0);
};

Typename_DropletFileContext.prototype.typedefname = function() {
    return this.getTypedRuleContext(TypedefnameContext,0);
};

Typename_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Typename_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypename_DropletFile(this);
	}
};

Typename_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypename_DropletFile(this);
	}
};




CPP14Parser.Typename_DropletFileContext = Typename_DropletFileContext;

CPP14Parser.prototype.typename_DropletFile = function() {

    var localctx = new Typename_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 534, CPP14Parser.RULE_typename_DropletFile);
    try {
        this.state = 4016;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,425,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4004;
            this.classname();
            this.state = 4005;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4007;
            this.enumname();
            this.state = 4008;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4010;
            this.typedefname();
            this.state = 4011;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4013;
            this.simpletemplateid();
            this.state = 4014;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Decltypespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_decltypespecifier_DropletFile;
    return this;
}

Decltypespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Decltypespecifier_DropletFileContext.prototype.constructor = Decltypespecifier_DropletFileContext;

Decltypespecifier_DropletFileContext.prototype.Decltype = function() {
    return this.getToken(CPP14Parser.Decltype, 0);
};

Decltypespecifier_DropletFileContext.prototype.expression = function() {
    return this.getTypedRuleContext(ExpressionContext,0);
};

Decltypespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Decltypespecifier_DropletFileContext.prototype.Auto = function() {
    return this.getToken(CPP14Parser.Auto, 0);
};

Decltypespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDecltypespecifier_DropletFile(this);
	}
};

Decltypespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDecltypespecifier_DropletFile(this);
	}
};




CPP14Parser.Decltypespecifier_DropletFileContext = Decltypespecifier_DropletFileContext;

CPP14Parser.prototype.decltypespecifier_DropletFile = function() {

    var localctx = new Decltypespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 536, CPP14Parser.RULE_decltypespecifier_DropletFile);
    try {
        this.state = 4029;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,426,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4018;
            this.match(CPP14Parser.Decltype);
            this.state = 4019;
            this.match(CPP14Parser.LeftParen);
            this.state = 4020;
            this.expression(0);
            this.state = 4021;
            this.match(CPP14Parser.RightParen);
            this.state = 4022;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4024;
            this.match(CPP14Parser.Decltype);
            this.state = 4025;
            this.match(CPP14Parser.LeftParen);
            this.state = 4026;
            this.match(CPP14Parser.Auto);
            this.state = 4027;
            this.match(CPP14Parser.RightParen);
            this.state = 4028;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Elaboratedtypespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_elaboratedtypespecifier_DropletFile;
    return this;
}

Elaboratedtypespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Elaboratedtypespecifier_DropletFileContext.prototype.constructor = Elaboratedtypespecifier_DropletFileContext;

Elaboratedtypespecifier_DropletFileContext.prototype.classkey = function() {
    return this.getTypedRuleContext(ClasskeyContext,0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.Enum = function() {
    return this.getToken(CPP14Parser.Enum, 0);
};

Elaboratedtypespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterElaboratedtypespecifier_DropletFile(this);
	}
};

Elaboratedtypespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitElaboratedtypespecifier_DropletFile(this);
	}
};




CPP14Parser.Elaboratedtypespecifier_DropletFileContext = Elaboratedtypespecifier_DropletFileContext;

CPP14Parser.prototype.elaboratedtypespecifier_DropletFile = function() {

    var localctx = new Elaboratedtypespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 538, CPP14Parser.RULE_elaboratedtypespecifier_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4059;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,431,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4031;
            this.classkey();
            this.state = 4033;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4032;
                this.attributespecifierseq(0);
            }

            this.state = 4036;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,428,this._ctx);
            if(la_===1) {
                this.state = 4035;
                this.nestednamespecifier(0);

            }
            this.state = 4038;
            this.match(CPP14Parser.Identifier);
            this.state = 4039;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4041;
            this.classkey();
            this.state = 4042;
            this.simpletemplateid();
            this.state = 4043;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4045;
            this.classkey();
            this.state = 4046;
            this.nestednamespecifier(0);
            this.state = 4048;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Template) {
                this.state = 4047;
                this.match(CPP14Parser.Template);
            }

            this.state = 4050;
            this.simpletemplateid();
            this.state = 4051;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4053;
            this.match(CPP14Parser.Enum);
            this.state = 4055;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,430,this._ctx);
            if(la_===1) {
                this.state = 4054;
                this.nestednamespecifier(0);

            }
            this.state = 4057;
            this.match(CPP14Parser.Identifier);
            this.state = 4058;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumname_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumname_DropletFile;
    return this;
}

Enumname_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumname_DropletFileContext.prototype.constructor = Enumname_DropletFileContext;

Enumname_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Enumname_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumname_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumname_DropletFile(this);
	}
};

Enumname_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumname_DropletFile(this);
	}
};




CPP14Parser.Enumname_DropletFileContext = Enumname_DropletFileContext;

CPP14Parser.prototype.enumname_DropletFile = function() {

    var localctx = new Enumname_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 540, CPP14Parser.RULE_enumname_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4061;
        this.match(CPP14Parser.Identifier);
        this.state = 4062;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumspecifier_DropletFile;
    return this;
}

Enumspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumspecifier_DropletFileContext.prototype.constructor = Enumspecifier_DropletFileContext;

Enumspecifier_DropletFileContext.prototype.enumhead = function() {
    return this.getTypedRuleContext(EnumheadContext,0);
};

Enumspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumspecifier_DropletFileContext.prototype.enumeratorlist = function() {
    return this.getTypedRuleContext(EnumeratorlistContext,0);
};

Enumspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumspecifier_DropletFile(this);
	}
};

Enumspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumspecifier_DropletFile(this);
	}
};




CPP14Parser.Enumspecifier_DropletFileContext = Enumspecifier_DropletFileContext;

CPP14Parser.prototype.enumspecifier_DropletFile = function() {

    var localctx = new Enumspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 542, CPP14Parser.RULE_enumspecifier_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4079;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,433,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4064;
            this.enumhead();
            this.state = 4065;
            this.match(CPP14Parser.LeftBrace);
            this.state = 4067;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 4066;
                this.enumeratorlist(0);
            }

            this.state = 4069;
            this.match(CPP14Parser.RightBrace);
            this.state = 4070;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4072;
            this.enumhead();
            this.state = 4073;
            this.match(CPP14Parser.LeftBrace);
            this.state = 4074;
            this.enumeratorlist(0);
            this.state = 4075;
            this.match(CPP14Parser.Comma);
            this.state = 4076;
            this.match(CPP14Parser.RightBrace);
            this.state = 4077;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumhead_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumhead_DropletFile;
    return this;
}

Enumhead_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumhead_DropletFileContext.prototype.constructor = Enumhead_DropletFileContext;

Enumhead_DropletFileContext.prototype.enumkey = function() {
    return this.getTypedRuleContext(EnumkeyContext,0);
};

Enumhead_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumhead_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Enumhead_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Enumhead_DropletFileContext.prototype.enumbase = function() {
    return this.getTypedRuleContext(EnumbaseContext,0);
};

Enumhead_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Enumhead_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumhead_DropletFile(this);
	}
};

Enumhead_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumhead_DropletFile(this);
	}
};




CPP14Parser.Enumhead_DropletFileContext = Enumhead_DropletFileContext;

CPP14Parser.prototype.enumhead_DropletFile = function() {

    var localctx = new Enumhead_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 544, CPP14Parser.RULE_enumhead_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4104;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,439,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4081;
            this.enumkey();
            this.state = 4083;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4082;
                this.attributespecifierseq(0);
            }

            this.state = 4086;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 4085;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 4089;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 4088;
                this.enumbase();
            }

            this.state = 4091;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4093;
            this.enumkey();
            this.state = 4095;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4094;
                this.attributespecifierseq(0);
            }

            this.state = 4097;
            this.nestednamespecifier(0);
            this.state = 4098;
            this.match(CPP14Parser.Identifier);
            this.state = 4100;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 4099;
                this.enumbase();
            }

            this.state = 4102;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Opaqueenumdeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_opaqueenumdeclaration_DropletFile;
    return this;
}

Opaqueenumdeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Opaqueenumdeclaration_DropletFileContext.prototype.constructor = Opaqueenumdeclaration_DropletFileContext;

Opaqueenumdeclaration_DropletFileContext.prototype.enumkey = function() {
    return this.getTypedRuleContext(EnumkeyContext,0);
};

Opaqueenumdeclaration_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Opaqueenumdeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Opaqueenumdeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Opaqueenumdeclaration_DropletFileContext.prototype.enumbase = function() {
    return this.getTypedRuleContext(EnumbaseContext,0);
};

Opaqueenumdeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOpaqueenumdeclaration_DropletFile(this);
	}
};

Opaqueenumdeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOpaqueenumdeclaration_DropletFile(this);
	}
};




CPP14Parser.Opaqueenumdeclaration_DropletFileContext = Opaqueenumdeclaration_DropletFileContext;

CPP14Parser.prototype.opaqueenumdeclaration_DropletFile = function() {

    var localctx = new Opaqueenumdeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 546, CPP14Parser.RULE_opaqueenumdeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4106;
        this.enumkey();
        this.state = 4108;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 4107;
            this.attributespecifierseq(0);
        }

        this.state = 4110;
        this.match(CPP14Parser.Identifier);
        this.state = 4112;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Colon) {
            this.state = 4111;
            this.enumbase();
        }

        this.state = 4114;
        this.match(CPP14Parser.Semi);
        this.state = 4115;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumkey_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumkey_DropletFile;
    return this;
}

Enumkey_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumkey_DropletFileContext.prototype.constructor = Enumkey_DropletFileContext;

Enumkey_DropletFileContext.prototype.Enum = function() {
    return this.getToken(CPP14Parser.Enum, 0);
};

Enumkey_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumkey_DropletFileContext.prototype.Class = function() {
    return this.getToken(CPP14Parser.Class, 0);
};

Enumkey_DropletFileContext.prototype.Struct = function() {
    return this.getToken(CPP14Parser.Struct, 0);
};

Enumkey_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumkey_DropletFile(this);
	}
};

Enumkey_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumkey_DropletFile(this);
	}
};




CPP14Parser.Enumkey_DropletFileContext = Enumkey_DropletFileContext;

CPP14Parser.prototype.enumkey_DropletFile = function() {

    var localctx = new Enumkey_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 548, CPP14Parser.RULE_enumkey_DropletFile);
    try {
        this.state = 4125;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,442,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4117;
            this.match(CPP14Parser.Enum);
            this.state = 4118;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4119;
            this.match(CPP14Parser.Enum);
            this.state = 4120;
            this.match(CPP14Parser.Class);
            this.state = 4121;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4122;
            this.match(CPP14Parser.Enum);
            this.state = 4123;
            this.match(CPP14Parser.Struct);
            this.state = 4124;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumbase_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumbase_DropletFile;
    return this;
}

Enumbase_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumbase_DropletFileContext.prototype.constructor = Enumbase_DropletFileContext;

Enumbase_DropletFileContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

Enumbase_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumbase_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumbase_DropletFile(this);
	}
};

Enumbase_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumbase_DropletFile(this);
	}
};




CPP14Parser.Enumbase_DropletFileContext = Enumbase_DropletFileContext;

CPP14Parser.prototype.enumbase_DropletFile = function() {

    var localctx = new Enumbase_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 550, CPP14Parser.RULE_enumbase_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4127;
        this.match(CPP14Parser.Colon);
        this.state = 4128;
        this.typespecifierseq();
        this.state = 4129;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumeratorlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumeratorlist_DropletFile;
    return this;
}

Enumeratorlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumeratorlist_DropletFileContext.prototype.constructor = Enumeratorlist_DropletFileContext;

Enumeratorlist_DropletFileContext.prototype.enumeratordefinition = function() {
    return this.getTypedRuleContext(EnumeratordefinitionContext,0);
};

Enumeratorlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumeratorlist_DropletFileContext.prototype.enumeratorlist = function() {
    return this.getTypedRuleContext(EnumeratorlistContext,0);
};

Enumeratorlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumeratorlist_DropletFile(this);
	}
};

Enumeratorlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumeratorlist_DropletFile(this);
	}
};




CPP14Parser.Enumeratorlist_DropletFileContext = Enumeratorlist_DropletFileContext;

CPP14Parser.prototype.enumeratorlist_DropletFile = function() {

    var localctx = new Enumeratorlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 552, CPP14Parser.RULE_enumeratorlist_DropletFile);
    try {
        this.state = 4139;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,443,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4131;
            this.enumeratordefinition();
            this.state = 4132;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4134;
            this.enumeratorlist(0);
            this.state = 4135;
            this.match(CPP14Parser.Comma);
            this.state = 4136;
            this.enumeratordefinition();
            this.state = 4137;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumeratordefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumeratordefinition_DropletFile;
    return this;
}

Enumeratordefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumeratordefinition_DropletFileContext.prototype.constructor = Enumeratordefinition_DropletFileContext;

Enumeratordefinition_DropletFileContext.prototype.enumerator = function() {
    return this.getTypedRuleContext(EnumeratorContext,0);
};

Enumeratordefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumeratordefinition_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Enumeratordefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumeratordefinition_DropletFile(this);
	}
};

Enumeratordefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumeratordefinition_DropletFile(this);
	}
};




CPP14Parser.Enumeratordefinition_DropletFileContext = Enumeratordefinition_DropletFileContext;

CPP14Parser.prototype.enumeratordefinition_DropletFile = function() {

    var localctx = new Enumeratordefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 554, CPP14Parser.RULE_enumeratordefinition_DropletFile);
    try {
        this.state = 4149;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,444,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4141;
            this.enumerator();
            this.state = 4142;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4144;
            this.enumerator();
            this.state = 4145;
            this.match(CPP14Parser.Assign);
            this.state = 4146;
            this.constantexpression();
            this.state = 4147;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Enumerator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_enumerator_DropletFile;
    return this;
}

Enumerator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Enumerator_DropletFileContext.prototype.constructor = Enumerator_DropletFileContext;

Enumerator_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Enumerator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Enumerator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterEnumerator_DropletFile(this);
	}
};

Enumerator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitEnumerator_DropletFile(this);
	}
};




CPP14Parser.Enumerator_DropletFileContext = Enumerator_DropletFileContext;

CPP14Parser.prototype.enumerator_DropletFile = function() {

    var localctx = new Enumerator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 556, CPP14Parser.RULE_enumerator_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4151;
        this.match(CPP14Parser.Identifier);
        this.state = 4152;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Namespacename_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacename_DropletFile;
    return this;
}

Namespacename_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Namespacename_DropletFileContext.prototype.constructor = Namespacename_DropletFileContext;

Namespacename_DropletFileContext.prototype.originalnamespacename = function() {
    return this.getTypedRuleContext(OriginalnamespacenameContext,0);
};

Namespacename_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Namespacename_DropletFileContext.prototype.namespacealias = function() {
    return this.getTypedRuleContext(NamespacealiasContext,0);
};

Namespacename_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacename_DropletFile(this);
	}
};

Namespacename_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacename_DropletFile(this);
	}
};




CPP14Parser.Namespacename_DropletFileContext = Namespacename_DropletFileContext;

CPP14Parser.prototype.namespacename_DropletFile = function() {

    var localctx = new Namespacename_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 558, CPP14Parser.RULE_namespacename_DropletFile);
    try {
        this.state = 4160;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,445,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4154;
            this.originalnamespacename();
            this.state = 4155;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4157;
            this.namespacealias();
            this.state = 4158;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Originalnamespacename_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_originalnamespacename_DropletFile;
    return this;
}

Originalnamespacename_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Originalnamespacename_DropletFileContext.prototype.constructor = Originalnamespacename_DropletFileContext;

Originalnamespacename_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Originalnamespacename_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Originalnamespacename_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOriginalnamespacename_DropletFile(this);
	}
};

Originalnamespacename_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOriginalnamespacename_DropletFile(this);
	}
};




CPP14Parser.Originalnamespacename_DropletFileContext = Originalnamespacename_DropletFileContext;

CPP14Parser.prototype.originalnamespacename_DropletFile = function() {

    var localctx = new Originalnamespacename_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 560, CPP14Parser.RULE_originalnamespacename_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4162;
        this.match(CPP14Parser.Identifier);
        this.state = 4163;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Namespacedefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacedefinition_DropletFile;
    return this;
}

Namespacedefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Namespacedefinition_DropletFileContext.prototype.constructor = Namespacedefinition_DropletFileContext;

Namespacedefinition_DropletFileContext.prototype.namednamespacedefinition = function() {
    return this.getTypedRuleContext(NamednamespacedefinitionContext,0);
};

Namespacedefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Namespacedefinition_DropletFileContext.prototype.unnamednamespacedefinition = function() {
    return this.getTypedRuleContext(UnnamednamespacedefinitionContext,0);
};

Namespacedefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacedefinition_DropletFile(this);
	}
};

Namespacedefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacedefinition_DropletFile(this);
	}
};




CPP14Parser.Namespacedefinition_DropletFileContext = Namespacedefinition_DropletFileContext;

CPP14Parser.prototype.namespacedefinition_DropletFile = function() {

    var localctx = new Namespacedefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 562, CPP14Parser.RULE_namespacedefinition_DropletFile);
    try {
        this.state = 4171;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,446,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4165;
            this.namednamespacedefinition();
            this.state = 4166;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4168;
            this.unnamednamespacedefinition();
            this.state = 4169;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Namednamespacedefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namednamespacedefinition_DropletFile;
    return this;
}

Namednamespacedefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Namednamespacedefinition_DropletFileContext.prototype.constructor = Namednamespacedefinition_DropletFileContext;

Namednamespacedefinition_DropletFileContext.prototype.originalnamespacedefinition = function() {
    return this.getTypedRuleContext(OriginalnamespacedefinitionContext,0);
};

Namednamespacedefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Namednamespacedefinition_DropletFileContext.prototype.extensionnamespacedefinition = function() {
    return this.getTypedRuleContext(ExtensionnamespacedefinitionContext,0);
};

Namednamespacedefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamednamespacedefinition_DropletFile(this);
	}
};

Namednamespacedefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamednamespacedefinition_DropletFile(this);
	}
};




CPP14Parser.Namednamespacedefinition_DropletFileContext = Namednamespacedefinition_DropletFileContext;

CPP14Parser.prototype.namednamespacedefinition_DropletFile = function() {

    var localctx = new Namednamespacedefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 564, CPP14Parser.RULE_namednamespacedefinition_DropletFile);
    try {
        this.state = 4179;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,447,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4173;
            this.originalnamespacedefinition();
            this.state = 4174;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4176;
            this.extensionnamespacedefinition();
            this.state = 4177;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Originalnamespacedefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_originalnamespacedefinition_DropletFile;
    return this;
}

Originalnamespacedefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Originalnamespacedefinition_DropletFileContext.prototype.constructor = Originalnamespacedefinition_DropletFileContext;

Originalnamespacedefinition_DropletFileContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

Originalnamespacedefinition_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Originalnamespacedefinition_DropletFileContext.prototype.namespacebody = function() {
    return this.getTypedRuleContext(NamespacebodyContext,0);
};

Originalnamespacedefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Originalnamespacedefinition_DropletFileContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

Originalnamespacedefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOriginalnamespacedefinition_DropletFile(this);
	}
};

Originalnamespacedefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOriginalnamespacedefinition_DropletFile(this);
	}
};




CPP14Parser.Originalnamespacedefinition_DropletFileContext = Originalnamespacedefinition_DropletFileContext;

CPP14Parser.prototype.originalnamespacedefinition_DropletFile = function() {

    var localctx = new Originalnamespacedefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 566, CPP14Parser.RULE_originalnamespacedefinition_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4182;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Inline) {
            this.state = 4181;
            this.match(CPP14Parser.Inline);
        }

        this.state = 4184;
        this.match(CPP14Parser.Namespace);
        this.state = 4185;
        this.match(CPP14Parser.Identifier);
        this.state = 4186;
        this.match(CPP14Parser.LeftBrace);
        this.state = 4187;
        this.namespacebody();
        this.state = 4188;
        this.match(CPP14Parser.RightBrace);
        this.state = 4189;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Extensionnamespacedefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_extensionnamespacedefinition_DropletFile;
    return this;
}

Extensionnamespacedefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Extensionnamespacedefinition_DropletFileContext.prototype.constructor = Extensionnamespacedefinition_DropletFileContext;

Extensionnamespacedefinition_DropletFileContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

Extensionnamespacedefinition_DropletFileContext.prototype.originalnamespacename = function() {
    return this.getTypedRuleContext(OriginalnamespacenameContext,0);
};

Extensionnamespacedefinition_DropletFileContext.prototype.namespacebody = function() {
    return this.getTypedRuleContext(NamespacebodyContext,0);
};

Extensionnamespacedefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Extensionnamespacedefinition_DropletFileContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

Extensionnamespacedefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExtensionnamespacedefinition_DropletFile(this);
	}
};

Extensionnamespacedefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExtensionnamespacedefinition_DropletFile(this);
	}
};




CPP14Parser.Extensionnamespacedefinition_DropletFileContext = Extensionnamespacedefinition_DropletFileContext;

CPP14Parser.prototype.extensionnamespacedefinition_DropletFile = function() {

    var localctx = new Extensionnamespacedefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 568, CPP14Parser.RULE_extensionnamespacedefinition_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4192;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Inline) {
            this.state = 4191;
            this.match(CPP14Parser.Inline);
        }

        this.state = 4194;
        this.match(CPP14Parser.Namespace);
        this.state = 4195;
        this.originalnamespacename();
        this.state = 4196;
        this.match(CPP14Parser.LeftBrace);
        this.state = 4197;
        this.namespacebody();
        this.state = 4198;
        this.match(CPP14Parser.RightBrace);
        this.state = 4199;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Unnamednamespacedefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_unnamednamespacedefinition_DropletFile;
    return this;
}

Unnamednamespacedefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Unnamednamespacedefinition_DropletFileContext.prototype.constructor = Unnamednamespacedefinition_DropletFileContext;

Unnamednamespacedefinition_DropletFileContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

Unnamednamespacedefinition_DropletFileContext.prototype.namespacebody = function() {
    return this.getTypedRuleContext(NamespacebodyContext,0);
};

Unnamednamespacedefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Unnamednamespacedefinition_DropletFileContext.prototype.Inline = function() {
    return this.getToken(CPP14Parser.Inline, 0);
};

Unnamednamespacedefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUnnamednamespacedefinition_DropletFile(this);
	}
};

Unnamednamespacedefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUnnamednamespacedefinition_DropletFile(this);
	}
};




CPP14Parser.Unnamednamespacedefinition_DropletFileContext = Unnamednamespacedefinition_DropletFileContext;

CPP14Parser.prototype.unnamednamespacedefinition_DropletFile = function() {

    var localctx = new Unnamednamespacedefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 570, CPP14Parser.RULE_unnamednamespacedefinition_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4202;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Inline) {
            this.state = 4201;
            this.match(CPP14Parser.Inline);
        }

        this.state = 4204;
        this.match(CPP14Parser.Namespace);
        this.state = 4205;
        this.match(CPP14Parser.LeftBrace);
        this.state = 4206;
        this.namespacebody();
        this.state = 4207;
        this.match(CPP14Parser.RightBrace);
        this.state = 4208;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Namespacebody_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacebody_DropletFile;
    return this;
}

Namespacebody_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Namespacebody_DropletFileContext.prototype.constructor = Namespacebody_DropletFileContext;

Namespacebody_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Namespacebody_DropletFileContext.prototype.declarationseq = function() {
    return this.getTypedRuleContext(DeclarationseqContext,0);
};

Namespacebody_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacebody_DropletFile(this);
	}
};

Namespacebody_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacebody_DropletFile(this);
	}
};




CPP14Parser.Namespacebody_DropletFileContext = Namespacebody_DropletFileContext;

CPP14Parser.prototype.namespacebody_DropletFile = function() {

    var localctx = new Namespacebody_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 572, CPP14Parser.RULE_namespacebody_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4211;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Asm) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Namespace - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
            this.state = 4210;
            this.declarationseq(0);
        }

        this.state = 4213;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Namespacealias_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacealias_DropletFile;
    return this;
}

Namespacealias_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Namespacealias_DropletFileContext.prototype.constructor = Namespacealias_DropletFileContext;

Namespacealias_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Namespacealias_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Namespacealias_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacealias_DropletFile(this);
	}
};

Namespacealias_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacealias_DropletFile(this);
	}
};




CPP14Parser.Namespacealias_DropletFileContext = Namespacealias_DropletFileContext;

CPP14Parser.prototype.namespacealias_DropletFile = function() {

    var localctx = new Namespacealias_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 574, CPP14Parser.RULE_namespacealias_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4215;
        this.match(CPP14Parser.Identifier);
        this.state = 4216;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Namespacealiasdefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_namespacealiasdefinition_DropletFile;
    return this;
}

Namespacealiasdefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Namespacealiasdefinition_DropletFileContext.prototype.constructor = Namespacealiasdefinition_DropletFileContext;

Namespacealiasdefinition_DropletFileContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

Namespacealiasdefinition_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Namespacealiasdefinition_DropletFileContext.prototype.qualifiednamespacespecifier = function() {
    return this.getTypedRuleContext(QualifiednamespacespecifierContext,0);
};

Namespacealiasdefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Namespacealiasdefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNamespacealiasdefinition_DropletFile(this);
	}
};

Namespacealiasdefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNamespacealiasdefinition_DropletFile(this);
	}
};




CPP14Parser.Namespacealiasdefinition_DropletFileContext = Namespacealiasdefinition_DropletFileContext;

CPP14Parser.prototype.namespacealiasdefinition_DropletFile = function() {

    var localctx = new Namespacealiasdefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 576, CPP14Parser.RULE_namespacealiasdefinition_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4218;
        this.match(CPP14Parser.Namespace);
        this.state = 4219;
        this.match(CPP14Parser.Identifier);
        this.state = 4220;
        this.match(CPP14Parser.Assign);
        this.state = 4221;
        this.qualifiednamespacespecifier();
        this.state = 4222;
        this.match(CPP14Parser.Semi);
        this.state = 4223;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Qualifiednamespacespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_qualifiednamespacespecifier_DropletFile;
    return this;
}

Qualifiednamespacespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Qualifiednamespacespecifier_DropletFileContext.prototype.constructor = Qualifiednamespacespecifier_DropletFileContext;

Qualifiednamespacespecifier_DropletFileContext.prototype.namespacename = function() {
    return this.getTypedRuleContext(NamespacenameContext,0);
};

Qualifiednamespacespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Qualifiednamespacespecifier_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Qualifiednamespacespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterQualifiednamespacespecifier_DropletFile(this);
	}
};

Qualifiednamespacespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitQualifiednamespacespecifier_DropletFile(this);
	}
};




CPP14Parser.Qualifiednamespacespecifier_DropletFileContext = Qualifiednamespacespecifier_DropletFileContext;

CPP14Parser.prototype.qualifiednamespacespecifier_DropletFile = function() {

    var localctx = new Qualifiednamespacespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 578, CPP14Parser.RULE_qualifiednamespacespecifier_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4226;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,452,this._ctx);
        if(la_===1) {
            this.state = 4225;
            this.nestednamespecifier(0);

        }
        this.state = 4228;
        this.namespacename();
        this.state = 4229;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Usingdeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_usingdeclaration_DropletFile;
    return this;
}

Usingdeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Usingdeclaration_DropletFileContext.prototype.constructor = Usingdeclaration_DropletFileContext;

Usingdeclaration_DropletFileContext.prototype.Using = function() {
    return this.getToken(CPP14Parser.Using, 0);
};

Usingdeclaration_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Usingdeclaration_DropletFileContext.prototype.unqualifiedid = function() {
    return this.getTypedRuleContext(UnqualifiedidContext,0);
};

Usingdeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Usingdeclaration_DropletFileContext.prototype.Typename = function() {
    return this.getToken(CPP14Parser.Typename, 0);
};

Usingdeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUsingdeclaration_DropletFile(this);
	}
};

Usingdeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUsingdeclaration_DropletFile(this);
	}
};




CPP14Parser.Usingdeclaration_DropletFileContext = Usingdeclaration_DropletFileContext;

CPP14Parser.prototype.usingdeclaration_DropletFile = function() {

    var localctx = new Usingdeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 580, CPP14Parser.RULE_usingdeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4246;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,454,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4231;
            this.match(CPP14Parser.Using);
            this.state = 4233;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Typename) {
                this.state = 4232;
                this.match(CPP14Parser.Typename);
            }

            this.state = 4235;
            this.nestednamespecifier(0);
            this.state = 4236;
            this.unqualifiedid();
            this.state = 4237;
            this.match(CPP14Parser.Semi);
            this.state = 4238;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4240;
            this.match(CPP14Parser.Using);
            this.state = 4241;
            this.match(CPP14Parser.Doublecolon);
            this.state = 4242;
            this.unqualifiedid();
            this.state = 4243;
            this.match(CPP14Parser.Semi);
            this.state = 4244;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Usingdirective_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_usingdirective_DropletFile;
    return this;
}

Usingdirective_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Usingdirective_DropletFileContext.prototype.constructor = Usingdirective_DropletFileContext;

Usingdirective_DropletFileContext.prototype.Using = function() {
    return this.getToken(CPP14Parser.Using, 0);
};

Usingdirective_DropletFileContext.prototype.Namespace = function() {
    return this.getToken(CPP14Parser.Namespace, 0);
};

Usingdirective_DropletFileContext.prototype.namespacename = function() {
    return this.getTypedRuleContext(NamespacenameContext,0);
};

Usingdirective_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Usingdirective_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Usingdirective_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Usingdirective_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUsingdirective_DropletFile(this);
	}
};

Usingdirective_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUsingdirective_DropletFile(this);
	}
};




CPP14Parser.Usingdirective_DropletFileContext = Usingdirective_DropletFileContext;

CPP14Parser.prototype.usingdirective_DropletFile = function() {

    var localctx = new Usingdirective_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 582, CPP14Parser.RULE_usingdirective_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4249;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 4248;
            this.attributespecifierseq(0);
        }

        this.state = 4251;
        this.match(CPP14Parser.Using);
        this.state = 4252;
        this.match(CPP14Parser.Namespace);
        this.state = 4254;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,456,this._ctx);
        if(la_===1) {
            this.state = 4253;
            this.nestednamespecifier(0);

        }
        this.state = 4256;
        this.namespacename();
        this.state = 4257;
        this.match(CPP14Parser.Semi);
        this.state = 4258;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Asmdefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_asmdefinition_DropletFile;
    return this;
}

Asmdefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Asmdefinition_DropletFileContext.prototype.constructor = Asmdefinition_DropletFileContext;

Asmdefinition_DropletFileContext.prototype.Asm = function() {
    return this.getToken(CPP14Parser.Asm, 0);
};

Asmdefinition_DropletFileContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

Asmdefinition_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Asmdefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAsmdefinition_DropletFile(this);
	}
};

Asmdefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAsmdefinition_DropletFile(this);
	}
};




CPP14Parser.Asmdefinition_DropletFileContext = Asmdefinition_DropletFileContext;

CPP14Parser.prototype.asmdefinition_DropletFile = function() {

    var localctx = new Asmdefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 584, CPP14Parser.RULE_asmdefinition_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4260;
        this.match(CPP14Parser.Asm);
        this.state = 4261;
        this.match(CPP14Parser.LeftParen);
        this.state = 4262;
        this.match(CPP14Parser.Stringliteral);
        this.state = 4263;
        this.match(CPP14Parser.RightParen);
        this.state = 4264;
        this.match(CPP14Parser.Semi);
        this.state = 4265;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Linkagespecification_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_linkagespecification_DropletFile;
    return this;
}

Linkagespecification_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Linkagespecification_DropletFileContext.prototype.constructor = Linkagespecification_DropletFileContext;

Linkagespecification_DropletFileContext.prototype.Extern = function() {
    return this.getToken(CPP14Parser.Extern, 0);
};

Linkagespecification_DropletFileContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

Linkagespecification_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Linkagespecification_DropletFileContext.prototype.declarationseq = function() {
    return this.getTypedRuleContext(DeclarationseqContext,0);
};

Linkagespecification_DropletFileContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

Linkagespecification_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLinkagespecification_DropletFile(this);
	}
};

Linkagespecification_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLinkagespecification_DropletFile(this);
	}
};




CPP14Parser.Linkagespecification_DropletFileContext = Linkagespecification_DropletFileContext;

CPP14Parser.prototype.linkagespecification_DropletFile = function() {

    var localctx = new Linkagespecification_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 586, CPP14Parser.RULE_linkagespecification_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4280;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,458,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4267;
            this.match(CPP14Parser.Extern);
            this.state = 4268;
            this.match(CPP14Parser.Stringliteral);
            this.state = 4269;
            this.match(CPP14Parser.LeftBrace);
            this.state = 4271;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Asm) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Namespace - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 4270;
                this.declarationseq(0);
            }

            this.state = 4273;
            this.match(CPP14Parser.RightBrace);
            this.state = 4274;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4275;
            this.match(CPP14Parser.Extern);
            this.state = 4276;
            this.match(CPP14Parser.Stringliteral);
            this.state = 4277;
            this.declaration();
            this.state = 4278;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributespecifierseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributespecifierseq_DropletFile;
    return this;
}

Attributespecifierseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributespecifierseq_DropletFileContext.prototype.constructor = Attributespecifierseq_DropletFileContext;

Attributespecifierseq_DropletFileContext.prototype.attributespecifier = function() {
    return this.getTypedRuleContext(AttributespecifierContext,0);
};

Attributespecifierseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributespecifierseq_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Attributespecifierseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributespecifierseq_DropletFile(this);
	}
};

Attributespecifierseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributespecifierseq_DropletFile(this);
	}
};




CPP14Parser.Attributespecifierseq_DropletFileContext = Attributespecifierseq_DropletFileContext;

CPP14Parser.prototype.attributespecifierseq_DropletFile = function() {

    var localctx = new Attributespecifierseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 588, CPP14Parser.RULE_attributespecifierseq_DropletFile);
    try {
        this.state = 4289;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,459,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4282;
            this.attributespecifier();
            this.state = 4283;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4285;
            this.attributespecifierseq(0);
            this.state = 4286;
            this.attributespecifier();
            this.state = 4287;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributespecifier_DropletFile;
    return this;
}

Attributespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributespecifier_DropletFileContext.prototype.constructor = Attributespecifier_DropletFileContext;

Attributespecifier_DropletFileContext.prototype.attributelist = function() {
    return this.getTypedRuleContext(AttributelistContext,0);
};

Attributespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributespecifier_DropletFileContext.prototype.alignmentspecifier = function() {
    return this.getTypedRuleContext(AlignmentspecifierContext,0);
};

Attributespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributespecifier_DropletFile(this);
	}
};

Attributespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributespecifier_DropletFile(this);
	}
};




CPP14Parser.Attributespecifier_DropletFileContext = Attributespecifier_DropletFileContext;

CPP14Parser.prototype.attributespecifier_DropletFile = function() {

    var localctx = new Attributespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 590, CPP14Parser.RULE_attributespecifier_DropletFile);
    try {
        this.state = 4301;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 1);
            this.state = 4291;
            this.match(CPP14Parser.LeftBracket);
            this.state = 4292;
            this.match(CPP14Parser.LeftBracket);
            this.state = 4293;
            this.attributelist(0);
            this.state = 4294;
            this.match(CPP14Parser.RightBracket);
            this.state = 4295;
            this.match(CPP14Parser.RightBracket);
            this.state = 4296;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Alignas:
            this.enterOuterAlt(localctx, 2);
            this.state = 4298;
            this.alignmentspecifier();
            this.state = 4299;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Alignmentspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_alignmentspecifier_DropletFile;
    return this;
}

Alignmentspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Alignmentspecifier_DropletFileContext.prototype.constructor = Alignmentspecifier_DropletFileContext;

Alignmentspecifier_DropletFileContext.prototype.Alignas = function() {
    return this.getToken(CPP14Parser.Alignas, 0);
};

Alignmentspecifier_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Alignmentspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Alignmentspecifier_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Alignmentspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAlignmentspecifier_DropletFile(this);
	}
};

Alignmentspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAlignmentspecifier_DropletFile(this);
	}
};




CPP14Parser.Alignmentspecifier_DropletFileContext = Alignmentspecifier_DropletFileContext;

CPP14Parser.prototype.alignmentspecifier_DropletFile = function() {

    var localctx = new Alignmentspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 592, CPP14Parser.RULE_alignmentspecifier_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4321;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,463,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4303;
            this.match(CPP14Parser.Alignas);
            this.state = 4304;
            this.match(CPP14Parser.LeftParen);
            this.state = 4305;
            this.typeid();
            this.state = 4307;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 4306;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 4309;
            this.match(CPP14Parser.RightParen);
            this.state = 4310;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4312;
            this.match(CPP14Parser.Alignas);
            this.state = 4313;
            this.match(CPP14Parser.LeftParen);
            this.state = 4314;
            this.constantexpression();
            this.state = 4316;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 4315;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 4318;
            this.match(CPP14Parser.RightParen);
            this.state = 4319;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributelist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributelist_DropletFile;
    return this;
}

Attributelist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributelist_DropletFileContext.prototype.constructor = Attributelist_DropletFileContext;

Attributelist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributelist_DropletFileContext.prototype.attribute = function() {
    return this.getTypedRuleContext(AttributeContext,0);
};

Attributelist_DropletFileContext.prototype.attributelist = function() {
    return this.getTypedRuleContext(AttributelistContext,0);
};

Attributelist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributelist_DropletFile(this);
	}
};

Attributelist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributelist_DropletFile(this);
	}
};




CPP14Parser.Attributelist_DropletFileContext = Attributelist_DropletFileContext;

CPP14Parser.prototype.attributelist_DropletFile = function() {

    var localctx = new Attributelist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 594, CPP14Parser.RULE_attributelist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4344;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,466,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4324;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 4323;
                this.attribute();
            }

            this.state = 4326;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4327;
            this.attributelist(0);
            this.state = 4328;
            this.match(CPP14Parser.Comma);
            this.state = 4330;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 4329;
                this.attribute();
            }

            this.state = 4332;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4334;
            this.attribute();
            this.state = 4335;
            this.match(CPP14Parser.Ellipsis);
            this.state = 4336;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4338;
            this.attributelist(0);
            this.state = 4339;
            this.match(CPP14Parser.Comma);
            this.state = 4340;
            this.attribute();
            this.state = 4341;
            this.match(CPP14Parser.Ellipsis);
            this.state = 4342;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attribute_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attribute_DropletFile;
    return this;
}

Attribute_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attribute_DropletFileContext.prototype.constructor = Attribute_DropletFileContext;

Attribute_DropletFileContext.prototype.attributetoken = function() {
    return this.getTypedRuleContext(AttributetokenContext,0);
};

Attribute_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attribute_DropletFileContext.prototype.attributeargumentclause = function() {
    return this.getTypedRuleContext(AttributeargumentclauseContext,0);
};

Attribute_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttribute_DropletFile(this);
	}
};

Attribute_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttribute_DropletFile(this);
	}
};




CPP14Parser.Attribute_DropletFileContext = Attribute_DropletFileContext;

CPP14Parser.prototype.attribute_DropletFile = function() {

    var localctx = new Attribute_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 596, CPP14Parser.RULE_attribute_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4346;
        this.attributetoken();
        this.state = 4348;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.LeftParen) {
            this.state = 4347;
            this.attributeargumentclause();
        }

        this.state = 4350;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributetoken_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributetoken_DropletFile;
    return this;
}

Attributetoken_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributetoken_DropletFileContext.prototype.constructor = Attributetoken_DropletFileContext;

Attributetoken_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Attributetoken_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributetoken_DropletFileContext.prototype.attributescopedtoken = function() {
    return this.getTypedRuleContext(AttributescopedtokenContext,0);
};

Attributetoken_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributetoken_DropletFile(this);
	}
};

Attributetoken_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributetoken_DropletFile(this);
	}
};




CPP14Parser.Attributetoken_DropletFileContext = Attributetoken_DropletFileContext;

CPP14Parser.prototype.attributetoken_DropletFile = function() {

    var localctx = new Attributetoken_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 598, CPP14Parser.RULE_attributetoken_DropletFile);
    try {
        this.state = 4357;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,468,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4352;
            this.match(CPP14Parser.Identifier);
            this.state = 4353;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4354;
            this.attributescopedtoken();
            this.state = 4355;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributescopedtoken_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributescopedtoken_DropletFile;
    return this;
}

Attributescopedtoken_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributescopedtoken_DropletFileContext.prototype.constructor = Attributescopedtoken_DropletFileContext;

Attributescopedtoken_DropletFileContext.prototype.attributenamespace = function() {
    return this.getTypedRuleContext(AttributenamespaceContext,0);
};

Attributescopedtoken_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Attributescopedtoken_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributescopedtoken_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributescopedtoken_DropletFile(this);
	}
};

Attributescopedtoken_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributescopedtoken_DropletFile(this);
	}
};




CPP14Parser.Attributescopedtoken_DropletFileContext = Attributescopedtoken_DropletFileContext;

CPP14Parser.prototype.attributescopedtoken_DropletFile = function() {

    var localctx = new Attributescopedtoken_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 600, CPP14Parser.RULE_attributescopedtoken_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4359;
        this.attributenamespace();
        this.state = 4360;
        this.match(CPP14Parser.Doublecolon);
        this.state = 4361;
        this.match(CPP14Parser.Identifier);
        this.state = 4362;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributenamespace_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributenamespace_DropletFile;
    return this;
}

Attributenamespace_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributenamespace_DropletFileContext.prototype.constructor = Attributenamespace_DropletFileContext;

Attributenamespace_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Attributenamespace_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributenamespace_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributenamespace_DropletFile(this);
	}
};

Attributenamespace_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributenamespace_DropletFile(this);
	}
};




CPP14Parser.Attributenamespace_DropletFileContext = Attributenamespace_DropletFileContext;

CPP14Parser.prototype.attributenamespace_DropletFile = function() {

    var localctx = new Attributenamespace_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 602, CPP14Parser.RULE_attributenamespace_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4364;
        this.match(CPP14Parser.Identifier);
        this.state = 4365;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Attributeargumentclause_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_attributeargumentclause_DropletFile;
    return this;
}

Attributeargumentclause_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Attributeargumentclause_DropletFileContext.prototype.constructor = Attributeargumentclause_DropletFileContext;

Attributeargumentclause_DropletFileContext.prototype.balancedtokenseq = function() {
    return this.getTypedRuleContext(BalancedtokenseqContext,0);
};

Attributeargumentclause_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Attributeargumentclause_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAttributeargumentclause_DropletFile(this);
	}
};

Attributeargumentclause_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAttributeargumentclause_DropletFile(this);
	}
};




CPP14Parser.Attributeargumentclause_DropletFileContext = Attributeargumentclause_DropletFileContext;

CPP14Parser.prototype.attributeargumentclause_DropletFile = function() {

    var localctx = new Attributeargumentclause_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 604, CPP14Parser.RULE_attributeargumentclause_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4367;
        this.match(CPP14Parser.LeftParen);
        this.state = 4368;
        this.balancedtokenseq(0);
        this.state = 4369;
        this.match(CPP14Parser.RightParen);
        this.state = 4370;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Balancedtokenseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_balancedtokenseq_DropletFile;
    return this;
}

Balancedtokenseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Balancedtokenseq_DropletFileContext.prototype.constructor = Balancedtokenseq_DropletFileContext;

Balancedtokenseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Balancedtokenseq_DropletFileContext.prototype.balancedtoken = function() {
    return this.getTypedRuleContext(BalancedtokenContext,0);
};

Balancedtokenseq_DropletFileContext.prototype.balancedtokenseq = function() {
    return this.getTypedRuleContext(BalancedtokenseqContext,0);
};

Balancedtokenseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBalancedtokenseq_DropletFile(this);
	}
};

Balancedtokenseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBalancedtokenseq_DropletFile(this);
	}
};




CPP14Parser.Balancedtokenseq_DropletFileContext = Balancedtokenseq_DropletFileContext;

CPP14Parser.prototype.balancedtokenseq_DropletFile = function() {

    var localctx = new Balancedtokenseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 606, CPP14Parser.RULE_balancedtokenseq_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4380;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,470,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4373;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.LeftBrace - 78)))) !== 0)) {
                this.state = 4372;
                this.balancedtoken();
            }

            this.state = 4375;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4376;
            this.balancedtokenseq(0);
            this.state = 4377;
            this.balancedtoken();
            this.state = 4378;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Balancedtoken_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_balancedtoken_DropletFile;
    return this;
}

Balancedtoken_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Balancedtoken_DropletFileContext.prototype.constructor = Balancedtoken_DropletFileContext;

Balancedtoken_DropletFileContext.prototype.balancedtokenseq = function() {
    return this.getTypedRuleContext(BalancedtokenseqContext,0);
};

Balancedtoken_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Balancedtoken_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBalancedtoken_DropletFile(this);
	}
};

Balancedtoken_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBalancedtoken_DropletFile(this);
	}
};




CPP14Parser.Balancedtoken_DropletFileContext = Balancedtoken_DropletFileContext;

CPP14Parser.prototype.balancedtoken_DropletFile = function() {

    var localctx = new Balancedtoken_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 608, CPP14Parser.RULE_balancedtoken_DropletFile);
    try {
        this.state = 4397;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 1);
            this.state = 4382;
            this.match(CPP14Parser.LeftParen);
            this.state = 4383;
            this.balancedtokenseq(0);
            this.state = 4384;
            this.match(CPP14Parser.RightParen);
            this.state = 4385;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 2);
            this.state = 4387;
            this.match(CPP14Parser.LeftBracket);
            this.state = 4388;
            this.balancedtokenseq(0);
            this.state = 4389;
            this.match(CPP14Parser.RightBracket);
            this.state = 4390;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 3);
            this.state = 4392;
            this.match(CPP14Parser.LeftBrace);
            this.state = 4393;
            this.balancedtokenseq(0);
            this.state = 4394;
            this.match(CPP14Parser.RightBrace);
            this.state = 4395;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Initdeclaratorlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initdeclaratorlist_DropletFile;
    return this;
}

Initdeclaratorlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Initdeclaratorlist_DropletFileContext.prototype.constructor = Initdeclaratorlist_DropletFileContext;

Initdeclaratorlist_DropletFileContext.prototype.initdeclarator = function() {
    return this.getTypedRuleContext(InitdeclaratorContext,0);
};

Initdeclaratorlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Initdeclaratorlist_DropletFileContext.prototype.initdeclaratorlist = function() {
    return this.getTypedRuleContext(InitdeclaratorlistContext,0);
};

Initdeclaratorlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitdeclaratorlist_DropletFile(this);
	}
};

Initdeclaratorlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitdeclaratorlist_DropletFile(this);
	}
};




CPP14Parser.Initdeclaratorlist_DropletFileContext = Initdeclaratorlist_DropletFileContext;

CPP14Parser.prototype.initdeclaratorlist_DropletFile = function() {

    var localctx = new Initdeclaratorlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 610, CPP14Parser.RULE_initdeclaratorlist_DropletFile);
    try {
        this.state = 4407;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,472,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4399;
            this.initdeclarator();
            this.state = 4400;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4402;
            this.initdeclaratorlist(0);
            this.state = 4403;
            this.match(CPP14Parser.Comma);
            this.state = 4404;
            this.initdeclarator();
            this.state = 4405;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Initdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initdeclarator_DropletFile;
    return this;
}

Initdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Initdeclarator_DropletFileContext.prototype.constructor = Initdeclarator_DropletFileContext;

Initdeclarator_DropletFileContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

Initdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Initdeclarator_DropletFileContext.prototype.initializer = function() {
    return this.getTypedRuleContext(InitializerContext,0);
};

Initdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitdeclarator_DropletFile(this);
	}
};

Initdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitdeclarator_DropletFile(this);
	}
};




CPP14Parser.Initdeclarator_DropletFileContext = Initdeclarator_DropletFileContext;

CPP14Parser.prototype.initdeclarator_DropletFile = function() {

    var localctx = new Initdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 612, CPP14Parser.RULE_initdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4409;
        this.declarator();
        this.state = 4411;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBrace - 78)) | (1 << (CPP14Parser.Assign - 78)))) !== 0)) {
            this.state = 4410;
            this.initializer();
        }

        this.state = 4413;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Declarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declarator_DropletFile;
    return this;
}

Declarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Declarator_DropletFileContext.prototype.constructor = Declarator_DropletFileContext;

Declarator_DropletFileContext.prototype.ptrdeclarator = function() {
    return this.getTypedRuleContext(PtrdeclaratorContext,0);
};

Declarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Declarator_DropletFileContext.prototype.noptrdeclarator = function() {
    return this.getTypedRuleContext(NoptrdeclaratorContext,0);
};

Declarator_DropletFileContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

Declarator_DropletFileContext.prototype.trailingreturntype = function() {
    return this.getTypedRuleContext(TrailingreturntypeContext,0);
};

Declarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclarator_DropletFile(this);
	}
};

Declarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclarator_DropletFile(this);
	}
};




CPP14Parser.Declarator_DropletFileContext = Declarator_DropletFileContext;

CPP14Parser.prototype.declarator_DropletFile = function() {

    var localctx = new Declarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 614, CPP14Parser.RULE_declarator_DropletFile);
    try {
        this.state = 4423;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,474,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4415;
            this.ptrdeclarator();
            this.state = 4416;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4418;
            this.noptrdeclarator(0);
            this.state = 4419;
            this.parametersandqualifiers();
            this.state = 4420;
            this.trailingreturntype();
            this.state = 4421;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Ptrdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ptrdeclarator_DropletFile;
    return this;
}

Ptrdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ptrdeclarator_DropletFileContext.prototype.constructor = Ptrdeclarator_DropletFileContext;

Ptrdeclarator_DropletFileContext.prototype.noptrdeclarator = function() {
    return this.getTypedRuleContext(NoptrdeclaratorContext,0);
};

Ptrdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Ptrdeclarator_DropletFileContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

Ptrdeclarator_DropletFileContext.prototype.ptrdeclarator = function() {
    return this.getTypedRuleContext(PtrdeclaratorContext,0);
};

Ptrdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPtrdeclarator_DropletFile(this);
	}
};

Ptrdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPtrdeclarator_DropletFile(this);
	}
};




CPP14Parser.Ptrdeclarator_DropletFileContext = Ptrdeclarator_DropletFileContext;

CPP14Parser.prototype.ptrdeclarator_DropletFile = function() {

    var localctx = new Ptrdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 616, CPP14Parser.RULE_ptrdeclarator_DropletFile);
    try {
        this.state = 4432;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,475,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4425;
            this.noptrdeclarator(0);
            this.state = 4426;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4428;
            this.ptroperator();
            this.state = 4429;
            this.ptrdeclarator();
            this.state = 4430;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Noptrdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrdeclarator_DropletFile;
    return this;
}

Noptrdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Noptrdeclarator_DropletFileContext.prototype.constructor = Noptrdeclarator_DropletFileContext;

Noptrdeclarator_DropletFileContext.prototype.declaratorid = function() {
    return this.getTypedRuleContext(DeclaratoridContext,0);
};

Noptrdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Noptrdeclarator_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Noptrdeclarator_DropletFileContext.prototype.noptrdeclarator = function() {
    return this.getTypedRuleContext(NoptrdeclaratorContext,0);
};

Noptrdeclarator_DropletFileContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

Noptrdeclarator_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Noptrdeclarator_DropletFileContext.prototype.ptrdeclarator = function() {
    return this.getTypedRuleContext(PtrdeclaratorContext,0);
};

Noptrdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrdeclarator_DropletFile(this);
	}
};

Noptrdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrdeclarator_DropletFile(this);
	}
};




CPP14Parser.Noptrdeclarator_DropletFileContext = Noptrdeclarator_DropletFileContext;

CPP14Parser.prototype.noptrdeclarator_DropletFile = function() {

    var localctx = new Noptrdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 618, CPP14Parser.RULE_noptrdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4460;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,479,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4434;
            this.declaratorid();
            this.state = 4436;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4435;
                this.attributespecifierseq(0);
            }

            this.state = 4438;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4440;
            this.noptrdeclarator(0);
            this.state = 4441;
            this.parametersandqualifiers();
            this.state = 4442;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4444;
            this.noptrdeclarator(0);
            this.state = 4445;
            this.match(CPP14Parser.LeftBracket);
            this.state = 4447;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 4446;
                this.constantexpression();
            }

            this.state = 4449;
            this.match(CPP14Parser.RightBracket);
            this.state = 4451;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4450;
                this.attributespecifierseq(0);
            }

            this.state = 4453;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4455;
            this.match(CPP14Parser.LeftParen);
            this.state = 4456;
            this.ptrdeclarator();
            this.state = 4457;
            this.match(CPP14Parser.RightParen);
            this.state = 4458;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Parametersandqualifiers_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parametersandqualifiers_DropletFile;
    return this;
}

Parametersandqualifiers_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Parametersandqualifiers_DropletFileContext.prototype.constructor = Parametersandqualifiers_DropletFileContext;

Parametersandqualifiers_DropletFileContext.prototype.parameterdeclarationclause = function() {
    return this.getTypedRuleContext(ParameterdeclarationclauseContext,0);
};

Parametersandqualifiers_DropletFileContext.prototype.EOF = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.EOF);
    } else {
        return this.getToken(CPP14Parser.EOF, i);
    }
};


Parametersandqualifiers_DropletFileContext.prototype.cvqualifierseq = function() {
    return this.getTypedRuleContext(CvqualifierseqContext,0);
};

Parametersandqualifiers_DropletFileContext.prototype.refqualifier = function() {
    return this.getTypedRuleContext(RefqualifierContext,0);
};

Parametersandqualifiers_DropletFileContext.prototype.exceptionspecification = function() {
    return this.getTypedRuleContext(ExceptionspecificationContext,0);
};

Parametersandqualifiers_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Parametersandqualifiers_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParametersandqualifiers_DropletFile(this);
	}
};

Parametersandqualifiers_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParametersandqualifiers_DropletFile(this);
	}
};




CPP14Parser.Parametersandqualifiers_DropletFileContext = Parametersandqualifiers_DropletFileContext;

CPP14Parser.prototype.parametersandqualifiers_DropletFile = function() {

    var localctx = new Parametersandqualifiers_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 620, CPP14Parser.RULE_parametersandqualifiers_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4462;
        this.match(CPP14Parser.LeftParen);
        this.state = 4463;
        this.parameterdeclarationclause();
        this.state = 4464;
        this.match(CPP14Parser.RightParen);
        this.state = 4466;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Const || _la===CPP14Parser.Volatile) {
            this.state = 4465;
            this.cvqualifierseq();
        }

        this.state = 4469;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.And || _la===CPP14Parser.AndAnd) {
            this.state = 4468;
            this.refqualifier();
        }

        this.state = 4471;
        this.match(CPP14Parser.EOF);
        this.state = 4473;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Noexcept || _la===CPP14Parser.Throw) {
            this.state = 4472;
            this.exceptionspecification();
        }

        this.state = 4476;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 4475;
            this.attributespecifierseq(0);
        }

        this.state = 4478;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Trailingreturntype_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_trailingreturntype_DropletFile;
    return this;
}

Trailingreturntype_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Trailingreturntype_DropletFileContext.prototype.constructor = Trailingreturntype_DropletFileContext;

Trailingreturntype_DropletFileContext.prototype.trailingtypespecifierseq = function() {
    return this.getTypedRuleContext(TrailingtypespecifierseqContext,0);
};

Trailingreturntype_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Trailingreturntype_DropletFileContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

Trailingreturntype_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTrailingreturntype_DropletFile(this);
	}
};

Trailingreturntype_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTrailingreturntype_DropletFile(this);
	}
};




CPP14Parser.Trailingreturntype_DropletFileContext = Trailingreturntype_DropletFileContext;

CPP14Parser.prototype.trailingreturntype_DropletFile = function() {

    var localctx = new Trailingreturntype_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 622, CPP14Parser.RULE_trailingreturntype_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4480;
        this.match(CPP14Parser.Arrow);
        this.state = 4481;
        this.trailingtypespecifierseq();
        this.state = 4483;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
            this.state = 4482;
            this.abstractdeclarator();
        }

        this.state = 4485;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Ptroperator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ptroperator_DropletFile;
    return this;
}

Ptroperator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ptroperator_DropletFileContext.prototype.constructor = Ptroperator_DropletFileContext;

Ptroperator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Ptroperator_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Ptroperator_DropletFileContext.prototype.cvqualifierseq = function() {
    return this.getTypedRuleContext(CvqualifierseqContext,0);
};

Ptroperator_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Ptroperator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPtroperator_DropletFile(this);
	}
};

Ptroperator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPtroperator_DropletFile(this);
	}
};




CPP14Parser.Ptroperator_DropletFileContext = Ptroperator_DropletFileContext;

CPP14Parser.prototype.ptroperator_DropletFile = function() {

    var localctx = new Ptroperator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 624, CPP14Parser.RULE_ptroperator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4515;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Star:
            this.enterOuterAlt(localctx, 1);
            this.state = 4487;
            this.match(CPP14Parser.Star);
            this.state = 4489;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4488;
                this.attributespecifierseq(0);
            }

            this.state = 4492;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Const || _la===CPP14Parser.Volatile) {
                this.state = 4491;
                this.cvqualifierseq();
            }

            this.state = 4494;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 2);
            this.state = 4495;
            this.match(CPP14Parser.And);
            this.state = 4497;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4496;
                this.attributespecifierseq(0);
            }

            this.state = 4499;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.AndAnd:
            this.enterOuterAlt(localctx, 3);
            this.state = 4500;
            this.match(CPP14Parser.AndAnd);
            this.state = 4502;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4501;
                this.attributespecifierseq(0);
            }

            this.state = 4504;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 4);
            this.state = 4505;
            this.nestednamespecifier(0);
            this.state = 4506;
            this.match(CPP14Parser.Star);
            this.state = 4508;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4507;
                this.attributespecifierseq(0);
            }

            this.state = 4511;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Const || _la===CPP14Parser.Volatile) {
                this.state = 4510;
                this.cvqualifierseq();
            }

            this.state = 4513;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Cvqualifierseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_cvqualifierseq_DropletFile;
    return this;
}

Cvqualifierseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Cvqualifierseq_DropletFileContext.prototype.constructor = Cvqualifierseq_DropletFileContext;

Cvqualifierseq_DropletFileContext.prototype.cvqualifier = function() {
    return this.getTypedRuleContext(CvqualifierContext,0);
};

Cvqualifierseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Cvqualifierseq_DropletFileContext.prototype.cvqualifierseq = function() {
    return this.getTypedRuleContext(CvqualifierseqContext,0);
};

Cvqualifierseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCvqualifierseq_DropletFile(this);
	}
};

Cvqualifierseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCvqualifierseq_DropletFile(this);
	}
};




CPP14Parser.Cvqualifierseq_DropletFileContext = Cvqualifierseq_DropletFileContext;

CPP14Parser.prototype.cvqualifierseq_DropletFile = function() {

    var localctx = new Cvqualifierseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 626, CPP14Parser.RULE_cvqualifierseq_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4517;
        this.cvqualifier();
        this.state = 4519;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Const || _la===CPP14Parser.Volatile) {
            this.state = 4518;
            this.cvqualifierseq();
        }

        this.state = 4521;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Cvqualifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_cvqualifier_DropletFile;
    return this;
}

Cvqualifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Cvqualifier_DropletFileContext.prototype.constructor = Cvqualifier_DropletFileContext;

Cvqualifier_DropletFileContext.prototype.Const = function() {
    return this.getToken(CPP14Parser.Const, 0);
};

Cvqualifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Cvqualifier_DropletFileContext.prototype.Volatile = function() {
    return this.getToken(CPP14Parser.Volatile, 0);
};

Cvqualifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCvqualifier_DropletFile(this);
	}
};

Cvqualifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCvqualifier_DropletFile(this);
	}
};




CPP14Parser.Cvqualifier_DropletFileContext = Cvqualifier_DropletFileContext;

CPP14Parser.prototype.cvqualifier_DropletFile = function() {

    var localctx = new Cvqualifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 628, CPP14Parser.RULE_cvqualifier_DropletFile);
    try {
        this.state = 4527;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Const:
            this.enterOuterAlt(localctx, 1);
            this.state = 4523;
            this.match(CPP14Parser.Const);
            this.state = 4524;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Volatile:
            this.enterOuterAlt(localctx, 2);
            this.state = 4525;
            this.match(CPP14Parser.Volatile);
            this.state = 4526;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Refqualifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_refqualifier_DropletFile;
    return this;
}

Refqualifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Refqualifier_DropletFileContext.prototype.constructor = Refqualifier_DropletFileContext;

Refqualifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Refqualifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterRefqualifier_DropletFile(this);
	}
};

Refqualifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitRefqualifier_DropletFile(this);
	}
};




CPP14Parser.Refqualifier_DropletFileContext = Refqualifier_DropletFileContext;

CPP14Parser.prototype.refqualifier_DropletFile = function() {

    var localctx = new Refqualifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 630, CPP14Parser.RULE_refqualifier_DropletFile);
    try {
        this.state = 4533;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.And:
            this.enterOuterAlt(localctx, 1);
            this.state = 4529;
            this.match(CPP14Parser.And);
            this.state = 4530;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.AndAnd:
            this.enterOuterAlt(localctx, 2);
            this.state = 4531;
            this.match(CPP14Parser.AndAnd);
            this.state = 4532;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Declaratorid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_declaratorid_DropletFile;
    return this;
}

Declaratorid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Declaratorid_DropletFileContext.prototype.constructor = Declaratorid_DropletFileContext;

Declaratorid_DropletFileContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

Declaratorid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Declaratorid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDeclaratorid_DropletFile(this);
	}
};

Declaratorid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDeclaratorid_DropletFile(this);
	}
};




CPP14Parser.Declaratorid_DropletFileContext = Declaratorid_DropletFileContext;

CPP14Parser.prototype.declaratorid_DropletFile = function() {

    var localctx = new Declaratorid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 632, CPP14Parser.RULE_declaratorid_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4536;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Ellipsis) {
            this.state = 4535;
            this.match(CPP14Parser.Ellipsis);
        }

        this.state = 4538;
        this.idexpression();
        this.state = 4539;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typeid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typeid_DropletFile;
    return this;
}

Typeid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typeid_DropletFileContext.prototype.constructor = Typeid_DropletFileContext;

Typeid_DropletFileContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

Typeid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typeid_DropletFileContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

Typeid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypeid_DropletFile(this);
	}
};

Typeid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypeid_DropletFile(this);
	}
};




CPP14Parser.Typeid_DropletFileContext = Typeid_DropletFileContext;

CPP14Parser.prototype.typeid_DropletFile = function() {

    var localctx = new Typeid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 634, CPP14Parser.RULE_typeid_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4541;
        this.typespecifierseq();
        this.state = 4543;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
            this.state = 4542;
            this.abstractdeclarator();
        }

        this.state = 4545;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Abstractdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_abstractdeclarator_DropletFile;
    return this;
}

Abstractdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Abstractdeclarator_DropletFileContext.prototype.constructor = Abstractdeclarator_DropletFileContext;

Abstractdeclarator_DropletFileContext.prototype.ptrabstractdeclarator = function() {
    return this.getTypedRuleContext(PtrabstractdeclaratorContext,0);
};

Abstractdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Abstractdeclarator_DropletFileContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

Abstractdeclarator_DropletFileContext.prototype.trailingreturntype = function() {
    return this.getTypedRuleContext(TrailingreturntypeContext,0);
};

Abstractdeclarator_DropletFileContext.prototype.noptrabstractdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractdeclaratorContext,0);
};

Abstractdeclarator_DropletFileContext.prototype.abstractpackdeclarator = function() {
    return this.getTypedRuleContext(AbstractpackdeclaratorContext,0);
};

Abstractdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAbstractdeclarator_DropletFile(this);
	}
};

Abstractdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAbstractdeclarator_DropletFile(this);
	}
};




CPP14Parser.Abstractdeclarator_DropletFileContext = Abstractdeclarator_DropletFileContext;

CPP14Parser.prototype.abstractdeclarator_DropletFile = function() {

    var localctx = new Abstractdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 636, CPP14Parser.RULE_abstractdeclarator_DropletFile);
    try {
        this.state = 4560;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,498,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4547;
            this.ptrabstractdeclarator();
            this.state = 4548;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4551;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,497,this._ctx);
            if(la_===1) {
                this.state = 4550;
                this.noptrabstractdeclarator(0);

            }
            this.state = 4553;
            this.parametersandqualifiers();
            this.state = 4554;
            this.trailingreturntype();
            this.state = 4555;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4557;
            this.abstractpackdeclarator();
            this.state = 4558;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Ptrabstractdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ptrabstractdeclarator_DropletFile;
    return this;
}

Ptrabstractdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ptrabstractdeclarator_DropletFileContext.prototype.constructor = Ptrabstractdeclarator_DropletFileContext;

Ptrabstractdeclarator_DropletFileContext.prototype.noptrabstractdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractdeclaratorContext,0);
};

Ptrabstractdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Ptrabstractdeclarator_DropletFileContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

Ptrabstractdeclarator_DropletFileContext.prototype.ptrabstractdeclarator = function() {
    return this.getTypedRuleContext(PtrabstractdeclaratorContext,0);
};

Ptrabstractdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPtrabstractdeclarator_DropletFile(this);
	}
};

Ptrabstractdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPtrabstractdeclarator_DropletFile(this);
	}
};




CPP14Parser.Ptrabstractdeclarator_DropletFileContext = Ptrabstractdeclarator_DropletFileContext;

CPP14Parser.prototype.ptrabstractdeclarator_DropletFile = function() {

    var localctx = new Ptrabstractdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 638, CPP14Parser.RULE_ptrabstractdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4571;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
            this.enterOuterAlt(localctx, 1);
            this.state = 4562;
            this.noptrabstractdeclarator(0);
            this.state = 4563;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 4565;
            this.ptroperator();
            this.state = 4567;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 4566;
                this.ptrabstractdeclarator();
            }

            this.state = 4569;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Noptrabstractdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrabstractdeclarator_DropletFile;
    return this;
}

Noptrabstractdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Noptrabstractdeclarator_DropletFileContext.prototype.constructor = Noptrabstractdeclarator_DropletFileContext;

Noptrabstractdeclarator_DropletFileContext.prototype.noptrabstractdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractdeclaratorContext,0);
};

Noptrabstractdeclarator_DropletFileContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

Noptrabstractdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Noptrabstractdeclarator_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Noptrabstractdeclarator_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Noptrabstractdeclarator_DropletFileContext.prototype.ptrabstractdeclarator = function() {
    return this.getTypedRuleContext(PtrabstractdeclaratorContext,0);
};

Noptrabstractdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrabstractdeclarator_DropletFile(this);
	}
};

Noptrabstractdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrabstractdeclarator_DropletFile(this);
	}
};




CPP14Parser.Noptrabstractdeclarator_DropletFileContext = Noptrabstractdeclarator_DropletFileContext;

CPP14Parser.prototype.noptrabstractdeclarator_DropletFile = function() {

    var localctx = new Noptrabstractdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 640, CPP14Parser.RULE_noptrabstractdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4605;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,505,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4573;
            this.noptrabstractdeclarator(0);
            this.state = 4574;
            this.parametersandqualifiers();
            this.state = 4575;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4577;
            this.parametersandqualifiers();
            this.state = 4578;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4580;
            this.noptrabstractdeclarator(0);
            this.state = 4581;
            this.match(CPP14Parser.LeftBracket);
            this.state = 4583;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 4582;
                this.constantexpression();
            }

            this.state = 4585;
            this.match(CPP14Parser.RightBracket);
            this.state = 4587;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4586;
                this.attributespecifierseq(0);
            }

            this.state = 4589;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4591;
            this.match(CPP14Parser.LeftBracket);
            this.state = 4593;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 4592;
                this.constantexpression();
            }

            this.state = 4595;
            this.match(CPP14Parser.RightBracket);
            this.state = 4597;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4596;
                this.attributespecifierseq(0);
            }

            this.state = 4599;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 4600;
            this.match(CPP14Parser.LeftParen);
            this.state = 4601;
            this.ptrabstractdeclarator();
            this.state = 4602;
            this.match(CPP14Parser.RightParen);
            this.state = 4603;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Abstractpackdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_abstractpackdeclarator_DropletFile;
    return this;
}

Abstractpackdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Abstractpackdeclarator_DropletFileContext.prototype.constructor = Abstractpackdeclarator_DropletFileContext;

Abstractpackdeclarator_DropletFileContext.prototype.noptrabstractpackdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractpackdeclaratorContext,0);
};

Abstractpackdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Abstractpackdeclarator_DropletFileContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

Abstractpackdeclarator_DropletFileContext.prototype.abstractpackdeclarator = function() {
    return this.getTypedRuleContext(AbstractpackdeclaratorContext,0);
};

Abstractpackdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAbstractpackdeclarator_DropletFile(this);
	}
};

Abstractpackdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAbstractpackdeclarator_DropletFile(this);
	}
};




CPP14Parser.Abstractpackdeclarator_DropletFileContext = Abstractpackdeclarator_DropletFileContext;

CPP14Parser.prototype.abstractpackdeclarator_DropletFile = function() {

    var localctx = new Abstractpackdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 642, CPP14Parser.RULE_abstractpackdeclarator_DropletFile);
    try {
        this.state = 4614;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Ellipsis:
            this.enterOuterAlt(localctx, 1);
            this.state = 4607;
            this.noptrabstractpackdeclarator(0);
            this.state = 4608;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Decltype:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 2);
            this.state = 4610;
            this.ptroperator();
            this.state = 4611;
            this.abstractpackdeclarator();
            this.state = 4612;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Noptrabstractpackdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noptrabstractpackdeclarator_DropletFile;
    return this;
}

Noptrabstractpackdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Noptrabstractpackdeclarator_DropletFileContext.prototype.constructor = Noptrabstractpackdeclarator_DropletFileContext;

Noptrabstractpackdeclarator_DropletFileContext.prototype.noptrabstractpackdeclarator = function() {
    return this.getTypedRuleContext(NoptrabstractpackdeclaratorContext,0);
};

Noptrabstractpackdeclarator_DropletFileContext.prototype.parametersandqualifiers = function() {
    return this.getTypedRuleContext(ParametersandqualifiersContext,0);
};

Noptrabstractpackdeclarator_DropletFileContext.prototype.EOF = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.EOF);
    } else {
        return this.getToken(CPP14Parser.EOF, i);
    }
};


Noptrabstractpackdeclarator_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Noptrabstractpackdeclarator_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Noptrabstractpackdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoptrabstractpackdeclarator_DropletFile(this);
	}
};

Noptrabstractpackdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoptrabstractpackdeclarator_DropletFile(this);
	}
};




CPP14Parser.Noptrabstractpackdeclarator_DropletFileContext = Noptrabstractpackdeclarator_DropletFileContext;

CPP14Parser.prototype.noptrabstractpackdeclarator_DropletFile = function() {

    var localctx = new Noptrabstractpackdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 644, CPP14Parser.RULE_noptrabstractpackdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4634;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,509,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4616;
            this.noptrabstractpackdeclarator(0);
            this.state = 4617;
            this.parametersandqualifiers();
            this.state = 4618;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4620;
            this.noptrabstractpackdeclarator(0);
            this.state = 4621;
            this.match(CPP14Parser.LeftBracket);
            this.state = 4623;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 4622;
                this.constantexpression();
            }

            this.state = 4625;
            this.match(CPP14Parser.RightBracket);
            this.state = 4626;
            this.match(CPP14Parser.EOF);
            this.state = 4628;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4627;
                this.attributespecifierseq(0);
            }

            this.state = 4630;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4632;
            this.match(CPP14Parser.Ellipsis);
            this.state = 4633;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Parameterdeclarationclause_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parameterdeclarationclause_DropletFile;
    return this;
}

Parameterdeclarationclause_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Parameterdeclarationclause_DropletFileContext.prototype.constructor = Parameterdeclarationclause_DropletFileContext;

Parameterdeclarationclause_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Parameterdeclarationclause_DropletFileContext.prototype.parameterdeclarationlist = function() {
    return this.getTypedRuleContext(ParameterdeclarationlistContext,0);
};

Parameterdeclarationclause_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParameterdeclarationclause_DropletFile(this);
	}
};

Parameterdeclarationclause_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParameterdeclarationclause_DropletFile(this);
	}
};




CPP14Parser.Parameterdeclarationclause_DropletFileContext = Parameterdeclarationclause_DropletFileContext;

CPP14Parser.prototype.parameterdeclarationclause_DropletFile = function() {

    var localctx = new Parameterdeclarationclause_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 646, CPP14Parser.RULE_parameterdeclarationclause_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4648;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,512,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4637;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftBracket - 67)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
                this.state = 4636;
                this.parameterdeclarationlist(0);
            }

            this.state = 4640;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 4639;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 4642;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4643;
            this.parameterdeclarationlist(0);
            this.state = 4644;
            this.match(CPP14Parser.Comma);
            this.state = 4645;
            this.match(CPP14Parser.Ellipsis);
            this.state = 4646;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Parameterdeclarationlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parameterdeclarationlist_DropletFile;
    return this;
}

Parameterdeclarationlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Parameterdeclarationlist_DropletFileContext.prototype.constructor = Parameterdeclarationlist_DropletFileContext;

Parameterdeclarationlist_DropletFileContext.prototype.parameterdeclaration = function() {
    return this.getTypedRuleContext(ParameterdeclarationContext,0);
};

Parameterdeclarationlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Parameterdeclarationlist_DropletFileContext.prototype.parameterdeclarationlist = function() {
    return this.getTypedRuleContext(ParameterdeclarationlistContext,0);
};

Parameterdeclarationlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParameterdeclarationlist_DropletFile(this);
	}
};

Parameterdeclarationlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParameterdeclarationlist_DropletFile(this);
	}
};




CPP14Parser.Parameterdeclarationlist_DropletFileContext = Parameterdeclarationlist_DropletFileContext;

CPP14Parser.prototype.parameterdeclarationlist_DropletFile = function() {

    var localctx = new Parameterdeclarationlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 648, CPP14Parser.RULE_parameterdeclarationlist_DropletFile);
    try {
        this.state = 4658;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,513,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4650;
            this.parameterdeclaration();
            this.state = 4651;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4653;
            this.parameterdeclarationlist(0);
            this.state = 4654;
            this.match(CPP14Parser.Comma);
            this.state = 4655;
            this.parameterdeclaration();
            this.state = 4656;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Parameterdeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_parameterdeclaration_DropletFile;
    return this;
}

Parameterdeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Parameterdeclaration_DropletFileContext.prototype.constructor = Parameterdeclaration_DropletFileContext;

Parameterdeclaration_DropletFileContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

Parameterdeclaration_DropletFileContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

Parameterdeclaration_DropletFileContext.prototype.EOF = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.EOF);
    } else {
        return this.getToken(CPP14Parser.EOF, i);
    }
};


Parameterdeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Parameterdeclaration_DropletFileContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

Parameterdeclaration_DropletFileContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

Parameterdeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterParameterdeclaration_DropletFile(this);
	}
};

Parameterdeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitParameterdeclaration_DropletFile(this);
	}
};




CPP14Parser.Parameterdeclaration_DropletFileContext = Parameterdeclaration_DropletFileContext;

CPP14Parser.prototype.parameterdeclaration_DropletFile = function() {

    var localctx = new Parameterdeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 650, CPP14Parser.RULE_parameterdeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4697;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,520,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4661;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4660;
                this.attributespecifierseq(0);
            }

            this.state = 4663;
            this.declspecifierseq();
            this.state = 4664;
            this.declarator();
            this.state = 4665;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4668;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4667;
                this.attributespecifierseq(0);
            }

            this.state = 4670;
            this.declspecifierseq();
            this.state = 4671;
            this.declarator();
            this.state = 4672;
            this.match(CPP14Parser.Assign);
            this.state = 4673;
            this.initializerclause();
            this.state = 4674;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4677;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4676;
                this.attributespecifierseq(0);
            }

            this.state = 4679;
            this.declspecifierseq();
            this.state = 4681;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 4680;
                this.abstractdeclarator();
            }

            this.state = 4683;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4686;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4685;
                this.attributespecifierseq(0);
            }

            this.state = 4688;
            this.declspecifierseq();
            this.state = 4690;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 4689;
                this.abstractdeclarator();
            }

            this.state = 4692;
            this.match(CPP14Parser.Assign);
            this.state = 4693;
            this.match(CPP14Parser.EOF);
            this.state = 4694;
            this.initializerclause();
            this.state = 4695;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Functiondefinition_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functiondefinition_DropletFile;
    return this;
}

Functiondefinition_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Functiondefinition_DropletFileContext.prototype.constructor = Functiondefinition_DropletFileContext;

Functiondefinition_DropletFileContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

Functiondefinition_DropletFileContext.prototype.EOF = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.EOF);
    } else {
        return this.getToken(CPP14Parser.EOF, i);
    }
};


Functiondefinition_DropletFileContext.prototype.functionbody = function() {
    return this.getTypedRuleContext(FunctionbodyContext,0);
};

Functiondefinition_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Functiondefinition_DropletFileContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

Functiondefinition_DropletFileContext.prototype.virtspecifierseq = function() {
    return this.getTypedRuleContext(VirtspecifierseqContext,0);
};

Functiondefinition_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctiondefinition_DropletFile(this);
	}
};

Functiondefinition_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctiondefinition_DropletFile(this);
	}
};




CPP14Parser.Functiondefinition_DropletFileContext = Functiondefinition_DropletFileContext;

CPP14Parser.prototype.functiondefinition_DropletFile = function() {

    var localctx = new Functiondefinition_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 652, CPP14Parser.RULE_functiondefinition_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4700;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
            this.state = 4699;
            this.attributespecifierseq(0);
        }

        this.state = 4703;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,522,this._ctx);
        if(la_===1) {
            this.state = 4702;
            this.declspecifierseq();

        }
        this.state = 4705;
        this.declarator();
        this.state = 4707;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Final || _la===CPP14Parser.Override) {
            this.state = 4706;
            this.virtspecifierseq(0);
        }

        this.state = 4709;
        this.match(CPP14Parser.EOF);
        this.state = 4710;
        this.functionbody();
        this.state = 4711;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Functionbody_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functionbody_DropletFile;
    return this;
}

Functionbody_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Functionbody_DropletFileContext.prototype.constructor = Functionbody_DropletFileContext;

Functionbody_DropletFileContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

Functionbody_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Functionbody_DropletFileContext.prototype.ctorinitializer = function() {
    return this.getTypedRuleContext(CtorinitializerContext,0);
};

Functionbody_DropletFileContext.prototype.functiontryblock = function() {
    return this.getTypedRuleContext(FunctiontryblockContext,0);
};

Functionbody_DropletFileContext.prototype.Default = function() {
    return this.getToken(CPP14Parser.Default, 0);
};

Functionbody_DropletFileContext.prototype.Delete = function() {
    return this.getToken(CPP14Parser.Delete, 0);
};

Functionbody_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctionbody_DropletFile(this);
	}
};

Functionbody_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctionbody_DropletFile(this);
	}
};




CPP14Parser.Functionbody_DropletFileContext = Functionbody_DropletFileContext;

CPP14Parser.prototype.functionbody_DropletFile = function() {

    var localctx = new Functionbody_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 654, CPP14Parser.RULE_functionbody_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4730;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,525,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4714;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 4713;
                this.ctorinitializer();
            }

            this.state = 4716;
            this.compoundstatement();
            this.state = 4717;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4719;
            this.functiontryblock();
            this.state = 4720;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4722;
            this.match(CPP14Parser.Assign);
            this.state = 4723;
            this.match(CPP14Parser.Default);
            this.state = 4724;
            this.match(CPP14Parser.Semi);
            this.state = 4725;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4726;
            this.match(CPP14Parser.Assign);
            this.state = 4727;
            this.match(CPP14Parser.Delete);
            this.state = 4728;
            this.match(CPP14Parser.Semi);
            this.state = 4729;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Initializer_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initializer_DropletFile;
    return this;
}

Initializer_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Initializer_DropletFileContext.prototype.constructor = Initializer_DropletFileContext;

Initializer_DropletFileContext.prototype.braceorequalinitializer = function() {
    return this.getTypedRuleContext(BraceorequalinitializerContext,0);
};

Initializer_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Initializer_DropletFileContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

Initializer_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitializer_DropletFile(this);
	}
};

Initializer_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitializer_DropletFile(this);
	}
};




CPP14Parser.Initializer_DropletFileContext = Initializer_DropletFileContext;

CPP14Parser.prototype.initializer_DropletFile = function() {

    var localctx = new Initializer_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 656, CPP14Parser.RULE_initializer_DropletFile);
    try {
        this.state = 4740;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.LeftBrace:
        case CPP14Parser.Assign:
            this.enterOuterAlt(localctx, 1);
            this.state = 4732;
            this.braceorequalinitializer();
            this.state = 4733;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftParen:
            this.enterOuterAlt(localctx, 2);
            this.state = 4735;
            this.match(CPP14Parser.LeftParen);
            this.state = 4736;
            this.expressionlist();
            this.state = 4737;
            this.match(CPP14Parser.RightParen);
            this.state = 4738;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Braceorequalinitializer_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_braceorequalinitializer_DropletFile;
    return this;
}

Braceorequalinitializer_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Braceorequalinitializer_DropletFileContext.prototype.constructor = Braceorequalinitializer_DropletFileContext;

Braceorequalinitializer_DropletFileContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

Braceorequalinitializer_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Braceorequalinitializer_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Braceorequalinitializer_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBraceorequalinitializer_DropletFile(this);
	}
};

Braceorequalinitializer_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBraceorequalinitializer_DropletFile(this);
	}
};




CPP14Parser.Braceorequalinitializer_DropletFileContext = Braceorequalinitializer_DropletFileContext;

CPP14Parser.prototype.braceorequalinitializer_DropletFile = function() {

    var localctx = new Braceorequalinitializer_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 658, CPP14Parser.RULE_braceorequalinitializer_DropletFile);
    try {
        this.state = 4749;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Assign:
            this.enterOuterAlt(localctx, 1);
            this.state = 4742;
            this.match(CPP14Parser.Assign);
            this.state = 4743;
            this.initializerclause();
            this.state = 4744;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 4746;
            this.bracedinitlist();
            this.state = 4747;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Initializerclause_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initializerclause_DropletFile;
    return this;
}

Initializerclause_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Initializerclause_DropletFileContext.prototype.constructor = Initializerclause_DropletFileContext;

Initializerclause_DropletFileContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

Initializerclause_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Initializerclause_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Initializerclause_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitializerclause_DropletFile(this);
	}
};

Initializerclause_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitializerclause_DropletFile(this);
	}
};




CPP14Parser.Initializerclause_DropletFileContext = Initializerclause_DropletFileContext;

CPP14Parser.prototype.initializerclause_DropletFile = function() {

    var localctx = new Initializerclause_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 660, CPP14Parser.RULE_initializerclause_DropletFile);
    try {
        this.state = 4757;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Alignof:
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Const_cast:
        case CPP14Parser.Decltype:
        case CPP14Parser.Delete:
        case CPP14Parser.Double:
        case CPP14Parser.Dynamic_cast:
        case CPP14Parser.False:
        case CPP14Parser.Float:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.New:
        case CPP14Parser.Noexcept:
        case CPP14Parser.Nullptr:
        case CPP14Parser.Operator:
        case CPP14Parser.Reinterpret_cast:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Sizeof:
        case CPP14Parser.Static_cast:
        case CPP14Parser.This:
        case CPP14Parser.Throw:
        case CPP14Parser.True:
        case CPP14Parser.Typeid:
        case CPP14Parser.Typename:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Void:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
        case CPP14Parser.Plus:
        case CPP14Parser.Minus:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Or:
        case CPP14Parser.Tilde:
        case CPP14Parser.Not:
        case CPP14Parser.PlusPlus:
        case CPP14Parser.MinusMinus:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Identifier:
        case CPP14Parser.Integerliteral:
        case CPP14Parser.Characterliteral:
        case CPP14Parser.Floatingliteral:
        case CPP14Parser.Stringliteral:
        case CPP14Parser.Userdefinedintegerliteral:
        case CPP14Parser.Userdefinedfloatingliteral:
        case CPP14Parser.Userdefinedstringliteral:
        case CPP14Parser.Userdefinedcharacterliteral:
            this.enterOuterAlt(localctx, 1);
            this.state = 4751;
            this.assignmentexpression();
            this.state = 4752;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.LeftBrace:
            this.enterOuterAlt(localctx, 2);
            this.state = 4754;
            this.bracedinitlist();
            this.state = 4755;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Initializerlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_initializerlist_DropletFile;
    return this;
}

Initializerlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Initializerlist_DropletFileContext.prototype.constructor = Initializerlist_DropletFileContext;

Initializerlist_DropletFileContext.prototype.initializerclause = function() {
    return this.getTypedRuleContext(InitializerclauseContext,0);
};

Initializerlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Initializerlist_DropletFileContext.prototype.initializerlist = function() {
    return this.getTypedRuleContext(InitializerlistContext,0);
};

Initializerlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterInitializerlist_DropletFile(this);
	}
};

Initializerlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitInitializerlist_DropletFile(this);
	}
};




CPP14Parser.Initializerlist_DropletFileContext = Initializerlist_DropletFileContext;

CPP14Parser.prototype.initializerlist_DropletFile = function() {

    var localctx = new Initializerlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 662, CPP14Parser.RULE_initializerlist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4773;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,531,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4759;
            this.initializerclause();
            this.state = 4761;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 4760;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 4763;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4765;
            this.initializerlist(0);
            this.state = 4766;
            this.match(CPP14Parser.Comma);
            this.state = 4767;
            this.initializerclause();
            this.state = 4769;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 4768;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 4771;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Bracedinitlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_bracedinitlist_DropletFile;
    return this;
}

Bracedinitlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Bracedinitlist_DropletFileContext.prototype.constructor = Bracedinitlist_DropletFileContext;

Bracedinitlist_DropletFileContext.prototype.initializerlist = function() {
    return this.getTypedRuleContext(InitializerlistContext,0);
};

Bracedinitlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Bracedinitlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBracedinitlist_DropletFile(this);
	}
};

Bracedinitlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBracedinitlist_DropletFile(this);
	}
};




CPP14Parser.Bracedinitlist_DropletFileContext = Bracedinitlist_DropletFileContext;

CPP14Parser.prototype.bracedinitlist_DropletFile = function() {

    var localctx = new Bracedinitlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 664, CPP14Parser.RULE_bracedinitlist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4786;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,533,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4775;
            this.match(CPP14Parser.LeftBrace);
            this.state = 4776;
            this.initializerlist(0);
            this.state = 4778;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Comma) {
                this.state = 4777;
                this.match(CPP14Parser.Comma);
            }

            this.state = 4780;
            this.match(CPP14Parser.RightBrace);
            this.state = 4781;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4783;
            this.match(CPP14Parser.LeftBrace);
            this.state = 4784;
            this.match(CPP14Parser.RightBrace);
            this.state = 4785;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Classname_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classname_DropletFile;
    return this;
}

Classname_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Classname_DropletFileContext.prototype.constructor = Classname_DropletFileContext;

Classname_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Classname_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Classname_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Classname_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassname_DropletFile(this);
	}
};

Classname_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassname_DropletFile(this);
	}
};




CPP14Parser.Classname_DropletFileContext = Classname_DropletFileContext;

CPP14Parser.prototype.classname_DropletFile = function() {

    var localctx = new Classname_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 666, CPP14Parser.RULE_classname_DropletFile);
    try {
        this.state = 4793;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,534,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4788;
            this.match(CPP14Parser.Identifier);
            this.state = 4789;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4790;
            this.simpletemplateid();
            this.state = 4791;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Classspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classspecifier_DropletFile;
    return this;
}

Classspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Classspecifier_DropletFileContext.prototype.constructor = Classspecifier_DropletFileContext;

Classspecifier_DropletFileContext.prototype.classhead = function() {
    return this.getTypedRuleContext(ClassheadContext,0);
};

Classspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Classspecifier_DropletFileContext.prototype.memberspecification = function() {
    return this.getTypedRuleContext(MemberspecificationContext,0);
};

Classspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassspecifier_DropletFile(this);
	}
};

Classspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassspecifier_DropletFile(this);
	}
};




CPP14Parser.Classspecifier_DropletFileContext = Classspecifier_DropletFileContext;

CPP14Parser.prototype.classspecifier_DropletFile = function() {

    var localctx = new Classspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 668, CPP14Parser.RULE_classspecifier_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4795;
        this.classhead();
        this.state = 4796;
        this.match(CPP14Parser.LeftBrace);
        this.state = 4798;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Private - 32)) | (1 << (CPP14Parser.Protected - 32)) | (1 << (CPP14Parser.Public - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
            this.state = 4797;
            this.memberspecification();
        }

        this.state = 4800;
        this.match(CPP14Parser.RightBrace);
        this.state = 4801;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Classhead_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classhead_DropletFile;
    return this;
}

Classhead_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Classhead_DropletFileContext.prototype.constructor = Classhead_DropletFileContext;

Classhead_DropletFileContext.prototype.classkey = function() {
    return this.getTypedRuleContext(ClasskeyContext,0);
};

Classhead_DropletFileContext.prototype.classheadname = function() {
    return this.getTypedRuleContext(ClassheadnameContext,0);
};

Classhead_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Classhead_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Classhead_DropletFileContext.prototype.classvirtspecifier = function() {
    return this.getTypedRuleContext(ClassvirtspecifierContext,0);
};

Classhead_DropletFileContext.prototype.baseclause = function() {
    return this.getTypedRuleContext(BaseclauseContext,0);
};

Classhead_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClasshead_DropletFile(this);
	}
};

Classhead_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClasshead_DropletFile(this);
	}
};




CPP14Parser.Classhead_DropletFileContext = Classhead_DropletFileContext;

CPP14Parser.prototype.classhead_DropletFile = function() {

    var localctx = new Classhead_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 670, CPP14Parser.RULE_classhead_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4825;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,541,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4803;
            this.classkey();
            this.state = 4805;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4804;
                this.attributespecifierseq(0);
            }

            this.state = 4807;
            this.classheadname();
            this.state = 4809;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Final) {
                this.state = 4808;
                this.classvirtspecifier();
            }

            this.state = 4812;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 4811;
                this.baseclause();
            }

            this.state = 4814;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4816;
            this.classkey();
            this.state = 4818;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4817;
                this.attributespecifierseq(0);
            }

            this.state = 4821;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Colon) {
                this.state = 4820;
                this.baseclause();
            }

            this.state = 4823;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Classheadname_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classheadname_DropletFile;
    return this;
}

Classheadname_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Classheadname_DropletFileContext.prototype.constructor = Classheadname_DropletFileContext;

Classheadname_DropletFileContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

Classheadname_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Classheadname_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Classheadname_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassheadname_DropletFile(this);
	}
};

Classheadname_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassheadname_DropletFile(this);
	}
};




CPP14Parser.Classheadname_DropletFileContext = Classheadname_DropletFileContext;

CPP14Parser.prototype.classheadname_DropletFile = function() {

    var localctx = new Classheadname_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 672, CPP14Parser.RULE_classheadname_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4828;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,542,this._ctx);
        if(la_===1) {
            this.state = 4827;
            this.nestednamespecifier(0);

        }
        this.state = 4830;
        this.classname();
        this.state = 4831;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Classvirtspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classvirtspecifier_DropletFile;
    return this;
}

Classvirtspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Classvirtspecifier_DropletFileContext.prototype.constructor = Classvirtspecifier_DropletFileContext;

Classvirtspecifier_DropletFileContext.prototype.Final = function() {
    return this.getToken(CPP14Parser.Final, 0);
};

Classvirtspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Classvirtspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassvirtspecifier_DropletFile(this);
	}
};

Classvirtspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassvirtspecifier_DropletFile(this);
	}
};




CPP14Parser.Classvirtspecifier_DropletFileContext = Classvirtspecifier_DropletFileContext;

CPP14Parser.prototype.classvirtspecifier_DropletFile = function() {

    var localctx = new Classvirtspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 674, CPP14Parser.RULE_classvirtspecifier_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4833;
        this.match(CPP14Parser.Final);
        this.state = 4834;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Classkey_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classkey_DropletFile;
    return this;
}

Classkey_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Classkey_DropletFileContext.prototype.constructor = Classkey_DropletFileContext;

Classkey_DropletFileContext.prototype.Class = function() {
    return this.getToken(CPP14Parser.Class, 0);
};

Classkey_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Classkey_DropletFileContext.prototype.Struct = function() {
    return this.getToken(CPP14Parser.Struct, 0);
};

Classkey_DropletFileContext.prototype.Union = function() {
    return this.getToken(CPP14Parser.Union, 0);
};

Classkey_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClasskey_DropletFile(this);
	}
};

Classkey_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClasskey_DropletFile(this);
	}
};




CPP14Parser.Classkey_DropletFileContext = Classkey_DropletFileContext;

CPP14Parser.prototype.classkey_DropletFile = function() {

    var localctx = new Classkey_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 676, CPP14Parser.RULE_classkey_DropletFile);
    try {
        this.state = 4842;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Class:
            this.enterOuterAlt(localctx, 1);
            this.state = 4836;
            this.match(CPP14Parser.Class);
            this.state = 4837;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Struct:
            this.enterOuterAlt(localctx, 2);
            this.state = 4838;
            this.match(CPP14Parser.Struct);
            this.state = 4839;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Union:
            this.enterOuterAlt(localctx, 3);
            this.state = 4840;
            this.match(CPP14Parser.Union);
            this.state = 4841;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Memberspecification_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberspecification_DropletFile;
    return this;
}

Memberspecification_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Memberspecification_DropletFileContext.prototype.constructor = Memberspecification_DropletFileContext;

Memberspecification_DropletFileContext.prototype.memberdeclaration = function() {
    return this.getTypedRuleContext(MemberdeclarationContext,0);
};

Memberspecification_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Memberspecification_DropletFileContext.prototype.memberspecification = function() {
    return this.getTypedRuleContext(MemberspecificationContext,0);
};

Memberspecification_DropletFileContext.prototype.accessspecifier = function() {
    return this.getTypedRuleContext(AccessspecifierContext,0);
};

Memberspecification_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberspecification_DropletFile(this);
	}
};

Memberspecification_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberspecification_DropletFile(this);
	}
};




CPP14Parser.Memberspecification_DropletFileContext = Memberspecification_DropletFileContext;

CPP14Parser.prototype.memberspecification_DropletFile = function() {

    var localctx = new Memberspecification_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 678, CPP14Parser.RULE_memberspecification_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4857;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Alignas:
        case CPP14Parser.Auto:
        case CPP14Parser.Bool:
        case CPP14Parser.Char:
        case CPP14Parser.Char16:
        case CPP14Parser.Char32:
        case CPP14Parser.Class:
        case CPP14Parser.Const:
        case CPP14Parser.Constexpr:
        case CPP14Parser.Decltype:
        case CPP14Parser.Double:
        case CPP14Parser.Enum:
        case CPP14Parser.Explicit:
        case CPP14Parser.Extern:
        case CPP14Parser.Float:
        case CPP14Parser.Friend:
        case CPP14Parser.Inline:
        case CPP14Parser.Int:
        case CPP14Parser.Long:
        case CPP14Parser.Mutable:
        case CPP14Parser.Operator:
        case CPP14Parser.Register:
        case CPP14Parser.Short:
        case CPP14Parser.Signed:
        case CPP14Parser.Static:
        case CPP14Parser.Static_assert:
        case CPP14Parser.Struct:
        case CPP14Parser.Template:
        case CPP14Parser.Thread_local:
        case CPP14Parser.Typedef:
        case CPP14Parser.Typename:
        case CPP14Parser.Union:
        case CPP14Parser.Unsigned:
        case CPP14Parser.Using:
        case CPP14Parser.Virtual:
        case CPP14Parser.Void:
        case CPP14Parser.Volatile:
        case CPP14Parser.Wchar:
        case CPP14Parser.LeftParen:
        case CPP14Parser.LeftBracket:
        case CPP14Parser.Star:
        case CPP14Parser.And:
        case CPP14Parser.Tilde:
        case CPP14Parser.AndAnd:
        case CPP14Parser.Colon:
        case CPP14Parser.Doublecolon:
        case CPP14Parser.Semi:
        case CPP14Parser.Ellipsis:
        case CPP14Parser.Identifier:
            this.enterOuterAlt(localctx, 1);
            this.state = 4844;
            this.memberdeclaration();
            this.state = 4846;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Private - 32)) | (1 << (CPP14Parser.Protected - 32)) | (1 << (CPP14Parser.Public - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 4845;
                this.memberspecification();
            }

            this.state = 4848;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Private:
        case CPP14Parser.Protected:
        case CPP14Parser.Public:
            this.enterOuterAlt(localctx, 2);
            this.state = 4850;
            this.accessspecifier();
            this.state = 4851;
            this.match(CPP14Parser.Colon);
            this.state = 4853;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignas) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Constexpr) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.Explicit) | (1 << CPP14Parser.Extern))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Friend - 32)) | (1 << (CPP14Parser.Inline - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Mutable - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Private - 32)) | (1 << (CPP14Parser.Protected - 32)) | (1 << (CPP14Parser.Public - 32)) | (1 << (CPP14Parser.Register - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Static - 32)) | (1 << (CPP14Parser.Static_assert - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.Template - 32)) | (1 << (CPP14Parser.Thread_local - 32)))) !== 0) || ((((_la - 67)) & ~0x1f) == 0 && ((1 << (_la - 67)) & ((1 << (CPP14Parser.Typedef - 67)) | (1 << (CPP14Parser.Typename - 67)) | (1 << (CPP14Parser.Union - 67)) | (1 << (CPP14Parser.Unsigned - 67)) | (1 << (CPP14Parser.Using - 67)) | (1 << (CPP14Parser.Virtual - 67)) | (1 << (CPP14Parser.Void - 67)) | (1 << (CPP14Parser.Volatile - 67)) | (1 << (CPP14Parser.Wchar - 67)) | (1 << (CPP14Parser.LeftParen - 67)) | (1 << (CPP14Parser.LeftBracket - 67)) | (1 << (CPP14Parser.Star - 67)) | (1 << (CPP14Parser.And - 67)) | (1 << (CPP14Parser.Tilde - 67)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Semi - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 4852;
                this.memberspecification();
            }

            this.state = 4855;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Memberdeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberdeclaration_DropletFile;
    return this;
}

Memberdeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Memberdeclaration_DropletFileContext.prototype.constructor = Memberdeclaration_DropletFileContext;

Memberdeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Memberdeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Memberdeclaration_DropletFileContext.prototype.declspecifierseq = function() {
    return this.getTypedRuleContext(DeclspecifierseqContext,0);
};

Memberdeclaration_DropletFileContext.prototype.memberdeclaratorlist = function() {
    return this.getTypedRuleContext(MemberdeclaratorlistContext,0);
};

Memberdeclaration_DropletFileContext.prototype.functiondefinition = function() {
    return this.getTypedRuleContext(FunctiondefinitionContext,0);
};

Memberdeclaration_DropletFileContext.prototype.usingdeclaration = function() {
    return this.getTypedRuleContext(UsingdeclarationContext,0);
};

Memberdeclaration_DropletFileContext.prototype.static_assertdeclaration = function() {
    return this.getTypedRuleContext(Static_assertdeclarationContext,0);
};

Memberdeclaration_DropletFileContext.prototype.templatedeclaration = function() {
    return this.getTypedRuleContext(TemplatedeclarationContext,0);
};

Memberdeclaration_DropletFileContext.prototype.aliasdeclaration = function() {
    return this.getTypedRuleContext(AliasdeclarationContext,0);
};

Memberdeclaration_DropletFileContext.prototype.emptydeclaration = function() {
    return this.getTypedRuleContext(EmptydeclarationContext,0);
};

Memberdeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberdeclaration_DropletFile(this);
	}
};

Memberdeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberdeclaration_DropletFile(this);
	}
};




CPP14Parser.Memberdeclaration_DropletFileContext = Memberdeclaration_DropletFileContext;

CPP14Parser.prototype.memberdeclaration_DropletFile = function() {

    var localctx = new Memberdeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 680, CPP14Parser.RULE_memberdeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4888;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,550,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4860;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,547,this._ctx);
            if(la_===1) {
                this.state = 4859;
                this.attributespecifierseq(0);

            }
            this.state = 4863;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,548,this._ctx);
            if(la_===1) {
                this.state = 4862;
                this.declspecifierseq();

            }
            this.state = 4866;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.Decltype || _la===CPP14Parser.Operator || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)) | (1 << (CPP14Parser.Tilde - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Colon - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 4865;
                this.memberdeclaratorlist(0);
            }

            this.state = 4868;
            this.match(CPP14Parser.Semi);
            this.state = 4869;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4870;
            this.functiondefinition();
            this.state = 4871;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4873;
            this.usingdeclaration();
            this.state = 4874;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 4876;
            this.static_assertdeclaration();
            this.state = 4877;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 4879;
            this.templatedeclaration();
            this.state = 4880;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 4882;
            this.aliasdeclaration();
            this.state = 4883;
            this.match(CPP14Parser.EOF);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 4885;
            this.emptydeclaration();
            this.state = 4886;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Memberdeclaratorlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberdeclaratorlist_DropletFile;
    return this;
}

Memberdeclaratorlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Memberdeclaratorlist_DropletFileContext.prototype.constructor = Memberdeclaratorlist_DropletFileContext;

Memberdeclaratorlist_DropletFileContext.prototype.memberdeclarator = function() {
    return this.getTypedRuleContext(MemberdeclaratorContext,0);
};

Memberdeclaratorlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Memberdeclaratorlist_DropletFileContext.prototype.memberdeclaratorlist = function() {
    return this.getTypedRuleContext(MemberdeclaratorlistContext,0);
};

Memberdeclaratorlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberdeclaratorlist_DropletFile(this);
	}
};

Memberdeclaratorlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberdeclaratorlist_DropletFile(this);
	}
};




CPP14Parser.Memberdeclaratorlist_DropletFileContext = Memberdeclaratorlist_DropletFileContext;

CPP14Parser.prototype.memberdeclaratorlist_DropletFile = function() {

    var localctx = new Memberdeclaratorlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 682, CPP14Parser.RULE_memberdeclaratorlist_DropletFile);
    try {
        this.state = 4898;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,551,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4890;
            this.memberdeclarator();
            this.state = 4891;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4893;
            this.memberdeclaratorlist(0);
            this.state = 4894;
            this.match(CPP14Parser.Comma);
            this.state = 4895;
            this.memberdeclarator();
            this.state = 4896;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Memberdeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_memberdeclarator_DropletFile;
    return this;
}

Memberdeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Memberdeclarator_DropletFileContext.prototype.constructor = Memberdeclarator_DropletFileContext;

Memberdeclarator_DropletFileContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

Memberdeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Memberdeclarator_DropletFileContext.prototype.virtspecifierseq = function() {
    return this.getTypedRuleContext(VirtspecifierseqContext,0);
};

Memberdeclarator_DropletFileContext.prototype.purespecifier = function() {
    return this.getTypedRuleContext(PurespecifierContext,0);
};

Memberdeclarator_DropletFileContext.prototype.braceorequalinitializer = function() {
    return this.getTypedRuleContext(BraceorequalinitializerContext,0);
};

Memberdeclarator_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Memberdeclarator_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Memberdeclarator_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Memberdeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMemberdeclarator_DropletFile(this);
	}
};

Memberdeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMemberdeclarator_DropletFile(this);
	}
};




CPP14Parser.Memberdeclarator_DropletFileContext = Memberdeclarator_DropletFileContext;

CPP14Parser.prototype.memberdeclarator_DropletFile = function() {

    var localctx = new Memberdeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 684, CPP14Parser.RULE_memberdeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4925;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,557,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4900;
            this.declarator();
            this.state = 4902;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Final || _la===CPP14Parser.Override) {
                this.state = 4901;
                this.virtspecifierseq(0);
            }

            this.state = 4905;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Assign) {
                this.state = 4904;
                this.purespecifier();
            }

            this.state = 4907;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4909;
            this.declarator();
            this.state = 4911;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.LeftBrace || _la===CPP14Parser.Assign) {
                this.state = 4910;
                this.braceorequalinitializer();
            }

            this.state = 4913;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4916;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 4915;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 4919;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4918;
                this.attributespecifierseq(0);
            }

            this.state = 4921;
            this.match(CPP14Parser.Colon);
            this.state = 4922;
            this.constantexpression();
            this.state = 4923;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Virtspecifierseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_virtspecifierseq_DropletFile;
    return this;
}

Virtspecifierseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Virtspecifierseq_DropletFileContext.prototype.constructor = Virtspecifierseq_DropletFileContext;

Virtspecifierseq_DropletFileContext.prototype.virtspecifier = function() {
    return this.getTypedRuleContext(VirtspecifierContext,0);
};

Virtspecifierseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Virtspecifierseq_DropletFileContext.prototype.virtspecifierseq = function() {
    return this.getTypedRuleContext(VirtspecifierseqContext,0);
};

Virtspecifierseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterVirtspecifierseq_DropletFile(this);
	}
};

Virtspecifierseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitVirtspecifierseq_DropletFile(this);
	}
};




CPP14Parser.Virtspecifierseq_DropletFileContext = Virtspecifierseq_DropletFileContext;

CPP14Parser.prototype.virtspecifierseq_DropletFile = function() {

    var localctx = new Virtspecifierseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 686, CPP14Parser.RULE_virtspecifierseq_DropletFile);
    try {
        this.state = 4934;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,558,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4927;
            this.virtspecifier();
            this.state = 4928;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4930;
            this.virtspecifierseq(0);
            this.state = 4931;
            this.virtspecifier();
            this.state = 4932;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Virtspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_virtspecifier_DropletFile;
    return this;
}

Virtspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Virtspecifier_DropletFileContext.prototype.constructor = Virtspecifier_DropletFileContext;

Virtspecifier_DropletFileContext.prototype.Override = function() {
    return this.getToken(CPP14Parser.Override, 0);
};

Virtspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Virtspecifier_DropletFileContext.prototype.Final = function() {
    return this.getToken(CPP14Parser.Final, 0);
};

Virtspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterVirtspecifier_DropletFile(this);
	}
};

Virtspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitVirtspecifier_DropletFile(this);
	}
};




CPP14Parser.Virtspecifier_DropletFileContext = Virtspecifier_DropletFileContext;

CPP14Parser.prototype.virtspecifier_DropletFile = function() {

    var localctx = new Virtspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 688, CPP14Parser.RULE_virtspecifier_DropletFile);
    try {
        this.state = 4940;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Override:
            this.enterOuterAlt(localctx, 1);
            this.state = 4936;
            this.match(CPP14Parser.Override);
            this.state = 4937;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Final:
            this.enterOuterAlt(localctx, 2);
            this.state = 4938;
            this.match(CPP14Parser.Final);
            this.state = 4939;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Purespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_purespecifier_DropletFile;
    this.val = null; // Token
    return this;
}

Purespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Purespecifier_DropletFileContext.prototype.constructor = Purespecifier_DropletFileContext;

Purespecifier_DropletFileContext.prototype.Assign = function() {
    return this.getToken(CPP14Parser.Assign, 0);
};

Purespecifier_DropletFileContext.prototype.EOF = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.EOF);
    } else {
        return this.getToken(CPP14Parser.EOF, i);
    }
};


Purespecifier_DropletFileContext.prototype.Octalliteral = function() {
    return this.getToken(CPP14Parser.Octalliteral, 0);
};

Purespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPurespecifier_DropletFile(this);
	}
};

Purespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPurespecifier_DropletFile(this);
	}
};




CPP14Parser.Purespecifier_DropletFileContext = Purespecifier_DropletFileContext;

CPP14Parser.prototype.purespecifier_DropletFile = function() {

    var localctx = new Purespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 690, CPP14Parser.RULE_purespecifier_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4942;
        this.match(CPP14Parser.Assign);
        this.state = 4943;
        localctx.val = this.match(CPP14Parser.Octalliteral);
        this.state = 4944;
        this.match(CPP14Parser.EOF);
        if((localctx.val===null ? null : localctx.val.text).compareTo("0")!=0) throw new InputMismatchException(this);
        this.state = 4946;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Baseclause_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_baseclause_DropletFile;
    return this;
}

Baseclause_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Baseclause_DropletFileContext.prototype.constructor = Baseclause_DropletFileContext;

Baseclause_DropletFileContext.prototype.basespecifierlist = function() {
    return this.getTypedRuleContext(BasespecifierlistContext,0);
};

Baseclause_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Baseclause_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBaseclause_DropletFile(this);
	}
};

Baseclause_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBaseclause_DropletFile(this);
	}
};




CPP14Parser.Baseclause_DropletFileContext = Baseclause_DropletFileContext;

CPP14Parser.prototype.baseclause_DropletFile = function() {

    var localctx = new Baseclause_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 692, CPP14Parser.RULE_baseclause_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 4948;
        this.match(CPP14Parser.Colon);
        this.state = 4949;
        this.basespecifierlist(0);
        this.state = 4950;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basespecifierlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_basespecifierlist_DropletFile;
    return this;
}

Basespecifierlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basespecifierlist_DropletFileContext.prototype.constructor = Basespecifierlist_DropletFileContext;

Basespecifierlist_DropletFileContext.prototype.basespecifier = function() {
    return this.getTypedRuleContext(BasespecifierContext,0);
};

Basespecifierlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Basespecifierlist_DropletFileContext.prototype.basespecifierlist = function() {
    return this.getTypedRuleContext(BasespecifierlistContext,0);
};

Basespecifierlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBasespecifierlist_DropletFile(this);
	}
};

Basespecifierlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBasespecifierlist_DropletFile(this);
	}
};




CPP14Parser.Basespecifierlist_DropletFileContext = Basespecifierlist_DropletFileContext;

CPP14Parser.prototype.basespecifierlist_DropletFile = function() {

    var localctx = new Basespecifierlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 694, CPP14Parser.RULE_basespecifierlist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4966;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,562,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4952;
            this.basespecifier();
            this.state = 4954;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 4953;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 4956;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4958;
            this.basespecifierlist(0);
            this.state = 4959;
            this.match(CPP14Parser.Comma);
            this.state = 4960;
            this.basespecifier();
            this.state = 4962;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 4961;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 4964;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_basespecifier_DropletFile;
    return this;
}

Basespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basespecifier_DropletFileContext.prototype.constructor = Basespecifier_DropletFileContext;

Basespecifier_DropletFileContext.prototype.basetypespecifier = function() {
    return this.getTypedRuleContext(BasetypespecifierContext,0);
};

Basespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Basespecifier_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Basespecifier_DropletFileContext.prototype.Virtual = function() {
    return this.getToken(CPP14Parser.Virtual, 0);
};

Basespecifier_DropletFileContext.prototype.accessspecifier = function() {
    return this.getTypedRuleContext(AccessspecifierContext,0);
};

Basespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBasespecifier_DropletFile(this);
	}
};

Basespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBasespecifier_DropletFile(this);
	}
};




CPP14Parser.Basespecifier_DropletFileContext = Basespecifier_DropletFileContext;

CPP14Parser.prototype.basespecifier_DropletFile = function() {

    var localctx = new Basespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 696, CPP14Parser.RULE_basespecifier_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 4994;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,568,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4969;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4968;
                this.attributespecifierseq(0);
            }

            this.state = 4971;
            this.basetypespecifier();
            this.state = 4972;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 4975;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4974;
                this.attributespecifierseq(0);
            }

            this.state = 4977;
            this.match(CPP14Parser.Virtual);
            this.state = 4979;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(((((_la - 47)) & ~0x1f) == 0 && ((1 << (_la - 47)) & ((1 << (CPP14Parser.Private - 47)) | (1 << (CPP14Parser.Protected - 47)) | (1 << (CPP14Parser.Public - 47)))) !== 0)) {
                this.state = 4978;
                this.accessspecifier();
            }

            this.state = 4981;
            this.basetypespecifier();
            this.state = 4982;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 4985;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 4984;
                this.attributespecifierseq(0);
            }

            this.state = 4987;
            this.accessspecifier();
            this.state = 4989;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Virtual) {
                this.state = 4988;
                this.match(CPP14Parser.Virtual);
            }

            this.state = 4991;
            this.basetypespecifier();
            this.state = 4992;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Classordecltype_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_classordecltype_DropletFile;
    return this;
}

Classordecltype_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Classordecltype_DropletFileContext.prototype.constructor = Classordecltype_DropletFileContext;

Classordecltype_DropletFileContext.prototype.classname = function() {
    return this.getTypedRuleContext(ClassnameContext,0);
};

Classordecltype_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Classordecltype_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Classordecltype_DropletFileContext.prototype.decltypespecifier = function() {
    return this.getTypedRuleContext(DecltypespecifierContext,0);
};

Classordecltype_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterClassordecltype_DropletFile(this);
	}
};

Classordecltype_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitClassordecltype_DropletFile(this);
	}
};




CPP14Parser.Classordecltype_DropletFileContext = Classordecltype_DropletFileContext;

CPP14Parser.prototype.classordecltype_DropletFile = function() {

    var localctx = new Classordecltype_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 698, CPP14Parser.RULE_classordecltype_DropletFile);
    try {
        this.state = 5005;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,570,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 4997;
            this._errHandler.sync(this);
            var la_ = this._interp.adaptivePredict(this._input,569,this._ctx);
            if(la_===1) {
                this.state = 4996;
                this.nestednamespecifier(0);

            }
            this.state = 4999;
            this.classname();
            this.state = 5000;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5002;
            this.decltypespecifier();
            this.state = 5003;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Basetypespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_basetypespecifier_DropletFile;
    return this;
}

Basetypespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Basetypespecifier_DropletFileContext.prototype.constructor = Basetypespecifier_DropletFileContext;

Basetypespecifier_DropletFileContext.prototype.classordecltype = function() {
    return this.getTypedRuleContext(ClassordecltypeContext,0);
};

Basetypespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Basetypespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBasetypespecifier_DropletFile(this);
	}
};

Basetypespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBasetypespecifier_DropletFile(this);
	}
};




CPP14Parser.Basetypespecifier_DropletFileContext = Basetypespecifier_DropletFileContext;

CPP14Parser.prototype.basetypespecifier_DropletFile = function() {

    var localctx = new Basetypespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 700, CPP14Parser.RULE_basetypespecifier_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5007;
        this.classordecltype();
        this.state = 5008;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Accessspecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_accessspecifier_DropletFile;
    return this;
}

Accessspecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Accessspecifier_DropletFileContext.prototype.constructor = Accessspecifier_DropletFileContext;

Accessspecifier_DropletFileContext.prototype.Private = function() {
    return this.getToken(CPP14Parser.Private, 0);
};

Accessspecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Accessspecifier_DropletFileContext.prototype.Protected = function() {
    return this.getToken(CPP14Parser.Protected, 0);
};

Accessspecifier_DropletFileContext.prototype.Public = function() {
    return this.getToken(CPP14Parser.Public, 0);
};

Accessspecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterAccessspecifier_DropletFile(this);
	}
};

Accessspecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitAccessspecifier_DropletFile(this);
	}
};




CPP14Parser.Accessspecifier_DropletFileContext = Accessspecifier_DropletFileContext;

CPP14Parser.prototype.accessspecifier_DropletFile = function() {

    var localctx = new Accessspecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 702, CPP14Parser.RULE_accessspecifier_DropletFile);
    try {
        this.state = 5016;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Private:
            this.enterOuterAlt(localctx, 1);
            this.state = 5010;
            this.match(CPP14Parser.Private);
            this.state = 5011;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Protected:
            this.enterOuterAlt(localctx, 2);
            this.state = 5012;
            this.match(CPP14Parser.Protected);
            this.state = 5013;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Public:
            this.enterOuterAlt(localctx, 3);
            this.state = 5014;
            this.match(CPP14Parser.Public);
            this.state = 5015;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Conversionfunctionid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conversionfunctionid_DropletFile;
    return this;
}

Conversionfunctionid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Conversionfunctionid_DropletFileContext.prototype.constructor = Conversionfunctionid_DropletFileContext;

Conversionfunctionid_DropletFileContext.prototype.Operator = function() {
    return this.getToken(CPP14Parser.Operator, 0);
};

Conversionfunctionid_DropletFileContext.prototype.conversiontypeid = function() {
    return this.getTypedRuleContext(ConversiontypeidContext,0);
};

Conversionfunctionid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Conversionfunctionid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConversionfunctionid_DropletFile(this);
	}
};

Conversionfunctionid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConversionfunctionid_DropletFile(this);
	}
};




CPP14Parser.Conversionfunctionid_DropletFileContext = Conversionfunctionid_DropletFileContext;

CPP14Parser.prototype.conversionfunctionid_DropletFile = function() {

    var localctx = new Conversionfunctionid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 704, CPP14Parser.RULE_conversionfunctionid_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5018;
        this.match(CPP14Parser.Operator);
        this.state = 5019;
        this.conversiontypeid();
        this.state = 5020;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Conversiontypeid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conversiontypeid_DropletFile;
    return this;
}

Conversiontypeid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Conversiontypeid_DropletFileContext.prototype.constructor = Conversiontypeid_DropletFileContext;

Conversiontypeid_DropletFileContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

Conversiontypeid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Conversiontypeid_DropletFileContext.prototype.conversiondeclarator = function() {
    return this.getTypedRuleContext(ConversiondeclaratorContext,0);
};

Conversiontypeid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConversiontypeid_DropletFile(this);
	}
};

Conversiontypeid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConversiontypeid_DropletFile(this);
	}
};




CPP14Parser.Conversiontypeid_DropletFileContext = Conversiontypeid_DropletFileContext;

CPP14Parser.prototype.conversiontypeid_DropletFile = function() {

    var localctx = new Conversiontypeid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 706, CPP14Parser.RULE_conversiontypeid_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5022;
        this.typespecifierseq();
        this.state = 5024;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Decltype || ((((_la - 86)) & ~0x1f) == 0 && ((1 << (_la - 86)) & ((1 << (CPP14Parser.Star - 86)) | (1 << (CPP14Parser.And - 86)) | (1 << (CPP14Parser.AndAnd - 86)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
            this.state = 5023;
            this.conversiondeclarator();
        }

        this.state = 5026;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Conversiondeclarator_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_conversiondeclarator_DropletFile;
    return this;
}

Conversiondeclarator_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Conversiondeclarator_DropletFileContext.prototype.constructor = Conversiondeclarator_DropletFileContext;

Conversiondeclarator_DropletFileContext.prototype.ptroperator = function() {
    return this.getTypedRuleContext(PtroperatorContext,0);
};

Conversiondeclarator_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Conversiondeclarator_DropletFileContext.prototype.conversiondeclarator = function() {
    return this.getTypedRuleContext(ConversiondeclaratorContext,0);
};

Conversiondeclarator_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterConversiondeclarator_DropletFile(this);
	}
};

Conversiondeclarator_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitConversiondeclarator_DropletFile(this);
	}
};




CPP14Parser.Conversiondeclarator_DropletFileContext = Conversiondeclarator_DropletFileContext;

CPP14Parser.prototype.conversiondeclarator_DropletFile = function() {

    var localctx = new Conversiondeclarator_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 708, CPP14Parser.RULE_conversiondeclarator_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5028;
        this.ptroperator();
        this.state = 5030;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Decltype || ((((_la - 86)) & ~0x1f) == 0 && ((1 << (_la - 86)) & ((1 << (CPP14Parser.Star - 86)) | (1 << (CPP14Parser.And - 86)) | (1 << (CPP14Parser.AndAnd - 86)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
            this.state = 5029;
            this.conversiondeclarator();
        }

        this.state = 5032;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Ctorinitializer_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_ctorinitializer_DropletFile;
    return this;
}

Ctorinitializer_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Ctorinitializer_DropletFileContext.prototype.constructor = Ctorinitializer_DropletFileContext;

Ctorinitializer_DropletFileContext.prototype.meminitializerlist = function() {
    return this.getTypedRuleContext(MeminitializerlistContext,0);
};

Ctorinitializer_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Ctorinitializer_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterCtorinitializer_DropletFile(this);
	}
};

Ctorinitializer_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitCtorinitializer_DropletFile(this);
	}
};




CPP14Parser.Ctorinitializer_DropletFileContext = Ctorinitializer_DropletFileContext;

CPP14Parser.prototype.ctorinitializer_DropletFile = function() {

    var localctx = new Ctorinitializer_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 710, CPP14Parser.RULE_ctorinitializer_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5034;
        this.match(CPP14Parser.Colon);
        this.state = 5035;
        this.meminitializerlist();
        this.state = 5036;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Meminitializerlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_meminitializerlist_DropletFile;
    return this;
}

Meminitializerlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Meminitializerlist_DropletFileContext.prototype.constructor = Meminitializerlist_DropletFileContext;

Meminitializerlist_DropletFileContext.prototype.meminitializer = function() {
    return this.getTypedRuleContext(MeminitializerContext,0);
};

Meminitializerlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Meminitializerlist_DropletFileContext.prototype.meminitializerlist = function() {
    return this.getTypedRuleContext(MeminitializerlistContext,0);
};

Meminitializerlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMeminitializerlist_DropletFile(this);
	}
};

Meminitializerlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMeminitializerlist_DropletFile(this);
	}
};




CPP14Parser.Meminitializerlist_DropletFileContext = Meminitializerlist_DropletFileContext;

CPP14Parser.prototype.meminitializerlist_DropletFile = function() {

    var localctx = new Meminitializerlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 712, CPP14Parser.RULE_meminitializerlist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5052;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,576,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5038;
            this.meminitializer();
            this.state = 5040;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5039;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5042;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5044;
            this.meminitializer();
            this.state = 5046;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5045;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5048;
            this.match(CPP14Parser.Comma);
            this.state = 5049;
            this.meminitializerlist();
            this.state = 5050;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Meminitializer_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_meminitializer_DropletFile;
    return this;
}

Meminitializer_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Meminitializer_DropletFileContext.prototype.constructor = Meminitializer_DropletFileContext;

Meminitializer_DropletFileContext.prototype.meminitializerid = function() {
    return this.getTypedRuleContext(MeminitializeridContext,0);
};

Meminitializer_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Meminitializer_DropletFileContext.prototype.expressionlist = function() {
    return this.getTypedRuleContext(ExpressionlistContext,0);
};

Meminitializer_DropletFileContext.prototype.bracedinitlist = function() {
    return this.getTypedRuleContext(BracedinitlistContext,0);
};

Meminitializer_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMeminitializer_DropletFile(this);
	}
};

Meminitializer_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMeminitializer_DropletFile(this);
	}
};




CPP14Parser.Meminitializer_DropletFileContext = Meminitializer_DropletFileContext;

CPP14Parser.prototype.meminitializer_DropletFile = function() {

    var localctx = new Meminitializer_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 714, CPP14Parser.RULE_meminitializer_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5066;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,578,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5054;
            this.meminitializerid();
            this.state = 5055;
            this.match(CPP14Parser.LeftParen);
            this.state = 5057;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.LeftBrace - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 5056;
                this.expressionlist();
            }

            this.state = 5059;
            this.match(CPP14Parser.RightParen);
            this.state = 5060;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5062;
            this.meminitializerid();
            this.state = 5063;
            this.bracedinitlist();
            this.state = 5064;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Meminitializerid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_meminitializerid_DropletFile;
    return this;
}

Meminitializerid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Meminitializerid_DropletFileContext.prototype.constructor = Meminitializerid_DropletFileContext;

Meminitializerid_DropletFileContext.prototype.classordecltype = function() {
    return this.getTypedRuleContext(ClassordecltypeContext,0);
};

Meminitializerid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Meminitializerid_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Meminitializerid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterMeminitializerid_DropletFile(this);
	}
};

Meminitializerid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitMeminitializerid_DropletFile(this);
	}
};




CPP14Parser.Meminitializerid_DropletFileContext = Meminitializerid_DropletFileContext;

CPP14Parser.prototype.meminitializerid_DropletFile = function() {

    var localctx = new Meminitializerid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 716, CPP14Parser.RULE_meminitializerid_DropletFile);
    try {
        this.state = 5073;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,579,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5068;
            this.classordecltype();
            this.state = 5069;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5071;
            this.match(CPP14Parser.Identifier);
            this.state = 5072;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Operatorfunctionid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_operatorfunctionid_DropletFile;
    return this;
}

Operatorfunctionid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Operatorfunctionid_DropletFileContext.prototype.constructor = Operatorfunctionid_DropletFileContext;

Operatorfunctionid_DropletFileContext.prototype.Operator = function() {
    return this.getToken(CPP14Parser.Operator, 0);
};

Operatorfunctionid_DropletFileContext.prototype.operator = function() {
    return this.getTypedRuleContext(OperatorContext,0);
};

Operatorfunctionid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Operatorfunctionid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOperatorfunctionid_DropletFile(this);
	}
};

Operatorfunctionid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOperatorfunctionid_DropletFile(this);
	}
};




CPP14Parser.Operatorfunctionid_DropletFileContext = Operatorfunctionid_DropletFileContext;

CPP14Parser.prototype.operatorfunctionid_DropletFile = function() {

    var localctx = new Operatorfunctionid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 718, CPP14Parser.RULE_operatorfunctionid_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5075;
        this.match(CPP14Parser.Operator);
        this.state = 5076;
        this.operator();
        this.state = 5077;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Literaloperatorid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_literaloperatorid_DropletFile;
    return this;
}

Literaloperatorid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Literaloperatorid_DropletFileContext.prototype.constructor = Literaloperatorid_DropletFileContext;

Literaloperatorid_DropletFileContext.prototype.Operator = function() {
    return this.getToken(CPP14Parser.Operator, 0);
};

Literaloperatorid_DropletFileContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

Literaloperatorid_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Literaloperatorid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Literaloperatorid_DropletFileContext.prototype.Userdefinedstringliteral = function() {
    return this.getToken(CPP14Parser.Userdefinedstringliteral, 0);
};

Literaloperatorid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLiteraloperatorid_DropletFile(this);
	}
};

Literaloperatorid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLiteraloperatorid_DropletFile(this);
	}
};




CPP14Parser.Literaloperatorid_DropletFileContext = Literaloperatorid_DropletFileContext;

CPP14Parser.prototype.literaloperatorid_DropletFile = function() {

    var localctx = new Literaloperatorid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 720, CPP14Parser.RULE_literaloperatorid_DropletFile);
    try {
        this.state = 5086;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,580,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5079;
            this.match(CPP14Parser.Operator);
            this.state = 5080;
            this.match(CPP14Parser.Stringliteral);
            this.state = 5081;
            this.match(CPP14Parser.Identifier);
            this.state = 5082;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5083;
            this.match(CPP14Parser.Operator);
            this.state = 5084;
            this.match(CPP14Parser.Userdefinedstringliteral);
            this.state = 5085;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Templatedeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templatedeclaration_DropletFile;
    return this;
}

Templatedeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Templatedeclaration_DropletFileContext.prototype.constructor = Templatedeclaration_DropletFileContext;

Templatedeclaration_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Templatedeclaration_DropletFileContext.prototype.templateparameterlist = function() {
    return this.getTypedRuleContext(TemplateparameterlistContext,0);
};

Templatedeclaration_DropletFileContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

Templatedeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Templatedeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplatedeclaration_DropletFile(this);
	}
};

Templatedeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplatedeclaration_DropletFile(this);
	}
};




CPP14Parser.Templatedeclaration_DropletFileContext = Templatedeclaration_DropletFileContext;

CPP14Parser.prototype.templatedeclaration_DropletFile = function() {

    var localctx = new Templatedeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 722, CPP14Parser.RULE_templatedeclaration_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5088;
        this.match(CPP14Parser.Template);
        this.state = 5089;
        this.match(CPP14Parser.Less);
        this.state = 5090;
        this.templateparameterlist(0);
        this.state = 5091;
        this.match(CPP14Parser.Greater);
        this.state = 5092;
        this.declaration();
        this.state = 5093;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Templateparameterlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateparameterlist_DropletFile;
    return this;
}

Templateparameterlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Templateparameterlist_DropletFileContext.prototype.constructor = Templateparameterlist_DropletFileContext;

Templateparameterlist_DropletFileContext.prototype.templateparameter = function() {
    return this.getTypedRuleContext(TemplateparameterContext,0);
};

Templateparameterlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Templateparameterlist_DropletFileContext.prototype.templateparameterlist = function() {
    return this.getTypedRuleContext(TemplateparameterlistContext,0);
};

Templateparameterlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateparameterlist_DropletFile(this);
	}
};

Templateparameterlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateparameterlist_DropletFile(this);
	}
};




CPP14Parser.Templateparameterlist_DropletFileContext = Templateparameterlist_DropletFileContext;

CPP14Parser.prototype.templateparameterlist_DropletFile = function() {

    var localctx = new Templateparameterlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 724, CPP14Parser.RULE_templateparameterlist_DropletFile);
    try {
        this.state = 5103;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,581,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5095;
            this.templateparameter();
            this.state = 5096;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5098;
            this.templateparameterlist(0);
            this.state = 5099;
            this.match(CPP14Parser.Comma);
            this.state = 5100;
            this.templateparameter();
            this.state = 5101;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Templateparameter_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateparameter_DropletFile;
    return this;
}

Templateparameter_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Templateparameter_DropletFileContext.prototype.constructor = Templateparameter_DropletFileContext;

Templateparameter_DropletFileContext.prototype.typeparameter = function() {
    return this.getTypedRuleContext(TypeparameterContext,0);
};

Templateparameter_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Templateparameter_DropletFileContext.prototype.parameterdeclaration = function() {
    return this.getTypedRuleContext(ParameterdeclarationContext,0);
};

Templateparameter_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateparameter_DropletFile(this);
	}
};

Templateparameter_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateparameter_DropletFile(this);
	}
};




CPP14Parser.Templateparameter_DropletFileContext = Templateparameter_DropletFileContext;

CPP14Parser.prototype.templateparameter_DropletFile = function() {

    var localctx = new Templateparameter_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 726, CPP14Parser.RULE_templateparameter_DropletFile);
    try {
        this.state = 5111;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,582,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5105;
            this.typeparameter();
            this.state = 5106;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5108;
            this.parameterdeclaration();
            this.state = 5109;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typeparameter_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typeparameter_DropletFile;
    return this;
}

Typeparameter_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typeparameter_DropletFileContext.prototype.constructor = Typeparameter_DropletFileContext;

Typeparameter_DropletFileContext.prototype.Class = function() {
    return this.getToken(CPP14Parser.Class, 0);
};

Typeparameter_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typeparameter_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Typeparameter_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Typeparameter_DropletFileContext.prototype.Typename = function() {
    return this.getToken(CPP14Parser.Typename, 0);
};

Typeparameter_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Typeparameter_DropletFileContext.prototype.templateparameterlist = function() {
    return this.getTypedRuleContext(TemplateparameterlistContext,0);
};

Typeparameter_DropletFileContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

Typeparameter_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypeparameter_DropletFile(this);
	}
};

Typeparameter_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypeparameter_DropletFile(this);
	}
};




CPP14Parser.Typeparameter_DropletFileContext = Typeparameter_DropletFileContext;

CPP14Parser.prototype.typeparameter_DropletFile = function() {

    var localctx = new Typeparameter_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 728, CPP14Parser.RULE_typeparameter_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5170;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,592,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5113;
            this.match(CPP14Parser.Class);
            this.state = 5115;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5114;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5118;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 5117;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 5120;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5121;
            this.match(CPP14Parser.Class);
            this.state = 5123;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 5122;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 5125;
            this.match(CPP14Parser.Assign);
            this.state = 5126;
            this.typeid();
            this.state = 5127;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 5129;
            this.match(CPP14Parser.Typename);
            this.state = 5131;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5130;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5134;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 5133;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 5136;
            this.match(CPP14Parser.EOF);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 5137;
            this.match(CPP14Parser.Typename);
            this.state = 5139;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 5138;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 5141;
            this.match(CPP14Parser.Assign);
            this.state = 5142;
            this.typeid();
            this.state = 5143;
            this.match(CPP14Parser.EOF);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 5145;
            this.match(CPP14Parser.Template);
            this.state = 5146;
            this.match(CPP14Parser.Less);
            this.state = 5147;
            this.templateparameterlist(0);
            this.state = 5148;
            this.match(CPP14Parser.Greater);
            this.state = 5149;
            this.match(CPP14Parser.Class);
            this.state = 5151;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5150;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5154;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 5153;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 5156;
            this.match(CPP14Parser.EOF);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 5158;
            this.match(CPP14Parser.Template);
            this.state = 5159;
            this.match(CPP14Parser.Less);
            this.state = 5160;
            this.templateparameterlist(0);
            this.state = 5161;
            this.match(CPP14Parser.Greater);
            this.state = 5162;
            this.match(CPP14Parser.Class);
            this.state = 5164;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Identifier) {
                this.state = 5163;
                this.match(CPP14Parser.Identifier);
            }

            this.state = 5166;
            this.match(CPP14Parser.Assign);
            this.state = 5167;
            this.idexpression();
            this.state = 5168;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Simpletemplateid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_simpletemplateid_DropletFile;
    return this;
}

Simpletemplateid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Simpletemplateid_DropletFileContext.prototype.constructor = Simpletemplateid_DropletFileContext;

Simpletemplateid_DropletFileContext.prototype.templatename = function() {
    return this.getTypedRuleContext(TemplatenameContext,0);
};

Simpletemplateid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Simpletemplateid_DropletFileContext.prototype.templateargumentlist = function() {
    return this.getTypedRuleContext(TemplateargumentlistContext,0);
};

Simpletemplateid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterSimpletemplateid_DropletFile(this);
	}
};

Simpletemplateid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitSimpletemplateid_DropletFile(this);
	}
};




CPP14Parser.Simpletemplateid_DropletFileContext = Simpletemplateid_DropletFileContext;

CPP14Parser.prototype.simpletemplateid_DropletFile = function() {

    var localctx = new Simpletemplateid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 730, CPP14Parser.RULE_simpletemplateid_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5172;
        this.templatename();
        this.state = 5173;
        this.match(CPP14Parser.Less);
        this.state = 5175;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Union - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Volatile - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
            this.state = 5174;
            this.templateargumentlist(0);
        }

        this.state = 5177;
        this.match(CPP14Parser.Greater);
        this.state = 5178;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Templateid_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateid_DropletFile;
    return this;
}

Templateid_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Templateid_DropletFileContext.prototype.constructor = Templateid_DropletFileContext;

Templateid_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Templateid_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Templateid_DropletFileContext.prototype.operatorfunctionid = function() {
    return this.getTypedRuleContext(OperatorfunctionidContext,0);
};

Templateid_DropletFileContext.prototype.templateargumentlist = function() {
    return this.getTypedRuleContext(TemplateargumentlistContext,0);
};

Templateid_DropletFileContext.prototype.literaloperatorid = function() {
    return this.getTypedRuleContext(LiteraloperatoridContext,0);
};

Templateid_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateid_DropletFile(this);
	}
};

Templateid_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateid_DropletFile(this);
	}
};




CPP14Parser.Templateid_DropletFileContext = Templateid_DropletFileContext;

CPP14Parser.prototype.templateid_DropletFile = function() {

    var localctx = new Templateid_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 732, CPP14Parser.RULE_templateid_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5199;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,596,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5180;
            this.simpletemplateid();
            this.state = 5181;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5183;
            this.operatorfunctionid();
            this.state = 5184;
            this.match(CPP14Parser.Less);
            this.state = 5186;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Union - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Volatile - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 5185;
                this.templateargumentlist(0);
            }

            this.state = 5188;
            this.match(CPP14Parser.Greater);
            this.state = 5189;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 5191;
            this.literaloperatorid();
            this.state = 5192;
            this.match(CPP14Parser.Less);
            this.state = 5194;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.Enum) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.Struct - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 65)) & ~0x1f) == 0 && ((1 << (_la - 65)) & ((1 << (CPP14Parser.True - 65)) | (1 << (CPP14Parser.Typeid - 65)) | (1 << (CPP14Parser.Typename - 65)) | (1 << (CPP14Parser.Union - 65)) | (1 << (CPP14Parser.Unsigned - 65)) | (1 << (CPP14Parser.Void - 65)) | (1 << (CPP14Parser.Volatile - 65)) | (1 << (CPP14Parser.Wchar - 65)) | (1 << (CPP14Parser.LeftParen - 65)) | (1 << (CPP14Parser.LeftBracket - 65)) | (1 << (CPP14Parser.Plus - 65)) | (1 << (CPP14Parser.Minus - 65)) | (1 << (CPP14Parser.Star - 65)) | (1 << (CPP14Parser.And - 65)) | (1 << (CPP14Parser.Or - 65)) | (1 << (CPP14Parser.Tilde - 65)) | (1 << (CPP14Parser.Not - 65)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
                this.state = 5193;
                this.templateargumentlist(0);
            }

            this.state = 5196;
            this.match(CPP14Parser.Greater);
            this.state = 5197;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Templatename_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templatename_DropletFile;
    return this;
}

Templatename_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Templatename_DropletFileContext.prototype.constructor = Templatename_DropletFileContext;

Templatename_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Templatename_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Templatename_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplatename_DropletFile(this);
	}
};

Templatename_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplatename_DropletFile(this);
	}
};




CPP14Parser.Templatename_DropletFileContext = Templatename_DropletFileContext;

CPP14Parser.prototype.templatename_DropletFile = function() {

    var localctx = new Templatename_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 734, CPP14Parser.RULE_templatename_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5201;
        this.match(CPP14Parser.Identifier);
        this.state = 5202;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Templateargumentlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateargumentlist_DropletFile;
    return this;
}

Templateargumentlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Templateargumentlist_DropletFileContext.prototype.constructor = Templateargumentlist_DropletFileContext;

Templateargumentlist_DropletFileContext.prototype.templateargument = function() {
    return this.getTypedRuleContext(TemplateargumentContext,0);
};

Templateargumentlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Templateargumentlist_DropletFileContext.prototype.templateargumentlist = function() {
    return this.getTypedRuleContext(TemplateargumentlistContext,0);
};

Templateargumentlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateargumentlist_DropletFile(this);
	}
};

Templateargumentlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateargumentlist_DropletFile(this);
	}
};




CPP14Parser.Templateargumentlist_DropletFileContext = Templateargumentlist_DropletFileContext;

CPP14Parser.prototype.templateargumentlist_DropletFile = function() {

    var localctx = new Templateargumentlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 736, CPP14Parser.RULE_templateargumentlist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5218;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,599,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5204;
            this.templateargument();
            this.state = 5206;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5205;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5208;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5210;
            this.templateargumentlist(0);
            this.state = 5211;
            this.match(CPP14Parser.Comma);
            this.state = 5212;
            this.templateargument();
            this.state = 5214;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5213;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5216;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Templateargument_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_templateargument_DropletFile;
    return this;
}

Templateargument_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Templateargument_DropletFileContext.prototype.constructor = Templateargument_DropletFileContext;

Templateargument_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Templateargument_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Templateargument_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Templateargument_DropletFileContext.prototype.idexpression = function() {
    return this.getTypedRuleContext(IdexpressionContext,0);
};

Templateargument_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTemplateargument_DropletFile(this);
	}
};

Templateargument_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTemplateargument_DropletFile(this);
	}
};




CPP14Parser.Templateargument_DropletFileContext = Templateargument_DropletFileContext;

CPP14Parser.prototype.templateargument_DropletFile = function() {

    var localctx = new Templateargument_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 738, CPP14Parser.RULE_templateargument_DropletFile);
    try {
        this.state = 5229;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,600,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5220;
            this.typeid();
            this.state = 5221;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5223;
            this.constantexpression();
            this.state = 5224;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 5226;
            this.idexpression();
            this.state = 5227;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typenamespecifier_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typenamespecifier_DropletFile;
    return this;
}

Typenamespecifier_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typenamespecifier_DropletFileContext.prototype.constructor = Typenamespecifier_DropletFileContext;

Typenamespecifier_DropletFileContext.prototype.Typename = function() {
    return this.getToken(CPP14Parser.Typename, 0);
};

Typenamespecifier_DropletFileContext.prototype.nestednamespecifier = function() {
    return this.getTypedRuleContext(NestednamespecifierContext,0);
};

Typenamespecifier_DropletFileContext.prototype.Identifier = function() {
    return this.getToken(CPP14Parser.Identifier, 0);
};

Typenamespecifier_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typenamespecifier_DropletFileContext.prototype.simpletemplateid = function() {
    return this.getTypedRuleContext(SimpletemplateidContext,0);
};

Typenamespecifier_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Typenamespecifier_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypenamespecifier_DropletFile(this);
	}
};

Typenamespecifier_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypenamespecifier_DropletFile(this);
	}
};




CPP14Parser.Typenamespecifier_DropletFileContext = Typenamespecifier_DropletFileContext;

CPP14Parser.prototype.typenamespecifier_DropletFile = function() {

    var localctx = new Typenamespecifier_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 740, CPP14Parser.RULE_typenamespecifier_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5244;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,602,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5231;
            this.match(CPP14Parser.Typename);
            this.state = 5232;
            this.nestednamespecifier(0);
            this.state = 5233;
            this.match(CPP14Parser.Identifier);
            this.state = 5234;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5236;
            this.match(CPP14Parser.Typename);
            this.state = 5237;
            this.nestednamespecifier(0);
            this.state = 5239;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Template) {
                this.state = 5238;
                this.match(CPP14Parser.Template);
            }

            this.state = 5241;
            this.simpletemplateid();
            this.state = 5242;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Explicitinstantiation_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_explicitinstantiation_DropletFile;
    return this;
}

Explicitinstantiation_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Explicitinstantiation_DropletFileContext.prototype.constructor = Explicitinstantiation_DropletFileContext;

Explicitinstantiation_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Explicitinstantiation_DropletFileContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

Explicitinstantiation_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Explicitinstantiation_DropletFileContext.prototype.Extern = function() {
    return this.getToken(CPP14Parser.Extern, 0);
};

Explicitinstantiation_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExplicitinstantiation_DropletFile(this);
	}
};

Explicitinstantiation_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExplicitinstantiation_DropletFile(this);
	}
};




CPP14Parser.Explicitinstantiation_DropletFileContext = Explicitinstantiation_DropletFileContext;

CPP14Parser.prototype.explicitinstantiation_DropletFile = function() {

    var localctx = new Explicitinstantiation_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 742, CPP14Parser.RULE_explicitinstantiation_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5247;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Extern) {
            this.state = 5246;
            this.match(CPP14Parser.Extern);
        }

        this.state = 5249;
        this.match(CPP14Parser.Template);
        this.state = 5250;
        this.declaration();
        this.state = 5251;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Explicitspecialization_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_explicitspecialization_DropletFile;
    return this;
}

Explicitspecialization_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Explicitspecialization_DropletFileContext.prototype.constructor = Explicitspecialization_DropletFileContext;

Explicitspecialization_DropletFileContext.prototype.Template = function() {
    return this.getToken(CPP14Parser.Template, 0);
};

Explicitspecialization_DropletFileContext.prototype.declaration = function() {
    return this.getTypedRuleContext(DeclarationContext,0);
};

Explicitspecialization_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Explicitspecialization_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExplicitspecialization_DropletFile(this);
	}
};

Explicitspecialization_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExplicitspecialization_DropletFile(this);
	}
};




CPP14Parser.Explicitspecialization_DropletFileContext = Explicitspecialization_DropletFileContext;

CPP14Parser.prototype.explicitspecialization_DropletFile = function() {

    var localctx = new Explicitspecialization_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 744, CPP14Parser.RULE_explicitspecialization_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5253;
        this.match(CPP14Parser.Template);
        this.state = 5254;
        this.match(CPP14Parser.Less);
        this.state = 5255;
        this.match(CPP14Parser.Greater);
        this.state = 5256;
        this.declaration();
        this.state = 5257;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Tryblock_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_tryblock_DropletFile;
    return this;
}

Tryblock_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Tryblock_DropletFileContext.prototype.constructor = Tryblock_DropletFileContext;

Tryblock_DropletFileContext.prototype.Try = function() {
    return this.getToken(CPP14Parser.Try, 0);
};

Tryblock_DropletFileContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

Tryblock_DropletFileContext.prototype.handlerseq = function() {
    return this.getTypedRuleContext(HandlerseqContext,0);
};

Tryblock_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Tryblock_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTryblock_DropletFile(this);
	}
};

Tryblock_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTryblock_DropletFile(this);
	}
};




CPP14Parser.Tryblock_DropletFileContext = Tryblock_DropletFileContext;

CPP14Parser.prototype.tryblock_DropletFile = function() {

    var localctx = new Tryblock_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 746, CPP14Parser.RULE_tryblock_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5259;
        this.match(CPP14Parser.Try);
        this.state = 5260;
        this.compoundstatement();
        this.state = 5261;
        this.handlerseq();
        this.state = 5262;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Functiontryblock_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_functiontryblock_DropletFile;
    return this;
}

Functiontryblock_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Functiontryblock_DropletFileContext.prototype.constructor = Functiontryblock_DropletFileContext;

Functiontryblock_DropletFileContext.prototype.Try = function() {
    return this.getToken(CPP14Parser.Try, 0);
};

Functiontryblock_DropletFileContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

Functiontryblock_DropletFileContext.prototype.handlerseq = function() {
    return this.getTypedRuleContext(HandlerseqContext,0);
};

Functiontryblock_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Functiontryblock_DropletFileContext.prototype.ctorinitializer = function() {
    return this.getTypedRuleContext(CtorinitializerContext,0);
};

Functiontryblock_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterFunctiontryblock_DropletFile(this);
	}
};

Functiontryblock_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitFunctiontryblock_DropletFile(this);
	}
};




CPP14Parser.Functiontryblock_DropletFileContext = Functiontryblock_DropletFileContext;

CPP14Parser.prototype.functiontryblock_DropletFile = function() {

    var localctx = new Functiontryblock_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 748, CPP14Parser.RULE_functiontryblock_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5264;
        this.match(CPP14Parser.Try);
        this.state = 5266;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Colon) {
            this.state = 5265;
            this.ctorinitializer();
        }

        this.state = 5268;
        this.compoundstatement();
        this.state = 5269;
        this.handlerseq();
        this.state = 5270;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Handlerseq_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_handlerseq_DropletFile;
    return this;
}

Handlerseq_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Handlerseq_DropletFileContext.prototype.constructor = Handlerseq_DropletFileContext;

Handlerseq_DropletFileContext.prototype.handler = function() {
    return this.getTypedRuleContext(HandlerContext,0);
};

Handlerseq_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Handlerseq_DropletFileContext.prototype.handlerseq = function() {
    return this.getTypedRuleContext(HandlerseqContext,0);
};

Handlerseq_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterHandlerseq_DropletFile(this);
	}
};

Handlerseq_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitHandlerseq_DropletFile(this);
	}
};




CPP14Parser.Handlerseq_DropletFileContext = Handlerseq_DropletFileContext;

CPP14Parser.prototype.handlerseq_DropletFile = function() {

    var localctx = new Handlerseq_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 750, CPP14Parser.RULE_handlerseq_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5272;
        this.handler();
        this.state = 5274;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la===CPP14Parser.Catch) {
            this.state = 5273;
            this.handlerseq();
        }

        this.state = 5276;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Handler_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_handler_DropletFile;
    return this;
}

Handler_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Handler_DropletFileContext.prototype.constructor = Handler_DropletFileContext;

Handler_DropletFileContext.prototype.Catch = function() {
    return this.getToken(CPP14Parser.Catch, 0);
};

Handler_DropletFileContext.prototype.exceptiondeclaration = function() {
    return this.getTypedRuleContext(ExceptiondeclarationContext,0);
};

Handler_DropletFileContext.prototype.compoundstatement = function() {
    return this.getTypedRuleContext(CompoundstatementContext,0);
};

Handler_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Handler_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterHandler_DropletFile(this);
	}
};

Handler_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitHandler_DropletFile(this);
	}
};




CPP14Parser.Handler_DropletFileContext = Handler_DropletFileContext;

CPP14Parser.prototype.handler_DropletFile = function() {

    var localctx = new Handler_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 752, CPP14Parser.RULE_handler_DropletFile);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5278;
        this.match(CPP14Parser.Catch);
        this.state = 5279;
        this.match(CPP14Parser.LeftParen);
        this.state = 5280;
        this.exceptiondeclaration();
        this.state = 5281;
        this.match(CPP14Parser.RightParen);
        this.state = 5282;
        this.compoundstatement();
        this.state = 5283;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Exceptiondeclaration_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_exceptiondeclaration_DropletFile;
    return this;
}

Exceptiondeclaration_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Exceptiondeclaration_DropletFileContext.prototype.constructor = Exceptiondeclaration_DropletFileContext;

Exceptiondeclaration_DropletFileContext.prototype.typespecifierseq = function() {
    return this.getTypedRuleContext(TypespecifierseqContext,0);
};

Exceptiondeclaration_DropletFileContext.prototype.declarator = function() {
    return this.getTypedRuleContext(DeclaratorContext,0);
};

Exceptiondeclaration_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Exceptiondeclaration_DropletFileContext.prototype.attributespecifierseq = function() {
    return this.getTypedRuleContext(AttributespecifierseqContext,0);
};

Exceptiondeclaration_DropletFileContext.prototype.abstractdeclarator = function() {
    return this.getTypedRuleContext(AbstractdeclaratorContext,0);
};

Exceptiondeclaration_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExceptiondeclaration_DropletFile(this);
	}
};

Exceptiondeclaration_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExceptiondeclaration_DropletFile(this);
	}
};




CPP14Parser.Exceptiondeclaration_DropletFileContext = Exceptiondeclaration_DropletFileContext;

CPP14Parser.prototype.exceptiondeclaration_DropletFile = function() {

    var localctx = new Exceptiondeclaration_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 754, CPP14Parser.RULE_exceptiondeclaration_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5303;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,609,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5286;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 5285;
                this.attributespecifierseq(0);
            }

            this.state = 5288;
            this.typespecifierseq();
            this.state = 5289;
            this.declarator();
            this.state = 5290;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5293;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Alignas || _la===CPP14Parser.LeftBracket) {
                this.state = 5292;
                this.attributespecifierseq(0);
            }

            this.state = 5295;
            this.typespecifierseq();
            this.state = 5297;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Decltype || ((((_la - 78)) & ~0x1f) == 0 && ((1 << (_la - 78)) & ((1 << (CPP14Parser.LeftParen - 78)) | (1 << (CPP14Parser.LeftBracket - 78)) | (1 << (CPP14Parser.Star - 78)) | (1 << (CPP14Parser.And - 78)))) !== 0) || ((((_la - 111)) & ~0x1f) == 0 && ((1 << (_la - 111)) & ((1 << (CPP14Parser.AndAnd - 111)) | (1 << (CPP14Parser.Doublecolon - 111)) | (1 << (CPP14Parser.Ellipsis - 111)) | (1 << (CPP14Parser.Identifier - 111)))) !== 0)) {
                this.state = 5296;
                this.abstractdeclarator();
            }

            this.state = 5299;
            this.match(CPP14Parser.EOF);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 5301;
            this.match(CPP14Parser.Ellipsis);
            this.state = 5302;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Throwexpression_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_throwexpression_DropletFile;
    return this;
}

Throwexpression_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Throwexpression_DropletFileContext.prototype.constructor = Throwexpression_DropletFileContext;

Throwexpression_DropletFileContext.prototype.Throw = function() {
    return this.getToken(CPP14Parser.Throw, 0);
};

Throwexpression_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Throwexpression_DropletFileContext.prototype.assignmentexpression = function() {
    return this.getTypedRuleContext(AssignmentexpressionContext,0);
};

Throwexpression_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterThrowexpression_DropletFile(this);
	}
};

Throwexpression_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitThrowexpression_DropletFile(this);
	}
};




CPP14Parser.Throwexpression_DropletFileContext = Throwexpression_DropletFileContext;

CPP14Parser.prototype.throwexpression_DropletFile = function() {

    var localctx = new Throwexpression_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 756, CPP14Parser.RULE_throwexpression_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5305;
        this.match(CPP14Parser.Throw);
        this.state = 5307;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Alignof) | (1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Const_cast) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Delete) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Dynamic_cast) | (1 << CPP14Parser.False))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.New - 32)) | (1 << (CPP14Parser.Noexcept - 32)) | (1 << (CPP14Parser.Nullptr - 32)) | (1 << (CPP14Parser.Operator - 32)) | (1 << (CPP14Parser.Reinterpret_cast - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Sizeof - 32)) | (1 << (CPP14Parser.Static_cast - 32)) | (1 << (CPP14Parser.This - 32)))) !== 0) || ((((_la - 64)) & ~0x1f) == 0 && ((1 << (_la - 64)) & ((1 << (CPP14Parser.Throw - 64)) | (1 << (CPP14Parser.True - 64)) | (1 << (CPP14Parser.Typeid - 64)) | (1 << (CPP14Parser.Typename - 64)) | (1 << (CPP14Parser.Unsigned - 64)) | (1 << (CPP14Parser.Void - 64)) | (1 << (CPP14Parser.Wchar - 64)) | (1 << (CPP14Parser.LeftParen - 64)) | (1 << (CPP14Parser.LeftBracket - 64)) | (1 << (CPP14Parser.Plus - 64)) | (1 << (CPP14Parser.Minus - 64)) | (1 << (CPP14Parser.Star - 64)) | (1 << (CPP14Parser.And - 64)) | (1 << (CPP14Parser.Or - 64)) | (1 << (CPP14Parser.Tilde - 64)) | (1 << (CPP14Parser.Not - 64)))) !== 0) || ((((_la - 113)) & ~0x1f) == 0 && ((1 << (_la - 113)) & ((1 << (CPP14Parser.PlusPlus - 113)) | (1 << (CPP14Parser.MinusMinus - 113)) | (1 << (CPP14Parser.Doublecolon - 113)) | (1 << (CPP14Parser.Identifier - 113)) | (1 << (CPP14Parser.Integerliteral - 113)) | (1 << (CPP14Parser.Characterliteral - 113)) | (1 << (CPP14Parser.Floatingliteral - 113)) | (1 << (CPP14Parser.Stringliteral - 113)) | (1 << (CPP14Parser.Userdefinedintegerliteral - 113)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 113)) | (1 << (CPP14Parser.Userdefinedstringliteral - 113)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 113)))) !== 0)) {
            this.state = 5306;
            this.assignmentexpression();
        }

        this.state = 5309;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Exceptionspecification_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_exceptionspecification_DropletFile;
    return this;
}

Exceptionspecification_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Exceptionspecification_DropletFileContext.prototype.constructor = Exceptionspecification_DropletFileContext;

Exceptionspecification_DropletFileContext.prototype.dynamicexceptionspecification = function() {
    return this.getTypedRuleContext(DynamicexceptionspecificationContext,0);
};

Exceptionspecification_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Exceptionspecification_DropletFileContext.prototype.noexceptspecification = function() {
    return this.getTypedRuleContext(NoexceptspecificationContext,0);
};

Exceptionspecification_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterExceptionspecification_DropletFile(this);
	}
};

Exceptionspecification_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitExceptionspecification_DropletFile(this);
	}
};




CPP14Parser.Exceptionspecification_DropletFileContext = Exceptionspecification_DropletFileContext;

CPP14Parser.prototype.exceptionspecification_DropletFile = function() {

    var localctx = new Exceptionspecification_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 758, CPP14Parser.RULE_exceptionspecification_DropletFile);
    try {
        this.state = 5317;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Throw:
            this.enterOuterAlt(localctx, 1);
            this.state = 5311;
            this.dynamicexceptionspecification();
            this.state = 5312;
            this.match(CPP14Parser.EOF);
            break;
        case CPP14Parser.Noexcept:
            this.enterOuterAlt(localctx, 2);
            this.state = 5314;
            this.noexceptspecification();
            this.state = 5315;
            this.match(CPP14Parser.EOF);
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Dynamicexceptionspecification_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_dynamicexceptionspecification_DropletFile;
    return this;
}

Dynamicexceptionspecification_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Dynamicexceptionspecification_DropletFileContext.prototype.constructor = Dynamicexceptionspecification_DropletFileContext;

Dynamicexceptionspecification_DropletFileContext.prototype.Throw = function() {
    return this.getToken(CPP14Parser.Throw, 0);
};

Dynamicexceptionspecification_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Dynamicexceptionspecification_DropletFileContext.prototype.typeidlist = function() {
    return this.getTypedRuleContext(TypeidlistContext,0);
};

Dynamicexceptionspecification_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterDynamicexceptionspecification_DropletFile(this);
	}
};

Dynamicexceptionspecification_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitDynamicexceptionspecification_DropletFile(this);
	}
};




CPP14Parser.Dynamicexceptionspecification_DropletFileContext = Dynamicexceptionspecification_DropletFileContext;

CPP14Parser.prototype.dynamicexceptionspecification_DropletFile = function() {

    var localctx = new Dynamicexceptionspecification_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 760, CPP14Parser.RULE_dynamicexceptionspecification_DropletFile);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5319;
        this.match(CPP14Parser.Throw);
        this.state = 5320;
        this.match(CPP14Parser.LeftParen);
        this.state = 5322;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if((((_la) & ~0x1f) == 0 && ((1 << _la) & ((1 << CPP14Parser.Auto) | (1 << CPP14Parser.Bool) | (1 << CPP14Parser.Char) | (1 << CPP14Parser.Char16) | (1 << CPP14Parser.Char32) | (1 << CPP14Parser.Class) | (1 << CPP14Parser.Const) | (1 << CPP14Parser.Decltype) | (1 << CPP14Parser.Double) | (1 << CPP14Parser.Enum))) !== 0) || ((((_la - 32)) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (CPP14Parser.Float - 32)) | (1 << (CPP14Parser.Int - 32)) | (1 << (CPP14Parser.Long - 32)) | (1 << (CPP14Parser.Short - 32)) | (1 << (CPP14Parser.Signed - 32)) | (1 << (CPP14Parser.Struct - 32)))) !== 0) || ((((_la - 69)) & ~0x1f) == 0 && ((1 << (_la - 69)) & ((1 << (CPP14Parser.Typename - 69)) | (1 << (CPP14Parser.Union - 69)) | (1 << (CPP14Parser.Unsigned - 69)) | (1 << (CPP14Parser.Void - 69)) | (1 << (CPP14Parser.Volatile - 69)) | (1 << (CPP14Parser.Wchar - 69)))) !== 0) || _la===CPP14Parser.Doublecolon || _la===CPP14Parser.Identifier) {
            this.state = 5321;
            this.typeidlist(0);
        }

        this.state = 5324;
        this.match(CPP14Parser.RightParen);
        this.state = 5325;
        this.match(CPP14Parser.EOF);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Typeidlist_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_typeidlist_DropletFile;
    return this;
}

Typeidlist_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Typeidlist_DropletFileContext.prototype.constructor = Typeidlist_DropletFileContext;

Typeidlist_DropletFileContext.prototype.typeid = function() {
    return this.getTypedRuleContext(TypeidContext,0);
};

Typeidlist_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Typeidlist_DropletFileContext.prototype.typeidlist = function() {
    return this.getTypedRuleContext(TypeidlistContext,0);
};

Typeidlist_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterTypeidlist_DropletFile(this);
	}
};

Typeidlist_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitTypeidlist_DropletFile(this);
	}
};




CPP14Parser.Typeidlist_DropletFileContext = Typeidlist_DropletFileContext;

CPP14Parser.prototype.typeidlist_DropletFile = function() {

    var localctx = new Typeidlist_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 762, CPP14Parser.RULE_typeidlist_DropletFile);
    var _la = 0; // Token type
    try {
        this.state = 5341;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,615,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5327;
            this.typeid();
            this.state = 5329;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5328;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5331;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5333;
            this.typeidlist(0);
            this.state = 5334;
            this.match(CPP14Parser.Comma);
            this.state = 5335;
            this.typeid();
            this.state = 5337;
            this._errHandler.sync(this);
            _la = this._input.LA(1);
            if(_la===CPP14Parser.Ellipsis) {
                this.state = 5336;
                this.match(CPP14Parser.Ellipsis);
            }

            this.state = 5339;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function Noexceptspecification_DropletFileContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_noexceptspecification_DropletFile;
    return this;
}

Noexceptspecification_DropletFileContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Noexceptspecification_DropletFileContext.prototype.constructor = Noexceptspecification_DropletFileContext;

Noexceptspecification_DropletFileContext.prototype.Noexcept = function() {
    return this.getToken(CPP14Parser.Noexcept, 0);
};

Noexceptspecification_DropletFileContext.prototype.constantexpression = function() {
    return this.getTypedRuleContext(ConstantexpressionContext,0);
};

Noexceptspecification_DropletFileContext.prototype.EOF = function() {
    return this.getToken(CPP14Parser.EOF, 0);
};

Noexceptspecification_DropletFileContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterNoexceptspecification_DropletFile(this);
	}
};

Noexceptspecification_DropletFileContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitNoexceptspecification_DropletFile(this);
	}
};




CPP14Parser.Noexceptspecification_DropletFileContext = Noexceptspecification_DropletFileContext;

CPP14Parser.prototype.noexceptspecification_DropletFile = function() {

    var localctx = new Noexceptspecification_DropletFileContext(this, this._ctx, this.state);
    this.enterRule(localctx, 764, CPP14Parser.RULE_noexceptspecification_DropletFile);
    try {
        this.state = 5351;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,616,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5343;
            this.match(CPP14Parser.Noexcept);
            this.state = 5344;
            this.match(CPP14Parser.LeftParen);
            this.state = 5345;
            this.constantexpression();
            this.state = 5346;
            this.match(CPP14Parser.RightParen);
            this.state = 5347;
            this.match(CPP14Parser.EOF);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5349;
            this.match(CPP14Parser.Noexcept);
            this.state = 5350;
            this.match(CPP14Parser.EOF);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RightShiftContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_rightShift;
    return this;
}

RightShiftContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RightShiftContext.prototype.constructor = RightShiftContext;

RightShiftContext.prototype.Greater = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.Greater);
    } else {
        return this.getToken(CPP14Parser.Greater, i);
    }
};


RightShiftContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterRightShift(this);
	}
};

RightShiftContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitRightShift(this);
	}
};




CPP14Parser.RightShiftContext = RightShiftContext;

CPP14Parser.prototype.rightShift = function() {

    var localctx = new RightShiftContext(this, this._ctx, this.state);
    this.enterRule(localctx, 766, CPP14Parser.RULE_rightShift);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5353;
        this.match(CPP14Parser.Greater);
        this.state = 5354;
        this.match(CPP14Parser.Greater);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function RightShiftAssignContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_rightShiftAssign;
    return this;
}

RightShiftAssignContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RightShiftAssignContext.prototype.constructor = RightShiftAssignContext;

RightShiftAssignContext.prototype.Greater = function(i) {
	if(i===undefined) {
		i = null;
	}
    if(i===null) {
        return this.getTokens(CPP14Parser.Greater);
    } else {
        return this.getToken(CPP14Parser.Greater, i);
    }
};


RightShiftAssignContext.prototype.Assign = function() {
    return this.getToken(CPP14Parser.Assign, 0);
};

RightShiftAssignContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterRightShiftAssign(this);
	}
};

RightShiftAssignContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitRightShiftAssign(this);
	}
};




CPP14Parser.RightShiftAssignContext = RightShiftAssignContext;

CPP14Parser.prototype.rightShiftAssign = function() {

    var localctx = new RightShiftAssignContext(this, this._ctx, this.state);
    this.enterRule(localctx, 768, CPP14Parser.RULE_rightShiftAssign);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5356;
        this.match(CPP14Parser.Greater);
        this.state = 5357;
        this.match(CPP14Parser.Greater);
        this.state = 5358;
        this.match(CPP14Parser.Assign);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function OperatorContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_operator;
    return this;
}

OperatorContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OperatorContext.prototype.constructor = OperatorContext;

OperatorContext.prototype.New = function() {
    return this.getToken(CPP14Parser.New, 0);
};

OperatorContext.prototype.Delete = function() {
    return this.getToken(CPP14Parser.Delete, 0);
};

OperatorContext.prototype.rightShift = function() {
    return this.getTypedRuleContext(RightShiftContext,0);
};

OperatorContext.prototype.rightShiftAssign = function() {
    return this.getTypedRuleContext(RightShiftAssignContext,0);
};

OperatorContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterOperator(this);
	}
};

OperatorContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitOperator(this);
	}
};




CPP14Parser.OperatorContext = OperatorContext;

CPP14Parser.prototype.operator = function() {

    var localctx = new OperatorContext(this, this._ctx, this.state);
    this.enterRule(localctx, 770, CPP14Parser.RULE_operator);
    try {
        this.state = 5408;
        this._errHandler.sync(this);
        var la_ = this._interp.adaptivePredict(this._input,617,this._ctx);
        switch(la_) {
        case 1:
            this.enterOuterAlt(localctx, 1);
            this.state = 5360;
            this.match(CPP14Parser.New);
            break;

        case 2:
            this.enterOuterAlt(localctx, 2);
            this.state = 5361;
            this.match(CPP14Parser.Delete);
            break;

        case 3:
            this.enterOuterAlt(localctx, 3);
            this.state = 5362;
            this.match(CPP14Parser.New);
            this.state = 5363;
            this.match(CPP14Parser.LeftBracket);
            this.state = 5364;
            this.match(CPP14Parser.RightBracket);
            break;

        case 4:
            this.enterOuterAlt(localctx, 4);
            this.state = 5365;
            this.match(CPP14Parser.Delete);
            this.state = 5366;
            this.match(CPP14Parser.LeftBracket);
            this.state = 5367;
            this.match(CPP14Parser.RightBracket);
            break;

        case 5:
            this.enterOuterAlt(localctx, 5);
            this.state = 5368;
            this.match(CPP14Parser.Plus);
            break;

        case 6:
            this.enterOuterAlt(localctx, 6);
            this.state = 5369;
            this.match(CPP14Parser.Minus);
            break;

        case 7:
            this.enterOuterAlt(localctx, 7);
            this.state = 5370;
            this.match(CPP14Parser.Star);
            break;

        case 8:
            this.enterOuterAlt(localctx, 8);
            this.state = 5371;
            this.match(CPP14Parser.Div);
            break;

        case 9:
            this.enterOuterAlt(localctx, 9);
            this.state = 5372;
            this.match(CPP14Parser.Mod);
            break;

        case 10:
            this.enterOuterAlt(localctx, 10);
            this.state = 5373;
            this.match(CPP14Parser.Caret);
            break;

        case 11:
            this.enterOuterAlt(localctx, 11);
            this.state = 5374;
            this.match(CPP14Parser.And);
            break;

        case 12:
            this.enterOuterAlt(localctx, 12);
            this.state = 5375;
            this.match(CPP14Parser.Or);
            break;

        case 13:
            this.enterOuterAlt(localctx, 13);
            this.state = 5376;
            this.match(CPP14Parser.Tilde);
            break;

        case 14:
            this.enterOuterAlt(localctx, 14);
            this.state = 5377;
            this.match(CPP14Parser.Not);
            break;

        case 15:
            this.enterOuterAlt(localctx, 15);
            this.state = 5378;
            this.match(CPP14Parser.Assign);
            break;

        case 16:
            this.enterOuterAlt(localctx, 16);
            this.state = 5379;
            this.match(CPP14Parser.Less);
            break;

        case 17:
            this.enterOuterAlt(localctx, 17);
            this.state = 5380;
            this.match(CPP14Parser.Greater);
            break;

        case 18:
            this.enterOuterAlt(localctx, 18);
            this.state = 5381;
            this.match(CPP14Parser.PlusAssign);
            break;

        case 19:
            this.enterOuterAlt(localctx, 19);
            this.state = 5382;
            this.match(CPP14Parser.MinusAssign);
            break;

        case 20:
            this.enterOuterAlt(localctx, 20);
            this.state = 5383;
            this.match(CPP14Parser.StarAssign);
            break;

        case 21:
            this.enterOuterAlt(localctx, 21);
            this.state = 5384;
            this.match(CPP14Parser.DivAssign);
            break;

        case 22:
            this.enterOuterAlt(localctx, 22);
            this.state = 5385;
            this.match(CPP14Parser.ModAssign);
            break;

        case 23:
            this.enterOuterAlt(localctx, 23);
            this.state = 5386;
            this.match(CPP14Parser.XorAssign);
            break;

        case 24:
            this.enterOuterAlt(localctx, 24);
            this.state = 5387;
            this.match(CPP14Parser.AndAssign);
            break;

        case 25:
            this.enterOuterAlt(localctx, 25);
            this.state = 5388;
            this.match(CPP14Parser.OrAssign);
            break;

        case 26:
            this.enterOuterAlt(localctx, 26);
            this.state = 5389;
            this.match(CPP14Parser.LeftShift);
            break;

        case 27:
            this.enterOuterAlt(localctx, 27);
            this.state = 5390;
            this.rightShift();
            break;

        case 28:
            this.enterOuterAlt(localctx, 28);
            this.state = 5391;
            this.rightShiftAssign();
            break;

        case 29:
            this.enterOuterAlt(localctx, 29);
            this.state = 5392;
            this.match(CPP14Parser.LeftShiftAssign);
            break;

        case 30:
            this.enterOuterAlt(localctx, 30);
            this.state = 5393;
            this.match(CPP14Parser.Equal);
            break;

        case 31:
            this.enterOuterAlt(localctx, 31);
            this.state = 5394;
            this.match(CPP14Parser.NotEqual);
            break;

        case 32:
            this.enterOuterAlt(localctx, 32);
            this.state = 5395;
            this.match(CPP14Parser.LessEqual);
            break;

        case 33:
            this.enterOuterAlt(localctx, 33);
            this.state = 5396;
            this.match(CPP14Parser.GreaterEqual);
            break;

        case 34:
            this.enterOuterAlt(localctx, 34);
            this.state = 5397;
            this.match(CPP14Parser.AndAnd);
            break;

        case 35:
            this.enterOuterAlt(localctx, 35);
            this.state = 5398;
            this.match(CPP14Parser.OrOr);
            break;

        case 36:
            this.enterOuterAlt(localctx, 36);
            this.state = 5399;
            this.match(CPP14Parser.PlusPlus);
            break;

        case 37:
            this.enterOuterAlt(localctx, 37);
            this.state = 5400;
            this.match(CPP14Parser.MinusMinus);
            break;

        case 38:
            this.enterOuterAlt(localctx, 38);
            this.state = 5401;
            this.match(CPP14Parser.Comma);
            break;

        case 39:
            this.enterOuterAlt(localctx, 39);
            this.state = 5402;
            this.match(CPP14Parser.ArrowStar);
            break;

        case 40:
            this.enterOuterAlt(localctx, 40);
            this.state = 5403;
            this.match(CPP14Parser.Arrow);
            break;

        case 41:
            this.enterOuterAlt(localctx, 41);
            this.state = 5404;
            this.match(CPP14Parser.LeftParen);
            this.state = 5405;
            this.match(CPP14Parser.RightParen);
            break;

        case 42:
            this.enterOuterAlt(localctx, 42);
            this.state = 5406;
            this.match(CPP14Parser.LeftBracket);
            this.state = 5407;
            this.match(CPP14Parser.RightBracket);
            break;

        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function LiteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_literal;
    return this;
}

LiteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
LiteralContext.prototype.constructor = LiteralContext;

LiteralContext.prototype.Integerliteral = function() {
    return this.getToken(CPP14Parser.Integerliteral, 0);
};

LiteralContext.prototype.Characterliteral = function() {
    return this.getToken(CPP14Parser.Characterliteral, 0);
};

LiteralContext.prototype.Floatingliteral = function() {
    return this.getToken(CPP14Parser.Floatingliteral, 0);
};

LiteralContext.prototype.Stringliteral = function() {
    return this.getToken(CPP14Parser.Stringliteral, 0);
};

LiteralContext.prototype.booleanliteral = function() {
    return this.getTypedRuleContext(BooleanliteralContext,0);
};

LiteralContext.prototype.pointerliteral = function() {
    return this.getTypedRuleContext(PointerliteralContext,0);
};

LiteralContext.prototype.userdefinedliteral = function() {
    return this.getTypedRuleContext(UserdefinedliteralContext,0);
};

LiteralContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterLiteral(this);
	}
};

LiteralContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitLiteral(this);
	}
};




CPP14Parser.LiteralContext = LiteralContext;

CPP14Parser.prototype.literal = function() {

    var localctx = new LiteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 772, CPP14Parser.RULE_literal);
    try {
        this.state = 5417;
        this._errHandler.sync(this);
        switch(this._input.LA(1)) {
        case CPP14Parser.Integerliteral:
            this.enterOuterAlt(localctx, 1);
            this.state = 5410;
            this.match(CPP14Parser.Integerliteral);
            break;
        case CPP14Parser.Characterliteral:
            this.enterOuterAlt(localctx, 2);
            this.state = 5411;
            this.match(CPP14Parser.Characterliteral);
            break;
        case CPP14Parser.Floatingliteral:
            this.enterOuterAlt(localctx, 3);
            this.state = 5412;
            this.match(CPP14Parser.Floatingliteral);
            break;
        case CPP14Parser.Stringliteral:
            this.enterOuterAlt(localctx, 4);
            this.state = 5413;
            this.match(CPP14Parser.Stringliteral);
            break;
        case CPP14Parser.False:
        case CPP14Parser.True:
            this.enterOuterAlt(localctx, 5);
            this.state = 5414;
            this.booleanliteral();
            break;
        case CPP14Parser.Nullptr:
            this.enterOuterAlt(localctx, 6);
            this.state = 5415;
            this.pointerliteral();
            break;
        case CPP14Parser.Userdefinedintegerliteral:
        case CPP14Parser.Userdefinedfloatingliteral:
        case CPP14Parser.Userdefinedstringliteral:
        case CPP14Parser.Userdefinedcharacterliteral:
            this.enterOuterAlt(localctx, 7);
            this.state = 5416;
            this.userdefinedliteral();
            break;
        default:
            throw new antlr4.error.NoViableAltException(this);
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function BooleanliteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_booleanliteral;
    return this;
}

BooleanliteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BooleanliteralContext.prototype.constructor = BooleanliteralContext;

BooleanliteralContext.prototype.False = function() {
    return this.getToken(CPP14Parser.False, 0);
};

BooleanliteralContext.prototype.True = function() {
    return this.getToken(CPP14Parser.True, 0);
};

BooleanliteralContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterBooleanliteral(this);
	}
};

BooleanliteralContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitBooleanliteral(this);
	}
};




CPP14Parser.BooleanliteralContext = BooleanliteralContext;

CPP14Parser.prototype.booleanliteral = function() {

    var localctx = new BooleanliteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 774, CPP14Parser.RULE_booleanliteral);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5419;
        _la = this._input.LA(1);
        if(!(_la===CPP14Parser.False || _la===CPP14Parser.True)) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function PointerliteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_pointerliteral;
    return this;
}

PointerliteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
PointerliteralContext.prototype.constructor = PointerliteralContext;

PointerliteralContext.prototype.Nullptr = function() {
    return this.getToken(CPP14Parser.Nullptr, 0);
};

PointerliteralContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterPointerliteral(this);
	}
};

PointerliteralContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitPointerliteral(this);
	}
};




CPP14Parser.PointerliteralContext = PointerliteralContext;

CPP14Parser.prototype.pointerliteral = function() {

    var localctx = new PointerliteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 776, CPP14Parser.RULE_pointerliteral);
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5421;
        this.match(CPP14Parser.Nullptr);
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};

function UserdefinedliteralContext(parser, parent, invokingState) {
	if(parent===undefined) {
	    parent = null;
	}
	if(invokingState===undefined || invokingState===null) {
		invokingState = -1;
	}
	antlr4.ParserRuleContext.call(this, parent, invokingState);
    this.parser = parser;
    this.ruleIndex = CPP14Parser.RULE_userdefinedliteral;
    return this;
}

UserdefinedliteralContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UserdefinedliteralContext.prototype.constructor = UserdefinedliteralContext;

UserdefinedliteralContext.prototype.Userdefinedintegerliteral = function() {
    return this.getToken(CPP14Parser.Userdefinedintegerliteral, 0);
};

UserdefinedliteralContext.prototype.Userdefinedfloatingliteral = function() {
    return this.getToken(CPP14Parser.Userdefinedfloatingliteral, 0);
};

UserdefinedliteralContext.prototype.Userdefinedstringliteral = function() {
    return this.getToken(CPP14Parser.Userdefinedstringliteral, 0);
};

UserdefinedliteralContext.prototype.Userdefinedcharacterliteral = function() {
    return this.getToken(CPP14Parser.Userdefinedcharacterliteral, 0);
};

UserdefinedliteralContext.prototype.enterRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.enterUserdefinedliteral(this);
	}
};

UserdefinedliteralContext.prototype.exitRule = function(listener) {
    if(listener instanceof CPP14Listener ) {
        listener.exitUserdefinedliteral(this);
	}
};




CPP14Parser.UserdefinedliteralContext = UserdefinedliteralContext;

CPP14Parser.prototype.userdefinedliteral = function() {

    var localctx = new UserdefinedliteralContext(this, this._ctx, this.state);
    this.enterRule(localctx, 778, CPP14Parser.RULE_userdefinedliteral);
    var _la = 0; // Token type
    try {
        this.enterOuterAlt(localctx, 1);
        this.state = 5423;
        _la = this._input.LA(1);
        if(!(((((_la - 135)) & ~0x1f) == 0 && ((1 << (_la - 135)) & ((1 << (CPP14Parser.Userdefinedintegerliteral - 135)) | (1 << (CPP14Parser.Userdefinedfloatingliteral - 135)) | (1 << (CPP14Parser.Userdefinedstringliteral - 135)) | (1 << (CPP14Parser.Userdefinedcharacterliteral - 135)))) !== 0))) {
        this._errHandler.recoverInline(this);
        }
        else {
        	this._errHandler.reportMatch(this);
            this.consume();
        }
    } catch (re) {
    	if(re instanceof antlr4.error.RecognitionException) {
	        localctx.exception = re;
	        this._errHandler.reportError(this, re);
	        this._errHandler.recover(this, re);
	    } else {
	    	throw re;
	    }
    } finally {
        this.exitRule();
    }
    return localctx;
};


CPP14Parser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
	switch(ruleIndex) {
	case 5:
			return this.nestednamespecifier_sempred(localctx, predIndex);
	case 10:
			return this.capturelist_sempred(localctx, predIndex);
	case 15:
			return this.postfixexpression_sempred(localctx, predIndex);
	case 24:
			return this.noptrnewdeclarator_sempred(localctx, predIndex);
	case 29:
			return this.pmexpression_sempred(localctx, predIndex);
	case 30:
			return this.multiplicativeexpression_sempred(localctx, predIndex);
	case 31:
			return this.additiveexpression_sempred(localctx, predIndex);
	case 32:
			return this.shiftexpression_sempred(localctx, predIndex);
	case 33:
			return this.relationalexpression_sempred(localctx, predIndex);
	case 34:
			return this.equalityexpression_sempred(localctx, predIndex);
	case 35:
			return this.andexpression_sempred(localctx, predIndex);
	case 36:
			return this.exclusiveorexpression_sempred(localctx, predIndex);
	case 37:
			return this.inclusiveorexpression_sempred(localctx, predIndex);
	case 38:
			return this.logicalandexpression_sempred(localctx, predIndex);
	case 39:
			return this.logicalorexpression_sempred(localctx, predIndex);
	case 43:
			return this.expression_sempred(localctx, predIndex);
	case 49:
			return this.statementseq_sempred(localctx, predIndex);
	case 58:
			return this.declarationseq_sempred(localctx, predIndex);
	case 85:
			return this.enumeratorlist_sempred(localctx, predIndex);
	case 103:
			return this.attributespecifierseq_sempred(localctx, predIndex);
	case 106:
			return this.attributelist_sempred(localctx, predIndex);
	case 112:
			return this.balancedtokenseq_sempred(localctx, predIndex);
	case 114:
			return this.initdeclaratorlist_sempred(localctx, predIndex);
	case 118:
			return this.noptrdeclarator_sempred(localctx, predIndex);
	case 129:
			return this.noptrabstractdeclarator_sempred(localctx, predIndex);
	case 131:
			return this.noptrabstractpackdeclarator_sempred(localctx, predIndex);
	case 133:
			return this.parameterdeclarationlist_sempred(localctx, predIndex);
	case 140:
			return this.initializerlist_sempred(localctx, predIndex);
	case 150:
			return this.memberdeclaratorlist_sempred(localctx, predIndex);
	case 152:
			return this.virtspecifierseq_sempred(localctx, predIndex);
	case 156:
			return this.basespecifierlist_sempred(localctx, predIndex);
	case 171:
			return this.templateparameterlist_sempred(localctx, predIndex);
	case 177:
			return this.templateargumentlist_sempred(localctx, predIndex);
	case 190:
			return this.typeidlist_sempred(localctx, predIndex);
    default:
        throw "No predicate with index:" + ruleIndex;
   }
};

CPP14Parser.prototype.nestednamespecifier_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 0:
			return this.precpred(this._ctx, 2);
		case 1:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.capturelist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 2:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.postfixexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 3:
			return this.precpred(this._ctx, 19);
		case 4:
			return this.precpred(this._ctx, 18);
		case 5:
			return this.precpred(this._ctx, 17);
		case 6:
			return this.precpred(this._ctx, 12);
		case 7:
			return this.precpred(this._ctx, 11);
		case 8:
			return this.precpred(this._ctx, 10);
		case 9:
			return this.precpred(this._ctx, 9);
		case 10:
			return this.precpred(this._ctx, 8);
		case 11:
			return this.precpred(this._ctx, 7);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.noptrnewdeclarator_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 12:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.pmexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 13:
			return this.precpred(this._ctx, 2);
		case 14:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.multiplicativeexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 15:
			return this.precpred(this._ctx, 3);
		case 16:
			return this.precpred(this._ctx, 2);
		case 17:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.additiveexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 18:
			return this.precpred(this._ctx, 2);
		case 19:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.shiftexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 20:
			return this.precpred(this._ctx, 2);
		case 21:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.relationalexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 22:
			return this.precpred(this._ctx, 4);
		case 23:
			return this.precpred(this._ctx, 3);
		case 24:
			return this.precpred(this._ctx, 2);
		case 25:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.equalityexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 26:
			return this.precpred(this._ctx, 2);
		case 27:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.andexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 28:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.exclusiveorexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 29:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.inclusiveorexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 30:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.logicalandexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 31:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.logicalorexpression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 32:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.expression_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 33:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.statementseq_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 34:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.declarationseq_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 35:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.enumeratorlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 36:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.attributespecifierseq_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 37:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.attributelist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 38:
			return this.precpred(this._ctx, 3);
		case 39:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.balancedtokenseq_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 40:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.initdeclaratorlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 41:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.noptrdeclarator_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 42:
			return this.precpred(this._ctx, 3);
		case 43:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.noptrabstractdeclarator_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 44:
			return this.precpred(this._ctx, 5);
		case 45:
			return this.precpred(this._ctx, 3);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.noptrabstractpackdeclarator_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 46:
			return this.precpred(this._ctx, 3);
		case 47:
			return this.precpred(this._ctx, 2);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.parameterdeclarationlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 48:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.initializerlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 49:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.memberdeclaratorlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 50:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.virtspecifierseq_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 51:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.basespecifierlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 52:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.templateparameterlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 53:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.templateargumentlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 54:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};

CPP14Parser.prototype.typeidlist_sempred = function(localctx, predIndex) {
	switch(predIndex) {
		case 55:
			return this.precpred(this._ctx, 1);
		default:
			throw "No predicate with index:" + predIndex;
	}
};


exports.CPP14Parser = CPP14Parser;
